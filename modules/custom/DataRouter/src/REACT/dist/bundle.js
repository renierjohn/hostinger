/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={8430:function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map((e=>e.data()))),r.map((e=>e.dispose())),e.dispose()}async infer(e,t,r){const a=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=a.shape[1],i=a.shape[2],o=await this.model.executeAsync(a),l=o[0].dataSync(),u=o[1].dataSync();a.dispose(),n.dispose(o);const[c,d]=this.calculateMaxScores(l,o[0].shape[1],o[0].shape[2]),p=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const h=n.tidy((()=>{const e=n.tensor2d(u,[o[1].shape[1],o[1].shape[3]]);return n.image.nonMaxSuppression(e,c,t,r,r)})),f=h.dataSync();return h.dispose(),p!==n.getBackend()&&n.setBackend(p),this.buildDetectedObjects(i,s,u,c,f,d)}buildDetectedObjects(e,t,n,a,s,i){const o=s.length,l=[];for(let u=0;u<o;u++){const o=[];for(let e=0;e<4;e++)o[e]=n[4*s[u]+e];const c=o[0]*t,d=o[1]*e,p=o[2]*t,h=o[3]*e;o[0]=d,o[1]=c,o[2]=h-d,o[3]=p-c,l.push({bbox:o,class:r[i[s[u]]+1].displayName,score:a[s[u]]})}return l}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,i=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],i=r);r[s]=t,a[s]=i}return[r,a]}async detect(e,t=20,n=.5){return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(e={}){if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new a(t,r);return await s.load(),s},e.version="2.2.2",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(1445),n(2080))},1445:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>fr,deregisterOp:()=>E,loadGraphModel:()=>mr,registerOp:()=>T,version_converter:()=>gr});var r={};n.r(r),n.d(r,{json:()=>M});var a={};n.r(a),n.d(a,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>L});var i={};n.r(i),n.d(i,{json:()=>B});var o={};n.r(o),n.d(o,{json:()=>P});var l={};n.r(l),n.d(l,{json:()=>V});var u={};n.r(u),n.d(u,{json:()=>W});var c={};n.r(c),n.d(c,{json:()=>U});var d={};n.r(d),n.d(d,{json:()=>G});var p={};n.r(p),n.d(p,{json:()=>H});var h={};n.r(h),n.d(h,{json:()=>j});var f={};n.r(f),n.d(f,{json:()=>q});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>K});var y={};n.r(y),n.d(y,{json:()=>Q});var b={};n.r(b),n.d(b,{json:()=>Y});var x={};n.r(x),n.d(x,{json:()=>Z});var v={};n.r(v),n.d(v,{json:()=>J});var w={};n.r(w),n.d(w,{json:()=>ee});var k,S,N=n(2080);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(S||(S={}));const I={};function T(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function C(e){return I[e]}function E(e){delete I[e]}function $(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return _(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>_(e,n,r,a)));const o=_(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:N.util.toNestedArray(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function _(e,t,n,r){const[a,s]=F(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[R(a,e)]));return void 0!==i?t[R(a,i)][s]:void 0}function A(e,t){const[n,r,a]=F(e);return[R(n,t&&t.currentContextId),r,a]}function R(e,t){return t?`${e}-${t}`:e}function F(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function D(e,t,n){let r=$("pad",e,t,n);if("explicit"===r){r=$("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function O(e){return e.kept?e:(0,N.clone)(e)}const M=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],B=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],U=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],G=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],H=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],j=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],q=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],X=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],K=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Z=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],J=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class te{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,i,o,l,u,c,d,p,h,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=A(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=A(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=A(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=C(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=se(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=ae(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=A(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ie(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=A(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=A(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ne(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,N.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function re(e,t,n,r=!1){const a=e[t];return null!=a?ne(a.s,r):n}function ae(e,t,n){const r=e[t];return r?r.b:n}function se(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ie(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function le(e,t,n){const r=e[t];return r&&r.type?ie(r.type):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ie(e))):n}function ce(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function de(e,t,n){const r=e[t];return r&&r.shape?ce(r.shape):n}function pe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function he(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>ne(e,r))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ce(e))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ge{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return re(this.node.rawAttrs,e,t);if(null!=n.b)return ae(this.node.rawAttrs,e,t);if(null!=n.shape)return de(this.node.rawAttrs,e,t);if(null!=n.type)return le(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pe(this.node.rawAttrs,e,t);if(null!=n.list.s)return he(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fe(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return ue(this.node.rawAttrs,e,t)}return t}}var ye=n(7640),be=n(3835),xe=n(789),ve=n(3286),we=n(6453),ke=n(7133),Se=n(4308),Ne=n(7458),Ie=n(5874),Te=n(5792),Ce=n(4260),Ee=n(28),$e=n(6983),_e=n(4941),Ae=n(7839),Re=n(9520),Fe=n(9692),De=n(5090),Oe=n(4265),Me=n(9984),ze=n(5055),Le=n(5768),Be=n(2811),Pe=n(3369),Ve=n(9955),We=n(8807),Ue=n(2864),Ge=n(714),He=n(6891),je=n(1750),qe=n(9649),Xe=n(7329),Ke=n(3568),Qe=n(8550),Ye=n(3870),Ze=n(3697),Je=n(1684),et=n(7770),tt=n(9789),nt=n(1328),rt=n(6788),at=n(7755),st=n(8019),it=n(8260),ot=n(4013),lt=n(1815),ut=n(1148),ct=n(486),dt=n(9298),pt=n(149),ht=n(833),ft=n(5999),mt=n(8616),gt=n(4191);function yt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){N.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];N.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function bt(e){return"number"!=typeof e&&!e.some((e=>e<0))}function xt(e,t,n){let r=vt(e,n);const a=!bt(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=vt(e.shape,r)})),!bt(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function vt(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class wt{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,N.scalar)(0),(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),yt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,N.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,N.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return yt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,N.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,N.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return yt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,N.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,N.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,N.tidy)((()=>{t=(0,N.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=(0,N.reshape)((0,N.slice)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class kt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);yt(t,e.shape,"TensorList shape mismatch: "),(0,N.keep)(e)})),this.idTensor=(0,N.scalar)(0),this.maxNumElements=r,(0,N.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new kt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);yt(e,this.elementShape,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,e);return(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,r)));return(0,N.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xt(this.elementShape,this.tensors,e),r=this.tensors.pop();return yt(r.shape,e,"TensorList shape mismatch: "),(0,N.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(yt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,N.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);yt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,t);return(0,N.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);yt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,N.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);yt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xt(this.elementShape,this.tensors,n);return 0===e.length?(0,N.tensor)([],[0].concat(r)):(0,N.tidy)((()=>{const t=e.map((e=>(0,N.reshape)(this.tensors[e],r)));return(0,N.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);yt(this.elementShape,t,"TensorList shape mismatch: ");const n=xt(this.elementShape,this.tensors,t);return 0===this.size()?(0,N.tensor)([],[0].concat(n)):(0,N.tidy)((()=>{const e=this.tensors.map((e=>(0,N.reshape)(e,n)));return(0,N.concat)(e,0)}))}}var St=n(6086),Nt=n(1655),It=n(3850),Tt=n(3028),Ct=n(5633),Et=n(8820),$t=n(4614),_t=n(8881),At=n(2993),Rt=n(1124),Ft=n(8157),Dt=n(4113);function Ot(e,t,n){const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=$("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$("strides",e,t,n),d=D(e,t,n),p=$("dataFormat",e,t,n).toUpperCase(),h=$("dilations",e,t,n);let[f,m]=$("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:$("leakyreluAlpha",e,t,n)}}var Mt=n(8213),zt=n(3585),Lt=n(3191),Bt=n(2614),Pt=n(326),Vt=n(7145),Wt=n(9713),Ut=n(1593),Gt=n(4443),Ht=n(4731),jt=n(9433),qt=n(6087),Xt=n(3998),Kt=n(4611),Qt=n(2014);function Yt(e,t,n){return{boxes:$("boxes",e,t,n),scores:$("scores",e,t,n),maxOutputSize:$("maxOutputSize",e,t,n),iouThreshold:$("iouThreshold",e,t,n),scoreThreshold:$("scoreThreshold",e,t,n),softNmsSigma:$("softNmsSigma",e,t,n)}}var Zt=n(7972),Jt=n(4684),en=n(5038),tn=n(6606);class nn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,N.scalar)(0),this.tensorMap=new Map,(0,N.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tn.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,N.tidy)((()=>{const e=(0,N.unstack)(t),r=n.length,a=e.length;N.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,N.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,N.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,N.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var rn=n(9489),an=n(6568),sn=n(8733),on=n(7101),ln=n(7201),un=n(7544),cn=n(926),dn=n(3952),pn=n(8940),hn=n(13),fn=n(5375),mn=n(4678),gn=n(2298),yn=n(4066),bn=n(7352),xn=n(6266),vn=n(8948),wn=n(994),kn=n(7437),Sn=n(7104),Nn=n(5553),In=n(4661),Tn=n(1199),Cn=n(6159),En=n(6540),$n=n(2237),_n=n(294),An=n(691),Rn=n(7862),Fn=n(5307),Dn=n(9690),On=n(7789),Mn=n(1015),zn=n(225),Ln=n(8312),Bn=n(6488),Pn=n(6279),Vn=n(7537),Wn=n(3066),Un=n(3779),Gn=n(1758),Hn=n(5831),jn=n(9208),qn=n(8279),Xn=n(7664),Kn=n(9961),Qn=n(86),Yn=n(8237),Zn=n(3879),Jn=n(295),er=n(9327),tr=n(9805),nr=n(3024);function rr(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ye.I($("a",e,t,n),$("b",e,t,n))];case"AddN":return[be.Q($("tensors",e,t,n))];case"FloorMod":case"Mod":return[xe.w($("a",e,t,n),$("b",e,t,n))];case"Mul":return[ve.d($("a",e,t,n),$("b",e,t,n))];case"RealDiv":case"Div":return[we.h($("a",e,t,n),$("b",e,t,n))];case"DivNoNan":return[ke.N($("a",e,t,n),$("b",e,t,n))];case"FloorDiv":return[Se.q($("a",e,t,n),$("b",e,t,n))];case"Sub":return[Ne.l($("a",e,t,n),$("b",e,t,n))];case"Minimum":return[Ie.L($("a",e,t,n),$("b",e,t,n))];case"Maximum":return[Te.g($("a",e,t,n),$("b",e,t,n))];case"Pow":return[Ce.s($("a",e,t,n),$("b",e,t,n))];case"SquaredDifference":return[Ee.$($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[$e.W($("x",e,t,n))];case"Acos":return[_e.K($("x",e,t,n))];case"Acosh":return[Ae._($("x",e,t,n))];case"Asin":return[Re.Z($("x",e,t,n))];case"Asinh":return[Fe.V($("x",e,t,n))];case"Atan":return[De.z($("x",e,t,n))];case"Atan2":return[Oe.f($("x",e,t,n),$("y",e,t,n))];case"Atanh":return[Me.C($("x",e,t,n))];case"Ceil":return[ze.m($("x",e,t,n))];case"Complex":return[Le.P($("real",e,t,n),$("imag",e,t,n))];case"Cos":return[Be.m($("x",e,t,n))];case"Cosh":return[Pe.f($("x",e,t,n))];case"Elu":return[Ve.p($("x",e,t,n))];case"Erf":return[We.q($("x",e,t,n))];case"Exp":return[Ue.Q($("x",e,t,n))];case"Expm1":return[Ge.t($("x",e,t,n))];case"Floor":return[He.G($("x",e,t,n))];case"Log":return[je.c($("x",e,t,n))];case"Log1p":return[qe.K($("x",e,t,n))];case"Imag":return[Xe.a($("x",e,t,n))];case"Neg":return[Ke.W($("x",e,t,n))];case"Reciprocal":return[Qe.M($("x",e,t,n))];case"Real":return[Ye.k($("x",e,t,n))];case"Relu":return[Ze.U($("x",e,t,n))];case"Round":return[Je.N($("x",e,t,n))];case"Selu":return[et.U($("x",e,t,n))];case"Sigmoid":return[tt.X($("x",e,t,n))];case"Sin":return[nt.O($("x",e,t,n))];case"Sign":return[rt.X($("x",e,t,n))];case"Sinh":return[at.R($("x",e,t,n))];case"Softplus":return[st.W($("x",e,t,n))];case"Sqrt":return[it._($("x",e,t,n))];case"Square":return[ot.h($("x",e,t,n))];case"Tanh":return[lt.A($("x",e,t,n))];case"Tan":return[ut.O($("x",e,t,n))];case"ClipByValue":return[ct.i($("x",e,t,n),$("clipValueMin",e,t,n),$("clipValueMax",e,t,n))];case"Relu6":return[dt.b($("x",e,t,n))];case"Rsqrt":return[pt.b(_(e.inputNames[0],t,n))];case"Prod":return[ht.W($("x",e,t,n),$("axes",e,t,n))];case"LeakyRelu":return[ft.h($("x",e,t,n),$("alpha",e,t,n))];case"Prelu":return[mt.A($("x",e,t,n),$("alpha",e,t,n))];case"IsNan":return[gt.i(_(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$("thenBranch",e,t,n),a=$("elseBranch",e,t,n),s=$("cond",e,t,n),i=$("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",e,t,n),a=$("cond",e,t,n),s=$("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[O($("pred",e,t,n))];case"Switch":{const r=$("pred",e,t,n);let a=$("data",e,t,n);return a.kept||(a=O(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==_(e,t,n)));return r?[O(_(r,t,n))]:void 0}case"Enter":{const r=$("frameName",e,t,n),a=$("tensor",e,t,n);return n.enterFrame(r),[O(a)]}case"Exit":{const r=$("tensor",e,t,n);return n.exitFrame(),[O(r)]}case"NextIteration":{const r=$("tensor",e,t,n);return n.nextIteration(),[O(r)]}case"TensorArrayV3":{const r=$("size",e,t,n),a=$("dtype",e,t,n),s=$("elementShape",e,t,n),i=$("dynamicSize",e,t,n),o=$("clearAfterRead",e,t,n),l=$("identicalElementShapes",e,t,n),u=$("name",e,t,n),c=new wt(u,a,r,s,l,i,o);return n.addTensorArray(c),[c.idTensor,(0,N.scalar)(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=$("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",e,t,n),a=$("tensor",e,t,n),s=$("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,N.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new kt([],n,e.dtype,r),i=(0,N.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}($("tensor",e,t,n),r,$("elementShape",e,t,n),$("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",e,t,n),a=$("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new kt([],e,t,n)}(r,a,$(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=$("tensorListId",e,t,n),a=$("indices",e,t,n),s=$("elementShape",e,t,n),i=$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n),i=$("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);yt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,N.unstack)(e);return new kt(a,t,r)}($("tensor",e,t,n),$("elementShape",e,t,n),$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=$("tensorListId",e,t,n),a=n.getTensorList(r.id),s=$("dtype",e,t,n),i=$("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=$("tensorListId",e,t,n),a=$("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=$("tensor",e,t,n),a=$("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=vt(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,N.tidy)((()=>{const n=[];e=(0,N.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=(0,N.reshape)((0,N.slice)(e,o,l),s)}return e.dispose(),n})),l=new kt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,$("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=$("stride",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),i=$("dilation",e,t,n);return[St.P($("x",e,t,n),$("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=$("strides",e,t,n),a=D(e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),i=$("dilations",e,t,n);return[Nt.T($("x",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Ot(e,t,n);return[It.conv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Ot(e,t,n);return[It.depthwiseConv2d({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$("outputShape",e,t,n),a=$("strides",e,t,n),s=D(e,t,n);return[Tt.b($("x",e,t,n),$("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$("strides",e,t,n),a=D(e,t,n),s=$("dilations",e,t,n),i=$("dataFormat",e,t,n).toUpperCase();return[Ct.B($("input",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),i=$("dilations",e,t,n);return[Et.p($("x",e,t,n),$("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[$t.w($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[_t._($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n),i=$("includeBatchInIndex",e,t,n),{result:o,indexes:l}=At.I($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Rt.u($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Ft.Y($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[Dt.W($("x",e,t,n),$("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=$("shape",e,t,n),a=$("dtype",e,t,n),s=$("value",e,t,n);return[Mt.h(r,s,a)]}case"LinSpace":{const r=$("start",e,t,n),a=$("stop",e,t,n),s=$("num",e,t,n);return[zt.S(r,a,s)]}case"Multinomial":{const r=$("logits",e,t,n),a=$("numSamples",e,t,n),s=$("seed",e,t,n);return[Lt.S(r,a,s)]}case"OneHot":{const r=$("indices",e,t,n),a=$("depth",e,t,n),s=$("onValue",e,t,n),i=$("offValue",e,t,n);return[Bt.l(r,a,s,i)]}case"Ones":return[Pt.i($("shape",e,t,n),$("dtype",e,t,n))];case"OnesLike":return[Vt.J($("x",e,t,n))];case"RandomUniform":return[Wt.L($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("dtype",e,t,n))];case"Range":{const r=$("start",e,t,n),a=$("stop",e,t,n),s=$("step",e,t,n);return[Ut.w(r,a,s,$("dtype",e,t,n))]}case"TruncatedNormal":{const r=$("shape",e,t,n),a=$("mean",e,t,n),s=$("stdDev",e,t,n),i=$("seed",e,t,n);return[Gt.X(r,a,s,$("dtype",e,t,n),i)]}case"Zeros":return[Ht.l($("shape",e,t,n),$("dtype",e,t,n))];case"ZerosLike":return[jt.P($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=Yt(e,t,n),u=await qt.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Yt(e,t,n),l=$("padToMaxOutputSize",e,t,n),u=await qt.BHj.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Yt(e,t,n);return[await qt.BHj.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Xt.p($("condition",e,t,n),"bool"),a=[await Kt.i(r)];return r.dispose(),a}case"ListDiff":return Qt.O($("x",e,t,n),$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=$("x",e,t,n),a=$("k",e,t,n),s=$("sorted",e,t,n),i=Zt.h(r,a,s);return[i.values,i.indices]}case"Unique":{const r=$("x",e,t,n),a=Jt.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=$("x",e,t,n),a=$("axis",e,t,n),s=Jt.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n),i=$("halfPixelCenters",e,t,n);return[qt.BHj.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n),i=$("halfPixelCenters",e,t,n);return[qt.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=$("image",e,t,n),a=$("boxes",e,t,n),s=$("boxInd",e,t,n),i=$("cropSize",e,t,n),o=$("method",e,t,n),l=$("extrapolationValue",e,t,n);return[qt.BHj.cropAndResize(r,a,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=$("default",e,t,n);return[_(e.name,t,n)||r];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[O($("x",e,t,n))];case"IdentityN":return $("x",e,t,n).map((e=>O(e)));case"Snapshot":return[O($("x",e,t,n))];case"Shape":return[en.R($("x",e,t,n).shape,"int32")];case"ShapeN":return $("x",e,t,n).map((e=>en.R(e.shape)));case"Size":return[tn.i($("x",e,t,n).size,"int32")];case"Rank":return[tn.i($("x",e,t,n).rank,"int32")];case"NoOp":return[tn.i(1)];case"Print":const a=$("x",e,t,n),s=$("data",e,t,n),i=$("message",e,t,n),o=$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Equal":return[rn.D($("a",e,t,n),$("b",e,t,n))];case"NotEqual":return[an.Q($("a",e,t,n),$("b",e,t,n))];case"Greater":return[sn.p($("a",e,t,n),$("b",e,t,n))];case"GreaterEqual":return[on.b($("a",e,t,n),$("b",e,t,n))];case"Less":return[ln.d($("a",e,t,n),$("b",e,t,n))];case"LessEqual":return[un.z($("a",e,t,n),$("b",e,t,n))];case"LogicalAnd":return[cn.H($("a",e,t,n),$("b",e,t,n))];case"LogicalNot":return[dn.h($("a",e,t,n))];case"LogicalOr":return[pn.K($("a",e,t,n),$("b",e,t,n))];case"Select":case"SelectV2":return[hn.a($("condition",e,t,n),$("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[fn.O($("a",e,t,n),$("b",e,t,n),$("transposeA",e,t,n),$("transposeB",e,t,n))];case"Einsum":return[mn.W($("equation",e,t,n),...$("tensors",e,t,n))];case"Transpose":return[gn.p($("x",e,t,n),$("perm",e,t,n))];case"_FusedMatMul":const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=$("numArgs",e,t,n),l=$("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=$("args",e,t,n);return[It.matMul({a:$("a",e,t,n),b:$("b",e,t,n),transposeA:$("transposeA",e,t,n),transposeB:$("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[yn.t($("x",e,t,n),$("mean",e,t,n),$("variance",e,t,n),$("offset",e,t,n),$("scale",e,t,n),$("epsilon",e,t,n))];case"LRN":return[bn.G($("x",e,t,n),$("radius",e,t,n),$("bias",e,t,n),$("alpha",e,t,n),$("beta",e,t,n))];case"Softmax":return[xn.X($("x",e,t,n))];case"LogSoftmax":return[vn.C($("x",e,t,n))];case"SparseToDense":return[wn.e($("sparseIndices",e,t,n),$("outputShape",e,t,n),$("sparseValues",e,t,n),$("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[kn.F($("x",e,t,n),r,a)]}case"Mean":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Sn.J($("x",e,t,n),r,a)]}case"Min":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Nn.V($("x",e,t,n),r,a)]}case"Sum":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[In.S($("x",e,t,n),r,a)]}case"All":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Tn.$($("x",e,t,n),r,a)]}case"Any":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Cn.Y($("x",e,t,n),r,a)]}case"ArgMax":{const r=$("axis",e,t,n);return[En.N($("x",e,t,n),r)]}case"ArgMin":{const r=$("axis",e,t,n);return[$n.v($("x",e,t,n),r)]}case"Prod":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[ht.W($("x",e,t,n),r,a)]}case"Cumsum":{const r=$("axis",e,t,n),a=$("exclusive",e,t,n),s=$("reverse",e,t,n);return[_n.z($("x",e,t,n),r,a,s)]}case"Bincount":const r=$("x",e,t,n),a=$("weights",e,t,n),s=$("size",e,t,n);return[An.y(r,a,s)];case"DenseBincount":{const r=$("x",e,t,n),a=$("weights",e,t,n),s=$("size",e,t,n),i=$("binaryOutput",e,t,n);return[Rn.p(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=$("n",e,t,n),a=$("axis",e,t,n);let s=$("tensors",e,t,n);return s=s.slice(0,r),[Fn.z(s,a)]}case"Gather":{const r=$("x",e,t,n),a=$("indices",e,t,n);return[Dn.I(r,Xt.p(a,"int32"),0)]}case"GatherV2":{const r=$("axis",e,t,n),a=$("batchDims",e,t,n),s=$("x",e,t,n),i=$("indices",e,t,n);return[Dn.I(s,Xt.p(i,"int32"),r,a)]}case"Reverse":{const r=$("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=$("x",e,t,n);return[On.G(s,a)]}case"ReverseV2":{const r=$("axis",e,t,n),a=$("x",e,t,n);return[On.G(a,r)]}case"Slice":{const r=$("begin",e,t,n),a=$("size",e,t,n);return[Mn.t($("x",e,t,n),r,a)]}case"StridedSlice":{const r=$("begin",e,t,n),a=$("end",e,t,n),s=$("strides",e,t,n),i=$("beginMask",e,t,n),o=$("endMask",e,t,n),l=$("ellipsisMask",e,t,n),u=$("newAxisMask",e,t,n),c=$("shrinkAxisMask",e,t,n),d=$("x",e,t,n);return[zn.N(d,r,a,s,i,o,l,u,c)]}case"Pack":return(0,N.tidy)((()=>{const r=$("axis",e,t,n),a=$("tensors",e,t,n),s=a[0].shape,i=Ln.L(a[0]).shape,o=a.map((e=>{const t=N.util.arraysEqual(e.shape,s);if(!t&&!N.util.arraysEqual(Ln.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Bn.X(e,s)}));return[Pn.k(o,r)]}));case"Unpack":{const r=$("axis",e,t,n),a=$("tensor",e,t,n);return Vn.H(a,r)}case"Tile":{const r=$("reps",e,t,n);return[Wn.G($("x",e,t,n),r)]}case"Split":case"SplitV":{const r=$("axis",e,t,n),a=$("numOrSizeSplits",e,t,n),s=$("x",e,t,n);return Un.V(s,a,r)}case"ScatterNd":{const r=$("indices",e,t,n),a=$("values",e,t,n),s=$("shape",e,t,n);return[Gn.s(r,a,s)]}case"GatherNd":{const r=$("x",e,t,n),a=$("indices",e,t,n);return[Hn.d(r,a)]}case"SparseToDense":{const r=$("sparseIndices",e,t,n),a=$("outputShape",e,t,n),s=$("sparseValues",e,t,n),i=$("defaultValue",e,t,n);return[wn.e(r,s,a,s.dtype===i.dtype?i:Xt.p(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=qt.rVs.sparseFillEmptyRows($("indices",e,t,n),$("values",e,t,n),$("denseShape",e,t,n),$("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=qt.rVs.sparseReshape($("inputIndices",e,t,n),$("inputShape",e,t,n),$("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[qt.rVs.sparseSegmentMean($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];case"SparseSegmentSum":return[qt.rVs.sparseSegmentSum($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"FFT":return[jn.k($("x",e,t,n))];case"IFFT":return[qn.S($("x",e,t,n))];case"RFFT":return[Xn.Q($("x",e,t,n))];case"IRFFT":return[Kn.w($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=qt.Z_8.stringNGrams($("data",e,t,n),$("dataSplits",e,t,n),$("separator",e,t,n),$("nGramWidths",e,t,n),$("leftPad",e,t,n),$("rightPad",e,t,n),$("padWidth",e,t,n),$("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=qt.Z_8.stringSplit($("input",e,t,n),$("delimiter",e,t,n),$("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[qt.Z_8.stringToHashBucketFast($("input",e,t,n),$("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return N.tidy((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Xt.p($("x",e,t,n),$("dtype",e,t,n))];case"ExpandDims":{const r=$("axis",e,t,n);return[Qn.d($("x",e,t,n),r)]}case"Squeeze":{const r=$("axis",e,t,n);return[Ln.L($("x",e,t,n),r)]}case"Reshape":return[Bn.X($("x",e,t,n),$("shape",e,t,n))];case"MirrorPad":return[Yn.V($("x",e,t,n),$("padding",e,t,n),$("mode",e,t,n))];case"PadV2":case"Pad":return[Zn.v($("x",e,t,n),$("padding",e,t,n),$("constantValue",e,t,n))];case"SpaceToBatchND":{const r=$("blockShape",e,t,n),a=$("paddings",e,t,n);return[Jn.f($("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=$("blockShape",e,t,n),a=$("crops",e,t,n);return[er.E($("x",e,t,n),r,a)]}case"DepthToSpace":{const r=$("blockSize",e,t,n),a=$("dataFormat",e,t,n).toUpperCase();return[tr.n($("x",e,t,n),r,a)]}case"BroadcastTo":return[nr.U($("x",e,t,n),$("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=$("keyDType",e,t,n),s=$("valueDType",e,t,n),i=new nn(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),i=$("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),i=$("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=$("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=C(e.op);if(a&&a.customExecutor)return a.customExecutor(new ge(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return N.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class ar{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function sr(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>F(e)[0]));let c=[];null!=r&&(c=r.map((e=>F(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(ur(e)||cr(e)||dr(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const ir=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],or=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],lr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function ur(e){return ir.indexOf(e.op)>=0}function cr(e){return or.indexOf(e.op)>=0}function dr(e){return lr.indexOf(e.op)>=0}class pr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new pr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=sr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>F(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const l=new Set,u=[];for(;s.length>0;){const e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[F(e)[0]])),a=t.map((e=>F(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const l={},u={};return(0,N.tidy)((()=>{const n=new ar(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=F(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=rr(t,r,n,this._resourceManager);if(N.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>_(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[R(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new ar(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>_(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[F(e)[0]])),i=n.map((e=>F(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:d}=sr(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=F(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(s,p,t,h,g,m,i,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!ur(e)&&!_(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return h}processStack(e,t,n,r,a,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$("isConstant",e.node,r,n)&&([c]=A(e.node.name,n)),null==r[e.node.name]){const d=rr(e.node,r,n,this._resourceManager);c||([c]=A(e.node.name,n));const p=n.currentContext;N.util.isPromise(d)?u.push(d.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=A(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=F(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));N.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&N.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=F(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=F(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class hr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class fr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new hr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=N.io.browserHTTPRequest(e,this.loadOptions);else{const t=N.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(N.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=N.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new pr(te.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=te.Instance.transformGraph(e.modelInitializer);this.initializer=new pr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=N.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof N.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function mr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new fr(e,t);return await n.load(),n}const gr="3.8.0"},9826:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},8673:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return l(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return l(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return l(e,t,n,r,a,s,!0)}function l(e,t,n,a,s,i,o=!1,l=!1,p=!1){const h=[];for(let e=0;e<t.length;e++)t[e]>s&&h.push({score:t[e],boxIndex:e,suppressBeginIndex:0});h.sort(d);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let l=!1;for(let n=m.length-1;n>=o;--n){const r=u(e,i,m[n]);if(r>=a){l=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,l||(t.score===n?(m.push(i),g.push(t.score)):t.score>s&&r(h,t,d))}const y=m.length,b=n-y;l&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function u(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(l-i),f=(d-u)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>i,pA:()=>o})},836:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(3522);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}},7845:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>b});var r=n(9826),a=n(8286),s=n(2208),i=n(671),o=n(4346),l=n(4687),u=n(1525);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{d(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?u.oj(`${r}ms`,9):r.error,o=u.oj(e,25),l=t.rank,c=t.size,d=u.oj(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${c}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n(6e3),f=n(290);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=x.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return x.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);u.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:d,attrs:p}=e,h=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&u.HD(e[0])&&(a=e.map((e=>l.encodeString(e))));const s=r.write(a,t,n),i=new h.es(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new h.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new h._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof h._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},l=(0,o.uk)(e);null!=l&&(r=l.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=u.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(a instanceof h.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!u.cO(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;u.hu(t.every((e=>e instanceof h.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),u.hu(n.value instanceof h.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];u.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(s.every((e=>e instanceof h.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new y(t)}return(0,a.iG)(e._tfengine.ENV),(0,h.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const x=b();function v(e,t){const n={a:e,b:t};return x.runKernel(i.mm,n)}},8286:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>i,Vi:()=>o,iG:()=>l});var r=n(1525);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return o}let o=null;function l(e){o=e}},2208:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4340:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>l,cF:()=>u,MX:()=>c,N8:()=>d,SR:()=>p,sq:()=>h,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>v,N_:()=>w,cj:()=>k,x3:()=>S,ze:()=>N,jq:()=>I,y3:()=>T,VY:()=>C});var r=n(7845),a=n(8286),s=n(6e3),i=n(290);function o(){(0,a.OB)().set("PROD",!0)}function l(){(0,a.OB)().set("DEBUG",!0)}function u(){(0,a.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.BV.disposeVariables()}function p(){return r.BV}function h(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function w(){return r.BV.backendName}function k(e){r.BV.removeBackend(e)}function S(e){return r.BV.findBackend(e)}function N(e){return r.BV.findBackendFactory(e)}function I(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function C(e,t){(0,a.OB)().setPlatform(e,t)}(0,s.FZ)(c)},9203:(e,t,n)=>{"use strict";n.d(t,{cb:()=>p,pn:()=>d,h7:()=>u,fN:()=>c,UQ:()=>o,ti:()=>l});var r=n(7845),a=n(6e3),s=n(4382),i=n(1525);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(a)),[a],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...a)),a,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof a.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.BV.gradients((()=>e(t)),[t],n);return h(s),{grad:s[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof a.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=r.BV.gradients(e,t,null,!0);i.hu(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function p(e){return r.BV.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},2080:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ge.SY,Acos:()=>Ge.VG,Acosh:()=>Ge.Sp,AdadeltaOptimizer:()=>Et,AdagradOptimizer:()=>_t,AdamOptimizer:()=>Ft,AdamaxOptimizer:()=>Mt,Add:()=>Ge.mm,AddN:()=>Ge.Xz,All:()=>Ge.oT,Any:()=>Ge.IK,ArgMax:()=>Ge.sJ,ArgMin:()=>Ge.aJ,Asin:()=>Ge.M2,Asinh:()=>Ge.qw,Atan:()=>Ge.jM,Atan2:()=>Ge.QC,Atanh:()=>Ge.Oy,AvgPool:()=>Ge.Jh,AvgPool3D:()=>Ge._k,AvgPool3DGrad:()=>Ge.IM,AvgPoolGrad:()=>Ge.RO,BatchMatMul:()=>Ge.XL,BatchToSpaceND:()=>Ge.zw,Bincount:()=>Ge.zv,BroadcastTo:()=>Ge.Ly,Cast:()=>Ge.RF,Ceil:()=>Ge.gJ,ClipByValue:()=>Ge.xn,Complex:()=>Ge.Zz,ComplexAbs:()=>Ge.yj,Concat:()=>Ge.Eh,Conv2D:()=>Ge.mh,Conv2DBackpropFilter:()=>Ge.wU,Conv2DBackpropInput:()=>Ge.wm,Conv3D:()=>Ge.x1,Conv3DBackpropFilterV2:()=>Ge.o2,Conv3DBackpropInputV2:()=>Ge.ik,Cos:()=>Ge.mc,Cosh:()=>Ge.TR,CropAndResize:()=>Ge.Vc,Cumsum:()=>Ge.iH,DataStorage:()=>Pn.JL,DenseBincount:()=>Ge.QR,DepthToSpace:()=>Ge.T0,DepthwiseConv2dNative:()=>Ge.ci,DepthwiseConv2dNativeBackpropFilter:()=>Ge.sL,DepthwiseConv2dNativeBackpropInput:()=>Ge.y7,Diag:()=>Ge.$w,Dilation2D:()=>Ge.p4,Dilation2DBackpropFilter:()=>Ge.Vn,Dilation2DBackpropInput:()=>Ge.ek,ENV:()=>g.Vi,Einsum:()=>Ge.$g,Elu:()=>Ge.SX,EluGrad:()=>Ge.HE,Environment:()=>g.qA,Equal:()=>Ge.hd,Erf:()=>Ge.Om,Exp:()=>Ge.NE,ExpandDims:()=>Ge.YF,Expm1:()=>Ge.Y0,FFT:()=>Ge.vw,Fill:()=>Ge.de,FlipLeftRight:()=>Ge.Uy,Floor:()=>Ge.OR,FloorDiv:()=>Ge.je,FromPixels:()=>Ge.eB,FusedBatchNorm:()=>Ge.sH,FusedConv2D:()=>Ge._V,FusedDepthwiseConv2D:()=>Ge.lu,GatherNd:()=>Ge.q1,GatherV2:()=>Ge.qi,Greater:()=>Ge.iZ,GreaterEqual:()=>Ge.Ac,IFFT:()=>Ge.Qg,Identity:()=>Ge.iJ,Imag:()=>Ge.J_,IsFinite:()=>Ge.av,IsInf:()=>Ge.iW,IsNan:()=>Ge.r7,KernelBackend:()=>Pn.Zu,LRN:()=>Ge.eZ,LRNGrad:()=>Ge.Hh,LeakyRelu:()=>Ge.J$,Less:()=>Ge.vt,LessEqual:()=>Ge.CA,LinSpace:()=>Ge.e7,Log:()=>Ge.Zb,Log1p:()=>Ge.kU,LogSoftmax:()=>Ge.qC,LogicalAnd:()=>Ge.PY,LogicalNot:()=>Ge.Vf,LogicalOr:()=>Ge.MZ,Max:()=>Ge.Yo,MaxPool:()=>Ge.mT,MaxPool3D:()=>Ge.OA,MaxPool3DGrad:()=>Ge.OU,MaxPoolGrad:()=>Ge.OV,MaxPoolWithArgmax:()=>Ge.vF,Maximum:()=>Ge.BM,Mean:()=>Ge.q2,Min:()=>Ge.c1,Minimum:()=>Ge.q8,MirrorPad:()=>Ge.jQ,Mod:()=>Ge.Vb,MomentumOptimizer:()=>Lt,Multinomial:()=>Ge.NZ,Multiply:()=>Ge.wY,Neg:()=>Ge.ku,NonMaxSuppressionV3:()=>Ge.uv,NonMaxSuppressionV4:()=>Ge.cy,NonMaxSuppressionV5:()=>Ge.W0,NotEqual:()=>Ge.yQ,OP_SCOPE_SUFFIX:()=>Vt.zvA,OneHot:()=>Ge.we,OnesLike:()=>Ge.qW,Optimizer:()=>Ct,Pack:()=>Ge.Qi,PadV2:()=>Ge.ly,Pool:()=>Ge.Kg,Pow:()=>Ge.pe,Prelu:()=>Ge.o0,Prod:()=>Ge.Dl,RMSPropOptimizer:()=>Bt,Range:()=>Ge.e6,Rank:()=>Pt.yw,Real:()=>Ge.xJ,RealDiv:()=>Ge.oH,Reciprocal:()=>Ge.$H,Reduction:()=>Wt.I,Relu:()=>Ge.qk,Relu6:()=>Ge.Sb,Reshape:()=>Ge.HZ,ResizeBilinear:()=>Ge._Y,ResizeBilinearGrad:()=>Ge.zb,ResizeNearestNeighbor:()=>Ge.dp,ResizeNearestNeighborGrad:()=>Ge.Hm,Reverse:()=>Ge.mK,RotateWithOffset:()=>Ge.b9,Round:()=>Ge.e0,Rsqrt:()=>Ge.bV,SGDOptimizer:()=>zt,ScatterNd:()=>Ge.xQ,Select:()=>Ge.Ph,Selu:()=>Ge.oF,Sigmoid:()=>Ge.a5,Sign:()=>Ge.i5,Sin:()=>Ge.RQ,Sinh:()=>Ge.w3,Slice:()=>Ge.p2,Softmax:()=>Ge.Gc,Softplus:()=>Ge.MR,SpaceToBatchND:()=>Ge.TQ,SparseFillEmptyRows:()=>Ge.O3,SparseReshape:()=>Ge.nh,SparseSegmentMean:()=>Ge.YW,SparseSegmentSum:()=>Ge.Zj,SparseToDense:()=>Ge.D2,SplitV:()=>Ge.L8,Sqrt:()=>Ge.FK,Square:()=>Ge.bK,SquaredDifference:()=>Ge._t,Step:()=>Ge.h8,StridedSlice:()=>Ge.m2,StringNGrams:()=>Ge._J,StringSplit:()=>Ge.s1,StringToHashBucketFast:()=>Ge.Xk,Sub:()=>Ge.Tr,Sum:()=>Ge.GB,Tan:()=>Ge.sE,Tanh:()=>Ge.MI,Tensor:()=>xe.es,TensorBuffer:()=>xe.YD,Tile:()=>Ge.n9,TopK:()=>Ge.cW,Transform:()=>Ge.wx,Transpose:()=>Ge.G3,Unique:()=>Ge.kp,Unpack:()=>Ge.To,UnsortedSegmentSum:()=>Ge.Qv,Variable:()=>xe._w,ZerosLike:()=>Ge.Ru,_FusedMatMul:()=>Ge.us,abs:()=>Vt.WnP,acos:()=>Vt.Khb,acosh:()=>Vt.__u,add:()=>Vt.IHx,addN:()=>Vt.QBD,all:()=>Vt.$6P,any:()=>Vt.YjB,argMax:()=>Vt.NqF,argMin:()=>Vt.vHJ,asin:()=>Vt.ZRM,asinh:()=>Vt.VfV,atan:()=>Vt.z4N,atan2:()=>Vt.fvJ,atanh:()=>Vt.C80,avgPool:()=>Vt.wS1,avgPool3d:()=>Vt.uR5,backend:()=>bt.y3,backend_util:()=>d,basicLSTMCell:()=>Vt.zEQ,batchNorm:()=>Vt.tgs,batchNorm2d:()=>Vt.Dxk,batchNorm3d:()=>Vt.JY5,batchNorm4d:()=>Vt.p3b,batchToSpaceND:()=>Vt.E4h,bincount:()=>Vt.yE8,booleanMaskAsync:()=>Vt.anm,broadcastTo:()=>Vt.UFq,browser:()=>i,buffer:()=>Vt.f3b,cast:()=>Vt.pju,ceil:()=>Vt.mDi,clipByValue:()=>Vt.iUl,clone:()=>Vt.d9v,complex:()=>Vt.PYB,concat:()=>Vt.zoF,concat1d:()=>Vt.gME,concat2d:()=>Vt.Izb,concat3d:()=>Vt.MNy,concat4d:()=>Vt.ZaL,conv1d:()=>Vt.PAt,conv2d:()=>Vt.Tek,conv2dTranspose:()=>Vt.bc,conv3d:()=>Vt.pdZ,conv3dTranspose:()=>Vt.$QV,copyRegisteredKernels:()=>He.T3,cos:()=>Vt.mCk,cosh:()=>Vt.f9Y,cosineWindow:()=>Vt.mew,cumsum:()=>Vt.zbp,customGrad:()=>It.cb,denseBincount:()=>Vt.ppE,deprecationWarn:()=>bt.MX,depthToSpace:()=>Vt.nTT,depthwiseConv2d:()=>Vt.B10,device_util:()=>r,diag:()=>Vt.Ka3,dilation2d:()=>Vt.WmZ,disableDeprecationWarnings:()=>bt.cF,dispose:()=>bt.B9,disposeVariables:()=>bt.N8,div:()=>Vt.hiC,divNoNan:()=>Vt.NTj,dot:()=>Vt.AKD,dropout:()=>Vt.rvX,einsum:()=>Vt.WYO,elu:()=>Vt.pyx,enableDebugMode:()=>bt.R,enableProdMode:()=>bt.G4,enclosingPowerOfTwo:()=>Vt.GRh,engine:()=>bt.SR,env:()=>g.OB,equal:()=>Vt.DgJ,erf:()=>Vt.qNN,exp:()=>Vt.Qqt,expandDims:()=>Vt.dt4,expm1:()=>Vt.t$B,eye:()=>Vt.iyy,fft:()=>Vt.kp_,fill:()=>Vt.hlL,findBackend:()=>bt.x3,findBackendFactory:()=>bt.ze,floor:()=>Vt.GWj,floorDiv:()=>Vt.qPi,fused:()=>Vt.imm,gather:()=>Vt.Iqj,gatherND:()=>Vt.dbB,gather_util:()=>o,getBackend:()=>bt.N_,getGradient:()=>He.uk,getKernel:()=>He.pI,getKernelsForBackend:()=>He.tr,grad:()=>It.UQ,grads:()=>It.ti,greater:()=>Vt.pjt,greaterEqual:()=>Vt.brS,ifft:()=>Vt.Sxn,imag:()=>Vt.asL,image:()=>Vt.BHj,inTopKAsync:()=>Vt.V3u,io:()=>a,irfft:()=>Vt.wx0,isFinite:()=>Vt.xVT,isInf:()=>Vt.UWc,isNaN:()=>Vt.i2d,keep:()=>bt.Cn,kernel_impls:()=>p,leakyRelu:()=>Vt.hi7,less:()=>Vt.d9m,lessEqual:()=>Vt.zN1,linalg:()=>Vt.$r2,linspace:()=>Vt.SX3,localResponseNormalization:()=>Vt.G9k,log:()=>Vt.cM7,log1p:()=>Vt.Krr,logSigmoid:()=>Vt.e_t,logSoftmax:()=>Vt.CmS,logSumExp:()=>Vt.l_t,logicalAnd:()=>Vt.HvI,logicalNot:()=>Vt.hJK,logicalOr:()=>Vt.K5V,logicalXor:()=>Vt.egP,losses:()=>Vt.MB5,matMul:()=>Vt.OI3,math:()=>s,max:()=>Vt.Fp7,maxPool:()=>Vt._sB,maxPool3d:()=>Vt.YQQ,maxPoolWithArgmax:()=>Vt.Ip$,maximum:()=>Vt.gWQ,mean:()=>Vt.J69,memory:()=>bt.sq,meshgrid:()=>Vt.ry_,min:()=>Vt.VV$,minimum:()=>Vt.LTh,mirrorPad:()=>Vt.VdP,mod:()=>Vt.wQq,moments:()=>Vt.Gi7,movingAverage:()=>Vt.p_,mul:()=>Vt.dC7,multiRNNCell:()=>Vt.rq4,multinomial:()=>Vt.SJ_,neg:()=>Vt.W76,nextFrame:()=>jt,norm:()=>Vt.KOy,notEqual:()=>Vt.Quu,oneHot:()=>Vt.lfX,ones:()=>Vt.iUs,onesLike:()=>Vt.JpU,op:()=>Vt.op,outerProduct:()=>Vt.N2O,pad:()=>Vt.vku,pad1d:()=>Vt.pNR,pad2d:()=>Vt.koy,pad3d:()=>Vt.t1L,pad4d:()=>Vt.lGY,pool:()=>Vt.d_R,pow:()=>Vt.sQ3,prelu:()=>Vt.AL3,print:()=>Vt.S0v,prod:()=>Vt.WVs,profile:()=>bt.N5,rand:()=>Vt.TN_,randomGamma:()=>Vt.wzB,randomNormal:()=>Vt.nGf,randomUniform:()=>Vt.LGj,range:()=>Vt.w6H,ready:()=>bt.Cd,real:()=>Vt.kwC,reciprocal:()=>Vt.M25,registerBackend:()=>bt.jq,registerGradient:()=>He.Li,registerKernel:()=>He.wC,relu:()=>Vt.UYe,relu6:()=>Vt.btT,removeBackend:()=>bt.cj,reshape:()=>Vt.XLQ,reverse:()=>Vt.GYS,reverse1d:()=>Vt.SDf,reverse2d:()=>Vt.diP,reverse3d:()=>Vt.sx7,reverse4d:()=>Vt.mG2,rfft:()=>Vt.QEs,round:()=>Vt.NMM,rsqrt:()=>Vt.bp0,scalar:()=>Vt.iD$,scatterND:()=>Vt.snQ,scatter_util:()=>Je,selu:()=>Vt.U8D,separableConv2d:()=>Vt.U_I,serialization:()=>l,setBackend:()=>bt.CQ,setPlatform:()=>bt.VY,setdiff1dAsync:()=>Vt.ODp,sigmoid:()=>Vt.XD2,sign:()=>Vt.Xxe,signal:()=>Vt.tdS,sin:()=>Vt.O$l,sinh:()=>Vt.R_K,slice:()=>Vt.tPi,slice1d:()=>Vt.jZU,slice2d:()=>Vt.SmN,slice3d:()=>Vt.CnO,slice4d:()=>Vt.p0P,slice_util:()=>et,softmax:()=>Vt.XAC,softplus:()=>Vt.Wvh,spaceToBatchND:()=>Vt.fBT,sparse:()=>Vt.rVs,sparseToDense:()=>Vt.ers,spectral:()=>Vt.uN7,split:()=>Vt.Vl2,sqrt:()=>Vt._b3,square:()=>Vt.h62,squaredDifference:()=>Vt.$i,squeeze:()=>Vt.L9e,stack:()=>Vt.knu,step:()=>Vt.Nbs,stridedSlice:()=>Vt.NXj,string:()=>Vt.Z_8,sub:()=>Vt.luU,sum:()=>Vt.Smz,sumOutType:()=>Pt.z4,tan:()=>Vt.ORZ,tanh:()=>Vt.AEp,tensor:()=>Vt.XeE,tensor1d:()=>Vt.RRF,tensor2d:()=>Vt.odF,tensor3d:()=>Vt.wOQ,tensor4d:()=>Vt.yXz,tensor5d:()=>Vt.Bfx,tensor6d:()=>Vt.xZs,tensor_util:()=>at,test_util:()=>u,tidy:()=>bt.lu,tile:()=>Vt.Gg6,time:()=>bt.XV,topk:()=>Vt.hg7,train:()=>Gt,transpose:()=>Vt.p4s,truncatedNormal:()=>Vt.Xu6,unique:()=>Vt.Two,unregisterGradient:()=>He.bt,unregisterKernel:()=>He.nE,unsortedSegmentSum:()=>Vt.pUJ,unstack:()=>Vt.HHK,upcastType:()=>Pt.x8,util:()=>st,valueAndGrad:()=>It.h7,valueAndGrads:()=>It.fN,variable:()=>Vt.VD$,variableGrads:()=>It.pn,version_core:()=>yt,where:()=>Vt.arb,whereAsync:()=>Vt.itS,zeros:()=>Vt.lls,zerosLike:()=>Vt.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>m,isMobile:()=>f});var a={};n.r(a),n.d(a,{browserFiles:()=>Ne,browserHTTPRequest:()=>Fe,concatenateArrayBuffers:()=>C,copyModel:()=>de,decodeWeights:()=>S,encodeWeights:()=>k,fromMemory:()=>Me,getLoadHandlers:()=>z,getModelArtifactsForJSON:()=>_,getModelArtifactsInfoForJSON:()=>A,getSaveHandlers:()=>M,http:()=>Re,isHTTPScheme:()=>_e,listModels:()=>ue,loadWeights:()=>Ce,moveModel:()=>pe,registerLoadRouter:()=>O,registerSaveRouter:()=>D,removeModel:()=>ce,weightsLoaderFactory:()=>Ee,withSaveHandler:()=>ze});var s={};n.r(s),n.d(s,{confusionMatrix:()=>Ue});var i={};n.r(i),n.d(i,{fromPixels:()=>Ye,fromPixelsAsync:()=>Ke,toPixels:()=>Qe});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>Ze});var l={};n.r(l),n.d(l,{Serializable:()=>tt,SerializationMap:()=>nt,registerClass:()=>rt});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>it,encodeStrings:()=>gt,expectArrayBuffersEqual:()=>mt,expectArraysClose:()=>ot,expectArraysEqual:()=>dt,expectNumbersClose:()=>pt,expectPromiseToFail:()=>ct,expectValuesInRange:()=>ft,testEpsilon:()=>lt});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>On,computeOutShape:()=>Dn,segOpComputeOptimalWindowSize:()=>Fn});var d={};n.r(d),n.d(d,{ERF_A1:()=>cn,ERF_A2:()=>dn,ERF_A3:()=>pn,ERF_A4:()=>hn,ERF_A5:()=>fn,ERF_P:()=>un,PARALLELIZE_THRESHOLD:()=>Jt,SELU_SCALE:()=>ln.$,SELU_SCALEALPHA:()=>ln.y,applyActivation:()=>Zt.QH,assertAndGetBroadcastShape:()=>Xt.$N,assertAxesAreInnerMostDims:()=>qt.lB,assertParamsConsistent:()=>Kt,assignToTypedArray:()=>kn,axesAreInnerMostDims:()=>qt.YB,calculateShapes:()=>Je.calculateShapes,checkEinsumDimSizes:()=>En,combineLocations:()=>qt.Vh,complexWithEvenIndex:()=>xn,complexWithOddIndex:()=>vn,computeConv2DInfo:()=>Yt.Ix,computeConv3DInfo:()=>Yt.jw,computeDefaultPad:()=>Yt.aO,computeDilation2DInfo:()=>Yt.Rf,computeOptimalWindowSize:()=>en,computeOutAndReduceShapes:()=>qt.kz,computeOutShape:()=>Qt,computePool2DInfo:()=>Yt.Xw,computePool3DInfo:()=>Yt.pl,convertConv2DDataFormat:()=>Yt.sl,decodeEinsumEquation:()=>Tn,eitherStridesOrDilationsAreOne:()=>Yt.jT,expandShapeToKeepDim:()=>qt.rv,exponent:()=>Nn,exponents:()=>Sn,fromStringArrayToUint8:()=>zn,fromUint8ToStringArray:()=>Mn,getAxesPermutation:()=>qt.Q3,getBroadcastDims:()=>Xt.XF,getComplexWithIndex:()=>wn,getEinsumComputePath:()=>$n,getEinsumPermutation:()=>Cn,getFusedBiasGradient:()=>Zt.pf,getFusedDyActivation:()=>Zt.Fr,getImageCenter:()=>tn,getInnerMostAxes:()=>qt.sY,getPermuted:()=>rn,getReductionAxes:()=>Xt.RR,getReshaped:()=>nn,getReshapedPermuted:()=>an,getSliceBeginCoords:()=>sn,getSliceSize:()=>on,getUndoAxesPermutation:()=>qt.LJ,isIdentityPermutation:()=>_n,log:()=>gn,mergeRealAndImagArrays:()=>yn,prepareAndValidate:()=>Ze,prepareSplitSize:()=>Rn,segment_util:()=>c,shouldFuse:()=>Zt.uy,slice_util:()=>et,splitRealAndImagArrays:()=>bn,tupleValuesAreOne:()=>Yt.I0,upcastType:()=>Pt.x8,validateInput:()=>Je.validateInput,validateUpdateShape:()=>Je.validateUpdateShape,warn:()=>mn});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>Ln.GP,nonMaxSuppressionV4Impl:()=>Ln.qP,nonMaxSuppressionV5Impl:()=>Ln.pA,whereImpl:()=>Bn.Z});var h=n(7845);function f(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function m(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var g=n(8286);const y=(0,g.OB)();y.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),y.registerFlag("IS_BROWSER",(()=>m())),y.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),y.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),y.registerFlag("PROD",(()=>!1)),y.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>y.getBool("DEBUG"))),y.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),y.registerFlag("IS_TEST",(()=>!1)),y.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),y.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var b=n(5768),x=n(8890),v=n(1525);const w={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function k(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:N(await Promise.all(r)),specs:n}}function S(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,l=(0,v.NA)(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=w[n.dtype],c=e.slice(a,a+l*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=R()),u=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=Math.round(t*n.scale+n.min)}}a+=l*o}else if("string"===i){const t=(0,v.NA)(s.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));u.push(n),a+=t}}else{const r=w[i],s=e.slice(a,a+l*r);if("float32"===i)u=new Float32Array(s);else if("int32"===i)u=new Int32Array(s);else if("bool"===i)u=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(s);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const a=(0,x.X)(e,o,"float32"),i=(0,x.X)(r,o,"float32");n[t]=(0,b.P)(a,i),a.dispose(),i.dispose()}}a+=l*r}"complex64"!==i&&(n[t]=(0,x.X)(u,o,i))}return n}function N(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const I="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function T(e){return I?Buffer.byteLength(e):new Blob([e]).size}function C(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function E(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function $(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function _(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function A(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:T(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:T(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function R(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class F{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==F.instance&&(F.instance=new F),F.instance}static registerSaveRouter(e){F.getInstance().saveRouters.push(e)}static registerLoadRouter(e){F.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return F.getHandlers(e,"save")}static getLoadHandlers(e,t){return F.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?F.getInstance().loadRouters:F.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const D=e=>F.registerSaveRouter(e),O=e=>F.registerLoadRouter(e),M=e=>F.getSaveHandlers(e),z=(e,t)=>F.getLoadHandlers(e,t),L="tensorflowjs",B="models_store",P="model_info_store";function V(){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function W(e){const t=e.result;t.createObjectStore(B,{keyPath:"modelPath"}),t.createObjectStore(P,{keyPath:"modelPath"})}class U{constructor(e){if(this.indexedDB=V(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(L,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(B,"readonly"),r=t.objectStore(B).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=A(t),s=a.transaction(P,"readwrite");let i=s.objectStore(P);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(B,"readwrite");const o=l.objectStore(B).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(P);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}U.URL_SCHEME="indexeddb://";const G=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};F.registerSaveRouter(G),F.registerLoadRouter(G);class H{constructor(){this.indexedDB=V()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(L,1);n.onupgradeneeded=()=>W(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(P,"readonly"),s=a.objectStore(P).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(L,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(P,"readwrite"),i=s.objectStore(P),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(B,"readwrite");const r=l.objectStore(B).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const j="/",q="tensorflowjs_models",X="info",K="model_topology",Q="weight_specs",Y="weight_data",Z="model_metadata";function J(e){return{info:[q,e,X].join(j),topology:[q,e,K].join(j),weightSpecs:[q,e,Q].join(j),weightData:[q,e,Y].join(j),modelMetadata:[q,e,Z].join(j)}}function ee(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function te(e){const t=e.split(j);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(j)}class ne{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=J(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=A(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(I)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ee(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(I){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ne.URL_SCHEME="localstorage://";const re=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ne.URL_SCHEME)?(t=e.slice(ne.URL_SCHEME.length),new ne(t)):null;var t};F.registerSaveRouter(re),F.registerLoadRouter(re);class ae{constructor(){(0,v.hu)((0,g.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,v.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=q+j,n=j+X;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[te(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=J(e=(t=e).startsWith(ne.URL_SCHEME)?t.slice(ne.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ee(n),r}}const se="://";class ie{constructor(){this.managers={}}static getInstance(){return null==ie.instance&&(ie.instance=new ie),ie.instance}static registerManager(e,t){(0,v.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(se)&&(e=e.slice(0,e.indexOf(se))),(0,v.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ie.getInstance();(0,v.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function oe(e){if(-1===e.indexOf(se))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ie.getSchemes().join(",")}`);return{scheme:e.split(se)[0],path:e.split(se)[1]}}async function le(e,t,n=!1){(0,v.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=F.getLoadHandlers(e);(0,v.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,v.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=F.getSaveHandlers(t);(0,v.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,v.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=oe(e).scheme,l=oe(e).path,u=o===oe(e).scheme,c=await a.load();n&&u&&await ie.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await ie.getManager(o).removeModel(l),d.modelArtifactsInfo}async function ue(){const e=ie.getSchemes(),t={};for(const n of e){const e=await ie.getManager(n).listModels();for(const r in e)t[n+se+r]=e[r]}return t}async function ce(e){const t=oe(e);return ie.getManager(t.scheme).removeModel(t.path)}async function de(e,t){return le(e,t,!1)}async function pe(e,t){return le(e,t,!0)}class he{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,g.OB)().get("IS_BROWSER")){(0,g.OB)().setPlatform("browser",new he);try{ie.registerManager(ne.URL_SCHEME,new ae)}catch(e){}try{ie.registerManager(U.URL_SCHEME,new H)}catch(e){}}let fe;(0,g.OB)().get("IS_NODE")&&(0,g.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,g.OB)().global.fetch?(0,g.OB)().global.fetch(e,t):(null==fe&&(fe=n(5410)),fe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var me=n(3522),ge=n(3998),ye=n(674),be=n(4969),xe=n(6e3);(0,h.wv)();const ve={buffer:me.f,cast:ge.p,clone:ye.d,print:be.S};function we(e){return new Promise((e=>setTimeout(e))).then(e)}(0,xe.Vp)(ve);class ke{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ke.URL_SCHEME)&&(e=e.slice(ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=$(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await we((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await we((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:A(e)}}}}ke.URL_SCHEME="downloads://";class Se{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=_(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,C(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>E(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=E(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ne(e){return new Se(e)}function Ie(e,t,n,r){!function(e){(0,v.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,v.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,v.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,v.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Te(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,g.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ie(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ie(a,t.onProgress,.5,1)}async function Ce(e,t="",n,r){return Ee((e=>Te(e,{requestInit:r})))(e,t,n)}function Ee(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=w[l]*v.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=S(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),p+=n})),d}}F.registerSaveRouter((e=>(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ke.URL_SCHEME)?function(e="model"){return new ke(e)}(e.slice(ke.URL_SCHEME.length)):null));class $e{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,v.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,g.OB)().platform.fetch,(0,v.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,v.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:A(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,C(await Te(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function _e(e){return null!=e.match($e.URL_SCHEME_REGEX)}$e.URL_SCHEME_REGEX=/^https?:\/\//;const Ae=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>_e(e))):_e(e),n)return Re(e,t)}return null};function Re(e,t){return new $e(e,t)}function Fe(e,t){return Re(e,t)}F.registerSaveRouter(Ae),F.registerLoadRouter(Ae);class De{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Oe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Me(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new De(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ze(e){return new Oe(e)}var Le=n(4382),Be=n(5375),Pe=n(2614),Ve=n(2125),We=n(2298);const Ue=(0,Ve.op)({confusionMatrix_:function(e,t,n){const r=(0,Le._1)(e,"labels","confusionMatrix"),a=(0,Le._1)(t,"predictions","confusionMatrix");v.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),v.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),v.hu(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),v.hu(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),v.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,Pe.l)((0,ge.p)(r,"int32"),n),i=(0,Pe.l)((0,ge.p)(a,"int32"),n),o=(0,We.p)(s),l=(0,Be.O)(o,i);return(0,ge.p)(l,"int32")}});var Ge=n(671),He=n(4346),je=n(9829);let qe;function Xe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,He.pI)(Ge.eB,h.BV.backendName)){const n={pixels:e},r={numChannels:t};return h.BV.runKernel(Ge.eB,n,r)}const[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i?c=e.getContext("2d").getImageData(0,0,l,u).data:r||n?c=e.data:(s||a||o)&&(null==qe&&(qe=document.createElement("canvas").getContext("2d")),qe.canvas.width=l,qe.canvas.height=u,qe.drawImage(e,0,0,l,u),c=qe.getImageData(0,0,l,u).data),4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}const p=[u,l,t];return(0,je.w)(d,p,"int32")}async function Ke(e,t=3){let n=null;if((0,g.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Xe(n,t)}async function Qe(e,t){let n=(0,Le._1)(e,"img","toPixels");if(!(e instanceof xe.es)){const e=n;n=(0,ge.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Ye=(0,Ve.op)({fromPixels_:Xe});function Ze(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,v.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);const c=[...(0,v.e3)(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}var Je=n(3936),et=n(84);class tt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class nt{constructor(){this.classNameMap={}}static getMap(){return null==nt.instance&&(nt.instance=new nt),nt.instance}static register(e){nt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rt(e){(0,v.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,v.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,v.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),nt.register(e)}var at=n(290),st=n(4687);const it=.1;function ot(e,t,n){return null==n&&(n=lt()),ut(e,t,((e,t)=>ht(e,t,n)))}function lt(){return 32===h.BV.backend.floatPrecision()?.001:it}function ut(e,t,n){let r=!0;if(((0,v.fU)(e)||(0,v.fU)(t))&&(r=!1),(0,v.fU)(e)&&(0,v.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Le.C)(e),r=(0,Le.C)(t);if(!(0,v.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,v.fU)(e)?e:(0,v.xH)(e),s=(0,v.fU)(t)?t:(0,v.xH)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ct(e,t){e().then((()=>t.fail()),(()=>t()))}function dt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,v.HD)(e)||(0,v.HD)(e[0])||(0,v.HD)(t)||(0,v.HD)(t[0])?ut(e,n,((e,t)=>e==t)):ut(e,t,((e,t)=>ht(e,t,0)))}function pt(e,t,n){if(null==n&&(n=lt()),!ht(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ht(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ft(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function mt(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function gt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?gt(n):e[t]=(0,st.encodeString)(n)}return e}const yt="3.8.0";var bt=n(4340),xt=n(7640),vt=n(6453),wt=n(3286),kt=n(8260),St=n(4013),Nt=n(9433),It=n(9203),Tt=n(6606);class Ct extends tt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,bt.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,It.pn)(e,t)}dispose(){null!=this.iterations_&&(0,bt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Tt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ct,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Et extends Ct{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(s,this.rho),(0,wt.d)((0,St.h)(a),1-this.rho)),t=(0,wt.d)((0,vt.h)((0,kt._)((0,xt.I)(i,this.epsilon)),(0,kt._)((0,xt.I)(s,this.epsilon))),a),n=(0,xt.I)((0,wt.d)(i,this.rho),(0,wt.d)((0,St.h)(t),1-this.rho));s.assign(e),i.assign(n);const o=(0,xt.I)((0,wt.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,bt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,bt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Et.className="Adadelta",rt(Et);var $t=n(8213);class _t extends Ct{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,bt.lu)((()=>(0,$t.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)(s,(0,St.h)(a));s.assign(e);const t=(0,xt.I)((0,wt.d)((0,vt.h)(a,(0,kt._)((0,xt.I)(e,h.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,bt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}_t.className="Adagrad",rt(_t);var At=n(4260),Rt=n(7458);class Ft extends Ct{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,bt.lu)((()=>{this.accBeta1=(0,Tt.i)(t).variable(),this.accBeta2=(0,Tt.i)(n).variable()})),null==r&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Rt.l)(1,this.accBeta1),r=(0,Rt.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=h.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,bt.lu)((()=>(0,Nt.P)(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,bt.lu)((()=>(0,Nt.P)(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=(0,xt.I)((0,wt.d)(o,this.beta1),(0,wt.d)(i,1-this.beta1)),c=(0,xt.I)((0,wt.d)(l,this.beta2),(0,wt.d)((0,St.h)(i),1-this.beta2)),d=(0,vt.h)(u,n),p=(0,vt.h)(c,r);o.assign(u),l.assign(c);const f=(0,xt.I)((0,wt.d)((0,vt.h)(d,(0,xt.I)((0,kt._)(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,wt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,wt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,bt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,bt.lu)((()=>{this.accBeta1.assign((0,At.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,At.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ft.className="Adam",rt(Ft);var Dt=n(6983),Ot=n(5792);class Mt extends Ct{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,bt.lu)((()=>{this.iteration=(0,Tt.i)(0).variable(),this.accBeta1=(0,Tt.i)(t).variable()})),null==r&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Rt.l)(1,this.accBeta1),r=(0,vt.h)(-this.learningRate,(0,xt.I)((0,wt.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=h.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,Nt.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,Nt.P)(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=(0,xt.I)((0,wt.d)(o,this.beta1),(0,wt.d)(i,1-this.beta1)),c=(0,wt.d)(l,this.beta2),d=(0,Dt.W)(i),p=(0,Ot.g)(c,d);o.assign(u),l.assign(p);const f=(0,xt.I)((0,wt.d)((0,vt.h)(r,n),(0,vt.h)(u,(0,xt.I)(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,xt.I)(this.iteration,1)),this.accBeta1.assign((0,wt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,bt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Mt.className="Adamax",rt(Mt);class zt extends Ct{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=h.BV.registeredVariables[t];(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,bt.Cn)((0,Tt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zt.className="SGD",rt(zt);class Lt extends zt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Tt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,bt.lu)((()=>{let e;const t=(0,xt.I)((0,wt.d)(this.m,a),s);e=this.useNesterov?(0,xt.I)((0,wt.d)(this.c,(0,xt.I)(s,(0,wt.d)(t,this.m))),r):(0,xt.I)((0,wt.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,bt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Lt.className="Momentum",rt(Lt);class Bt extends Ct{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=h.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,bt.lu)((()=>(0,Nt.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(i,this.decay),(0,wt.d)((0,St.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,xt.I)((0,wt.d)(t,this.decay),(0,wt.d)(s,1-this.decay)),l=(0,vt.h)((0,wt.d)(s,this.learningRate),(0,kt._)((0,Rt.l)(e,(0,xt.I)((0,St.h)(a),this.epsilon)))),u=(0,xt.I)((0,wt.d)(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);const c=(0,Rt.l)(r,u);r.assign(c)}else{const e=(0,xt.I)((0,wt.d)(i,this.decay),(0,wt.d)((0,St.h)(s),1-this.decay)),t=(0,xt.I)((0,wt.d)(o,this.momentum),(0,vt.h)((0,wt.d)(s,this.learningRate),(0,kt._)((0,xt.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Rt.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,bt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,bt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,bt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Bt.className="RMSProp",rt(Bt);var Pt=n(5998),Vt=n(6087),Wt=n(2572);class Ut{static sgd(e){return new zt(e)}static momentum(e,t,n=!1){return new Lt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Bt(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ft(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Et(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Mt(e,t,n,r,a)}static adagrad(e,t=.1){return new _t(e,t)}}const Gt={sgd:Ut.sgd,momentum:Ut.momentum,adadelta:Ut.adadelta,adagrad:Ut.adagrad,rmsprop:Ut.rmsprop,adamax:Ut.adamax,adam:Ut.adam},Ht="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function jt(){return new Promise((e=>Ht((()=>e()))))}var qt=n(6555),Xt=n(7644);function Kt(e,t){const n=e[0].length;e.forEach(((e,t)=>{v.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),v.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)v.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Qt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Yt=n(5799),Zt=n(74);const Jt=30;function en(e){return e<=Jt?e:(0,v.jP)(e,Math.floor(Math.sqrt(e)))}function tn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function rn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function an(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function sn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function on(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var ln=n(2821);const un=.3275911,cn=.254829592,dn=-.284496736,pn=1.421413741,hn=-1.453152027,fn=1.061405429;function mn(...e){(0,g.OB)().getBool("IS_TEST")||console.warn(...e)}function gn(...e){(0,g.OB)().getBool("IS_TEST")||console.log(...e)}function yn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function bn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function xn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function vn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function wn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function kn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Sn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Nn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const In=/->/g;function Tn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(In,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");(0,v.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}const u=o.length,c=[];for(let e=a.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Cn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function En(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,v.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function $n(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=An(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function _n(e){return e.every(((e,t)=>e===t))}function An(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Rn(e,t,n=0){let r=[];if("number"==typeof t)(0,v.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,v.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,v.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Fn(e,t){let n,r=!1;for(e<=Jt?(n=e,r=!0):n=(0,v.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,v.jP)(e,n+1);return n}function Dn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function On(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Mn(e){try{return e.map((e=>(0,st.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function zn(e){return e.map((e=>(0,st.encodeString)(e)))}var Ln=n(8673),Bn=n(836),Pn=n(9826)},671:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>i,Xz:()=>o,oT:()=>l,IK:()=>u,sJ:()=>c,aJ:()=>d,M2:()=>p,qw:()=>h,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>S,Ly:()=>N,RF:()=>I,gJ:()=>T,xn:()=>C,Zz:()=>E,yj:()=>$,Eh:()=>_,mh:()=>A,wU:()=>R,wm:()=>F,x1:()=>D,o2:()=>O,ik:()=>M,mc:()=>z,TR:()=>L,iH:()=>B,Vc:()=>P,QR:()=>V,T0:()=>W,ci:()=>U,sL:()=>G,y7:()=>H,$w:()=>j,p4:()=>q,ek:()=>X,Vn:()=>K,oH:()=>Q,$g:()=>Y,SX:()=>Z,HE:()=>J,Om:()=>ee,hd:()=>te,NE:()=>ne,YF:()=>re,Y0:()=>ae,vw:()=>se,de:()=>ie,Uy:()=>oe,OR:()=>le,je:()=>ue,sH:()=>ce,qi:()=>de,q1:()=>pe,iZ:()=>he,Ac:()=>fe,iJ:()=>me,Qg:()=>ge,J_:()=>ye,av:()=>be,iW:()=>xe,r7:()=>ve,J$:()=>we,vt:()=>ke,CA:()=>Se,e7:()=>Ne,Zb:()=>Ie,kU:()=>Te,PY:()=>Ce,Vf:()=>Ee,MZ:()=>$e,qC:()=>_e,eZ:()=>Ae,Hh:()=>Re,Yo:()=>Fe,BM:()=>De,mT:()=>Oe,OV:()=>Me,OA:()=>ze,OU:()=>Le,vF:()=>Be,q2:()=>Pe,c1:()=>Ve,q8:()=>We,jQ:()=>Ue,Vb:()=>Ge,NZ:()=>He,wY:()=>je,ku:()=>qe,yQ:()=>Xe,uv:()=>Ke,cy:()=>Qe,W0:()=>Ye,qW:()=>Ze,we:()=>Je,Qi:()=>et,ly:()=>tt,Kg:()=>nt,pe:()=>rt,o0:()=>at,Dl:()=>st,e6:()=>it,xJ:()=>ot,$H:()=>lt,qk:()=>ut,HZ:()=>ct,dp:()=>dt,Hm:()=>pt,_Y:()=>ht,zb:()=>ft,Sb:()=>mt,mK:()=>gt,e0:()=>yt,bV:()=>bt,xQ:()=>xt,Ph:()=>vt,oF:()=>wt,p2:()=>kt,RQ:()=>St,w3:()=>Nt,i5:()=>It,a5:()=>Tt,MR:()=>Ct,FK:()=>Et,GB:()=>$t,TQ:()=>_t,L8:()=>At,Gc:()=>Rt,O3:()=>Ft,nh:()=>Dt,YW:()=>Ot,Zj:()=>Mt,D2:()=>zt,_t:()=>Lt,bK:()=>Bt,m2:()=>Pt,_J:()=>Vt,s1:()=>Wt,Xk:()=>Ut,Tr:()=>Gt,sE:()=>Ht,MI:()=>jt,n9:()=>qt,cW:()=>Xt,wx:()=>Kt,G3:()=>Qt,kp:()=>Yt,To:()=>Zt,Qv:()=>Jt,Ru:()=>en,h8:()=>tn,eB:()=>nn,b9:()=>rn,us:()=>an,_V:()=>sn,lu:()=>on});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",N="BroadcastTo",I="Cast",T="Ceil",C="ClipByValue",E="Complex",$="ComplexAbs",_="Concat",A="Conv2D",R="Conv2DBackpropFilter",F="Conv2DBackpropInput",D="Conv3D",O="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",L="Cosh",B="Cumsum",P="CropAndResize",V="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",j="Diag",q="Dilation2D",X="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",Q="RealDiv",Y="Einsum",Z="Elu",J="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",ie="Fill",oe="FlipLeftRight",le="Floor",ue="FloorDiv",ce="FusedBatchNorm",de="GatherV2",pe="GatherNd",he="Greater",fe="GreaterEqual",me="Identity",ge="IFFT",ye="Imag",be="IsFinite",xe="IsInf",ve="IsNan",we="LeakyRelu",ke="Less",Se="LessEqual",Ne="LinSpace",Ie="Log",Te="Log1p",Ce="LogicalAnd",Ee="LogicalNot",$e="LogicalOr",_e="LogSoftmax",Ae="LRN",Re="LRNGrad",Fe="Max",De="Maximum",Oe="MaxPool",Me="MaxPoolGrad",ze="MaxPool3D",Le="MaxPool3DGrad",Be="MaxPoolWithArgmax",Pe="Mean",Ve="Min",We="Minimum",Ue="MirrorPad",Ge="Mod",He="Multinomial",je="Multiply",qe="Neg",Xe="NotEqual",Ke="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",Ye="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",it="Range",ot="Real",lt="Reciprocal",ut="Relu",ct="Reshape",dt="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ht="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",yt="Round",bt="Rsqrt",xt="ScatterNd",vt="Select",wt="Selu",kt="Slice",St="Sin",Nt="Sinh",It="Sign",Tt="Sigmoid",Ct="Softplus",Et="Sqrt",$t="Sum",_t="SpaceToBatchND",At="SplitV",Rt="Softmax",Ft="SparseFillEmptyRows",Dt="SparseReshape",Ot="SparseSegmentMean",Mt="SparseSegmentSum",zt="SparseToDense",Lt="SquaredDifference",Bt="Square",Pt="StridedSlice",Vt="StringNGrams",Wt="StringSplit",Ut="StringToHashBucketFast",Gt="Sub",Ht="Tan",jt="Tanh",qt="Tile",Xt="TopK",Kt="Transform",Qt="Transpose",Yt="Unique",Zt="Unpack",Jt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",an="_FusedMatMul",sn="FusedConv2D",on="FusedDepthwiseConv2D"},4346:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,uk:()=>l,tr:()=>u,wC:()=>c,Li:()=>d,nE:()=>p,bt:()=>h,T3:()=>f});var r=n(8286),a=n(2208);const s=(0,a.R)("kernelRegistry",(()=>new Map)),i=(0,a.R)("gradRegistry",(()=>new Map));function o(e,t){const n=m(e,t);return s.get(n)}function l(e){return i.get(e)}function u(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function p(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function h(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){u(e).forEach((e=>{c(Object.assign({},e,{backendName:t}))}))}function m(e,t){return`${t}_${e}`}},6983:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},4941:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return r.BV.runKernel(a.VG,t)}})},7839:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return r.BV.runKernel(a.Sp,t)}})},7640:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.mm,l)}})},3835:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({addN_:function(e){i.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.BV.runKernel(a.Xz,o)}})},1199:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({all_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.oT,i,o)}})},6159:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({any_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.IK,i,o)}})},6540:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(a.sJ,n,i)}})},2237:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({argMin_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMin")},i={axis:t};return r.BV.runKernel(a.aJ,n,i)}})},9520:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return r.BV.runKernel(a.M2,t)}})},9692:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return r.BV.runKernel(a.qw,t)}})},5090:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return r.BV.runKernel(a.jM,t)}})},4265:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.QC,l)}})},9984:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return r.BV.runKernel(a.Oy,t)}})},4614:(e,t,n)=>{"use strict";n.d(t,{w:()=>d});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(3998),l=n(5799),u=n(2125),c=n(6488);const d=(0,u.op)({avgPool_:function(e,t,n,u,d){const p=(0,s._1)(e,"x","avgPool","float32");i.hu(l.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=p,f=!1;3===p.rank&&(f=!0,h=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),null!=d&&i.hu(i.GN(u),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${u}.`));const m={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let y=r.BV.runKernel(a.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1124:(e,t,n)=>{"use strict";n.d(t,{u:()=>c});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(3998),l=n(2125),u=n(6488);const c=(0,l.op)({avgPool3d_:function(e,t,n,l,c,d="NDHWC"){const p=(0,s._1)(e,"x","avgPool3d","float32");let h=p,f=!1;4===p.rank&&(f=!0,h=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===h.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${h.rank}.`)),i.hu("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),null!=c&&i.hu(i.GN(l),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const m={x:h},g={filterSize:t,strides:n,pad:l,dimRoundingMode:c,dataFormat:d};let y=r.BV.runKernel(a._k,m,g);return y=(0,o.p)(y,h.dtype),f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},6555:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>i,rv:()=>o,lB:()=>l,Q3:()=>u,LJ:()=>c,sY:()=>d});var r=n(1525);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function l(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},9327:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({batchToSpaceND_:function(e,t,n){const o=(0,s._1)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%l==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(a.zw,u,c)}})},4066:(e,t,n)=>{"use strict";n.d(t,{t:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(6488);const l=(0,n(2125).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const d=(0,s._1)(e,"x","batchNorm"),p=(0,s._1)(t,"mean","batchNorm"),h=(0,s._1)(n,"variance","batchNorm");let f,m;null!=u&&(f=(0,s._1)(u,"scale","batchNorm")),null!=l&&(m=(0,s._1)(l,"offset","batchNorm")),i.hu(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},y={varianceEpsilon:c},b=r.BV.runKernel(a.sH,g,y);return(0,o.X)(b,d.shape)}})},691:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({bincount_:function(e,t,n){const o=(0,s._1)(e,"x","bincount"),l=(0,s._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(l.size===o.size||0===l.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${l.shape}.`));const u={x:o,weights:l},c={size:n};return r.BV.runKernel(a.zv,u,c)}})},3024:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(674),o=n(2125),l=n(6488);const u=(0,o.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const u=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(u[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const d={x:n},p={reps:c};return r.BV.runKernel(a.n9,d,p)}})},7644:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>s})},3522:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(6e3),a=n(1525);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},3998:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return r.BV.runKernel(a.RF,o,l)}})},5055:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil")};return r.BV.runKernel(a.gJ,t)}})},486:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({clipByValue_:function(e,t,n){const o=(0,s._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const l={x:o},u={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,l,u)}})},674:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},5768:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),o=(0,s._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return r.BV.runKernel(a.Zz,l)}})},5307:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(674);const l=(0,n(2125).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const l=n,u={axis:t};return r.BV.runKernel(a.Eh,l,u)}})},6086:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(4382),a=n(1525),s=n(1655),i=n(5799),o=n(2125),l=n(6488);const u=(0,o.op)({conv1d_:function(e,t,n,o,u="NWC",c=1,d){const p=(0,r._1)(e,"x","conv1d"),h=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),null!=d&&a.hu(a.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`)),a.hu(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.hu("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,l.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],v=(0,s.T)(y,g,b,o,"NHWC",x,d);return m?(0,l.X)(v,[v.shape[2],v.shape[3]]):(0,l.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},1655:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(5799),l=n(2125),u=n(6488);const c=(0,l.op)({conv2d_:function(e,t,n,l,c="NHWC",d=[1,1],p){const h=(0,s._1)(e,"x","conv2d"),f=(0,s._1)(t,"filter","conv2d");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&i.hu(i.GN(l),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const b={x:m,filter:f},x={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p},v=r.BV.runKernel(a.mh,b,x);return g?(0,u.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},3775:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(7845),a=n(671),s=n(1525),i=n(2125),o=n(6488);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l,u="NHWC",c){let d=e;3===e.rank&&(d=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===u?d.shape[3]:d.shape[1],f="NHWC"===u?p.shape[3]:p.shape[1];s.hu(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),s.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&s.hu(s.GN(l),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const m={x:d,dy:p},g={strides:i,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:n};return r.BV.runKernel(a.wU,m,g)}})},7349:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(7845),a=n(671),s=n(1525),i=n(2125),o=n(6488);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l,u="NHWC",c){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,p=t,h=!1;3===t.rank&&(h=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.hu(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===u?d[3]:d[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&s.hu(s.GN(l),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const g={dy:p,filter:n},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:c,inputShape:d},b=r.BV.runKernel(a.wm,g,y);return h?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},3028:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(4382),a=n(7349);const s=(0,n(2125).op)({conv2dTranspose_:function(e,t,n,s,i,o){const l=(0,r._1)(e,"x","conv2dTranspose"),u=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,l,u,s,i,"NHWC",o)}})},8820:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(5799),l=n(2125),u=n(6488);const c=(0,l.op)({conv3d_:function(e,t,n,l,c="NDHWC",d=[1,1,1]){const p=(0,s._1)(e,"x","conv3d"),h=(0,s._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===h.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`)),i.hu(f.shape[4]===h.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`)),i.hu((0,o.jT)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:h},y={strides:n,pad:l,dataFormat:c,dilations:d},b=r.BV.runKernel(a.x1,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},2793:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(7845),a=n(671),s=n(1525),i=n(2125),o=n(6488);const l=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,l){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const p=u[4],h=c.shape[4];s.hu(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),s.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),s.hu(h===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:i,inputShape:u},g=r.BV.runKernel(a.ik,f,m);return d?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},5799:(e,t,n)=>{"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[l,c]=u(t);let d;if("channelsLast"===o)d=[l,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[l,c,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[l,u,d]=c(t);let p,h;if("NDHWC"===i)h="channelsLast",p=[l,u,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",p=[l,u,d,e[1],e[1]]}return o(e,p,n,r,a,!1,h,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[c,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,h,f]=e}const[g,y,,b]=t,[x,v]=u(n),[w,k]=u(r),S=d(g,w),N=d(y,k),{padInfo:I,outHeight:T,outWidth:C}=function(e,t,n,r,a,s,i,o,u){let c,d,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[1];return[p((e[0]-t+2*r)/n+1,a),p((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+l+f)/r+1,o),h=p((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:d,outWidth:h}}(a,h,f,x,v,S,N,s,o),E=i?b*m:b;let $;return"channelsFirst"===o?$=[c,E,T,C]:"channelsLast"===o&&($=[c,T,C,E]),{batchSize:c,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:E,padInfo:I,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationHeight:w,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,h,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,h,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,h,f,m]=e}const[y,b,x,,v]=t,[w,k,S]=c(n),[N,I,T]=c(r),C=d(y,N),E=d(b,I),$=d(x,T),{padInfo:_,outDepth:A,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,i,o,u,c,d){let h,f,m,g;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=l(e,t,r));const i=e[1],o=e[2];return[p((e[0]-t+2*a)/r+1,s),p((i-t+2*a)/r+1,s),p((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,l=(m-1)*s+u-n,d=(g-1)*i+c-r,p=Math.floor(e/2),y=e-p,b=Math.floor(l/2),x=l-b,v=Math.floor(d/2);h={top:b,bottom:x,left:v,right:d-v,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-u+1)/s),g=Math.ceil((r-c+1)/i)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(a,h,f,m,w,k,S,C,E,$,o),D=s?v*g:v;let O;return"channelsFirst"===i?O=[u,D,A,R,F]:"channelsLast"===i&&(O=[u,A,R,F,D]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:f,inWidth:m,inChannels:g,outDepth:A,outHeight:R,outWidth:F,outChannels:D,padInfo:_,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:$,dilationDepth:N,dilationHeight:I,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function h(e){const[t,n,r]=u(e);return 1===t&&1===n&&1===r}function f(e,t){return h(e)||h(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>r,Xw:()=>a,pl:()=>s,Ix:()=>i,jw:()=>o,aO:()=>l,I0:()=>h,jT:()=>f,sl:()=>m})},2811:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos")};return r.BV.runKernel(a.mc,t)}})},3369:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh")};return r.BV.runKernel(a.TR,t)}})},294:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,s._1)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(a.iH,o,l)}})},7862:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({denseBincount_:function(e,t,n,o=!1){const l=(0,s._1)(e,"x","denseBincount"),u=(0,s._1)(t,"weights","denseBincount");i.hu("int32"===l.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${l.dtype}`)),i.hu(l.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${l.rank}.`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===l.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${l.shape}, weights shape: ${u.shape}.`));const c={x:l,weights:u},d={size:n,binaryOutput:o};return r.BV.runKernel(a.QR,c,d)}})},9805:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,s._1)(e,"x","depthToSpace"),l="NHWC"===n?o.shape[1]:o.shape[2],u="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const d={x:o},p={blockSize:t,dataFormat:n};return r.BV.runKernel(a.T0,d,p)}})},5633:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,u="NHWC",c=[1,1],d){const p=(0,s._1)(e,"x","depthwiseConv2d"),h=(0,s._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===h.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),i.hu(f.shape[3]===h.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null!=d&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`));const g={x:f,filter:h},y={strides:n,pad:o,dataFormat:u,dilations:c,dimRoundingMode:d},b=r.BV.runKernel(a.ci,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},2418:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(7845),a=n(671),s=n(2125),i=n(6488);const o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,l=[1,1],u){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:d},h={strides:s,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return r.BV.runKernel(a.sL,p,h)}})},8717:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(7845),a=n(671),s=n(2125),i=n(6488);const o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,l=[1,1],u){let c=t,d=!1;3===t.rank&&(d=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},h={strides:s,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},f=r.BV.runKernel(a.y7,p,h);return d?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},4113:(e,t,n)=>{"use strict";n.d(t,{W:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({dilation2d_:function(e,t,n,o,u=[1,1],c="NHWC"){const d=(0,s._1)(e,"x","dilation2d"),p=(0,s._1)(t,"filter","dilation2d");i.hu(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let h=d,f=!1;3===d.rank&&(h=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},g={strides:n,pad:o,dilations:u},y=r.BV.runKernel(a.p4,m,g);return f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},6453:(e,t,n)=>{"use strict";n.d(t,{h:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(4308);const l=(0,n(2125).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),l=(0,i._1)(t,"b","div");if([n,l]=(0,s.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.q)(n,l);const u={a:n,b:l};return r.BV.runKernel(a.oH,u,{})}})},7133:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(290),a=n(4382),s=n(6453),i=n(9489),o=n(2125),l=n(13),u=n(9433);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),o=(0,a._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,s.h)(n,o),d=(0,u.P)(c),p=(0,i.D)(o,d);return(0,l.a)(p,d,c)}})},8159:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(4382),a=n(1525),s=n(5375),i=n(2125),o=n(6488);const l=(0,i.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),i=(0,r._1)(t,"t2","dot");a.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===i.rank?i.size:i.shape[0];if(a.hu(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),r=(0,s.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),r=(0,s.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,s.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,s.O)(n,e)}}})},4678:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"einsum"))),i={equation:e};return r.BV.runKernel(a.$g,n,i)}})},9955:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu")};return r.BV.runKernel(a.SX,t)}})},9489:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),l=(0,i._1)(t,"b","equal","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.hd,u)}})},8807:(e,t,n)=>{"use strict";n.d(t,{q:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(3998);const l=(0,n(2125).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(a.Om,n)}})},2864:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},86:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return r.BV.runKernel(a.YF,o,l)}})},714:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return r.BV.runKernel(a.Y0,t)}})},8213:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7845),a=n(671);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},6891:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor")};return r.BV.runKernel(a.OR,t)}})},4308:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.je,l)}})},3850:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>N});var r=n(7845),a=n(9203),s=n(671),i=n(290),o=n(4382),l=n(1525),u=n(7640),c=n(7644),d=n(1655),p=n(3775),h=n(7349),f=n(5799),m=n(74),g=n(2125),y=n(6488);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:v,bias:w,activation:k="linear",preluActivationWeights:S,leakyreluAlpha:N}){if(k=k||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,d.T)(e,t,n,g,b,x,v);return null!=w&&(r=(0,u.I)(r,w)),(0,m.QH)(r,k,S,N)}const I=(0,o._1)(e,"x","conv2d"),T=(0,o._1)(t,"filter","conv2d");let C=I,E=!1;3===I.rank&&(E=!0,C=(0,y.X)(I,[1,I.shape[0],I.shape[1],I.shape[2]])),l.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),l.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),null!=v&&l.hu(l.GN(g),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${v} but got pad ${g}.`)),l.hu(C.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${C.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),l.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),l.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const $=f.Ix(C.shape,T.shape,n,x,g,v);let _,A;null!=w&&(_=(0,o._1)(w,"bias","fused conv2d"),[_]=(0,i.makeTypesMatch)(_,I),c.$N($.outShape,_.shape)),null!=S&&(A=(0,o._1)(S,"prelu weights","fused conv2d"));const R=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k);l.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const u=[(0,h._)(a.shape,o,r,n,g),(0,p.p)(a,o,r.shape,n,g)];if(null!=i){const e=(0,m.pf)(i,o);u.push(e)}return u},F={x:C,filter:T,bias:_,preluActivationWeights:A},D={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:v,activation:k,leakyreluAlpha:N};return null==w?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s._V,F,D);return n([t,e,a]),E&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s._V,F,D);return a([t,e,i,n]),E&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(C,T,_)}});var x=n(5633),v=n(2418),w=n(8717);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:d,dataFormat:p="NHWC",dilations:h=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:S,leakyreluAlpha:N}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(e,t,n,d,p,h,g);return null!=b&&(r=(0,u.I)(r,b)),(0,m.QH)(r,k,S,N)}const I=(0,o._1)(e,"x","depthwiseConv2d"),T=(0,o._1)(t,"filter","depthwiseConv2d");let C=I,E=!1;3===I.rank&&(E=!0,C=(0,y.X)(I,[1,I.shape[0],I.shape[1],I.shape[2]])),l.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),l.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),l.hu(C.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==h&&(h=[1,1]),l.hu(f.jT(n,h),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),null!=g&&l.hu(l.GN(d),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${d}.`));const $=f.Ix(C.shape,T.shape,n,h,d,g,!0);let _,A;null!=b&&(_=(0,o._1)(b,"bias","fused conv2d"),[_]=(0,i.makeTypesMatch)(_,I),c.$N($.outShape,_.shape)),null!=S&&(A=(0,o._1)(S,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{l.hu(f.I0(h),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${h}'`));const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k),u=(0,w.v)(a.shape,o,r,n,d,h,g),c=(0,v.z)(a,o,r.shape,n,d,h,g);return null!=i?[u,c,(0,m.pf)(_,o)]:[u,c]},F={x:C,filter:T,bias:_,preluActivationWeights:A},D={strides:n,pad:d,dataFormat:p,dilations:h,dimRoundingMode:g,activation:k,leakyreluAlpha:N};return null==b?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s.lu,F,D);return n([t,e,a]),E&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s.lu,F,D);return a([t,e,i,n]),E&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(C,T,_)}});var S=n(5375);const N=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:d=!1,bias:p,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,h)){let r=(0,S.O)(e,t,n,d);return null!=p&&(r=(0,u.I)(r,p)),(0,m.QH)(r,h,f,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const v=n?b.shape[b.rank-2]:b.shape[b.rank-1],w=d?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],N=d?x.shape[x.rank-2]:x.shape[x.rank-1],I=b.shape.slice(0,-2),T=x.shape.slice(0,-2),C=l.NA(I),E=l.NA(T);l.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),l.hu(l.cO(I,T),(()=>`Error in fused matMul: outer dimensions (${I}) and (${T}) of Tensors with shapes ${b.shape} and ${x.shape} must match.`)),l.hu(v===w,(()=>`Error in fused matMul: inner shapes (${v}) and (${w}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${d} must match.`));const $=b.shape.slice(0,-2).concat([k,N]),_=n?(0,y.X)(b,[C,v,k]):(0,y.X)(b,[C,k,v]),A=d?(0,y.X)(x,[E,N,w]):(0,y.X)(x,[E,w,N]);let R,F;null!=p&&(R=(0,o._1)(p,"bias","fused matMul"),[R]=(0,i.makeTypesMatch)(R,b),c.$N($,R.shape)),null!=f&&(F=(0,o._1)(f,"prelu weights","fused matMul"));const D=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)((0,y.X)(e,s.shape),s,h);let l,u;return n||d?!n&&d?(l=(0,S.O)(o,a,!1,!1),u=(0,S.O)(o,r,!0,!1)):n&&!d?(l=(0,S.O)(a,o,!1,!0),u=(0,S.O)(r,o,!1,!1)):(l=(0,S.O)(a,o,!0,!0),u=(0,S.O)(o,r,!0,!0)):(l=(0,S.O)(o,a,!1,!0),u=(0,S.O)(r,o,!0,!1)),null!=p?[l,u,(0,m.pf)(i,o)]:[l,u]},O={a:_,b:A,bias:R,preluActivationWeights:F},M={transposeA:n,transposeB:d,activation:h,leakyreluAlpha:g};return null==p?(0,a.cb)(((e,t,n)=>{const a=r.BV.runKernel(s.us,O,M);return n([e,t,a]),{value:(0,y.X)(a,$),gradFunc:D}}))(_,A):(0,a.cb)(((e,t,n,a)=>{const i=r.BV.runKernel(s.us,O,M);return a([e,t,i,n]),{value:(0,y.X)(i,$),gradFunc:D}}))(_,A,R)}})},74:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var r=n(7644),a=n(9955),s=n(5999),i=n(3286),o=n(8616),l=n(3697),u=n(9298),c=n(6488),d=n(9789),p=n(3648),h=n(4661);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,h.S)(n,a)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,u.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,d.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},9690:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},l={axis:n,batchDims:i};return r.BV.runKernel(a.qi,o,l)}})},5831:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({gatherND_:function(e,t){const n=(0,s._1)(t,"indices","gatherND","int32"),i={params:(0,s._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(a.q1,i)}})},8733:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),l=(0,i._1)(t,"b","greater","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.iZ,u)}})},7101:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),l=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.Ac,u)}})},7329:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},58:(e,t,n)=>{"use strict";n.d(t,{I:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const u=(0,s._1)(e,"images","resizeBilinear");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a._Y,p,h);return d?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},1407:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const u=(0,s._1)(e,"images","resizeNearestNeighbor");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a.dp,p,h);return d?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},8164:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({isFinite_:function(e){const t={x:(0,s._1)(e,"x","isFinite")};return r.BV.runKernel(a.av,t)}})},3145:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({isInf_:function(e){const t={x:(0,s._1)(e,"x","isInf")};return r.BV.runKernel(a.iW,t)}})},4191:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return r.BV.runKernel(a.r7,t)}})},5999:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(a.J$,n,i)}})},7201:(e,t,n)=>{"use strict";n.d(t,{d:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),l=(0,i._1)(t,"b","less","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.vt,u)}})},7544:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),l=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.CA,u)}})},3585:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(7845),a=n(671);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.BV.runKernel(a.e7,{},s)}},7352:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,u=.5){const c=(0,s._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=c,p=!1;3===c.rank&&(p=!0,d=(0,l.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:o,beta:u},m=r.BV.runKernel(a.eZ,h,f);return p?(0,l.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},1750:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log")};return r.BV.runKernel(a.Zb,t)}})},9649:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},6341:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(9203),a=n(4382),s=n(3286),i=n(3568),o=n(2125),l=n(9789),u=n(8019);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,a._1)(e,"x","logSigmoid");return(0,r.cb)((e=>({value:(0,i.W)((0,u.W)((0,i.W)(e))),gradFunc:t=>(0,s.d)(t,(0,l.X)((0,i.W)(e)))})))(t)}})},8948:(e,t,n)=>{"use strict";n.d(t,{C:()=>h});var r=n(9203),a=n(4382),s=n(3998),i=n(2864),o=n(1750),l=n(7437),u=n(3286),c=n(2125),d=n(7458),p=n(4661);const h=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r.cb)(((e,n)=>{const r=(0,l.F)(e,t,!0),a=(0,d.l)(e,r),c=(0,d.l)((0,s.p)(a,"float32"),(0,o.c)((0,p.S)((0,i.Q)(a),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.Q)(r);return(0,d.l)(e,(0,u.d)((0,p.S)(e,t,!0),a))}}}))(n)}})},1859:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(4382),a=n(1525),s=n(7640),i=n(6555),o=n(2864),l=n(1750),u=n(7437),c=n(2125),d=n(6488),p=n(7458),h=n(4661);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,a.EC)(t,c.shape),m=(0,u.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,h.S)(y,f),x=(0,l.c)(b),v=(0,s.I)((0,d.X)(m,x.shape),x);if(n){const e=(0,i.rv)(v.shape,f);return(0,d.X)(v,e)}return v}})},926:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(7644);const o=(0,n(2125).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),o=(0,s._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const l={a:n,b:o};return r.BV.runKernel(a.PY,l)}})},3952:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(a.Vf,t)}})},8940:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(7644);const o=(0,n(2125).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),o=(0,s._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const l={a:n,b:o};return r.BV.runKernel(a.MZ,l)}})},1940:(e,t,n)=>{"use strict";n.d(t,{e:()=>l});var r=n(4382),a=n(7644),s=n(926),i=n(3952),o=n(8940);const l=(0,n(2125).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),l=(0,r._1)(t,"b","logicalXor","bool");return(0,a.$N)(n.shape,l.shape),(0,s.H)((0,o.K)(e,t),(0,i.h)((0,s.H)(e,t)))}})},2572:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5375:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({matMul_:function(e,t,n=!1,o=!1){let l=(0,i._1)(e,"a","matMul"),u=(0,i._1)(t,"b","matMul");[l,u]=(0,s.makeTypesMatch)(l,u);const c={a:l,b:u},d={transposeA:n,transposeB:o};return r.BV.runKernel(a.XL,c,d)}})},7437:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({max_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,i,o)}})},8881:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(5799),l=n(2125),u=n(6488);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const d=(0,s._1)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(l),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const f={x:p},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=r.BV.runKernel(a.mT,f,m);return h?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},8157:(e,t,n)=>{"use strict";n.d(t,{Y:()=>u});var r=n(7845),a=n(671),s=n(4382),i=n(1525),o=n(2125),l=n(6488);const u=(0,o.op)({maxPool3d_:function(e,t=[1,1,1],n,o,u,c="NDHWC"){const d=(0,s._1)(e,"x","maxPool3d");let p=d,h=!1;4===d.rank&&(h=!0,p=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.hu(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.hu("NDHWC"===c,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),null!=u&&i.hu(i.GN(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${u} but got pad ${o}.`));const f={x:p},m={filterSize:t,strides:n,pad:o,dimRoundingMode:u,dataFormat:c},g=r.BV.runKernel(a.OA,f,m);return h?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2993:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const l={x:(0,s._1)(e,"x","maxPoolWithArgmax")},u={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},c=r.BV.runKernel(a.vF,l,u);return{result:c[0],indexes:c[1]}}})},5792:(e,t,n)=>{"use strict";n.d(t,{g:()=>u});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644),l=n(3998);const u=(0,n(2125).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),u=(0,i._1)(t,"b","maximum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.BM,c)}})},7104:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({mean_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(a.q2,i,o)}})},5553:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({min_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(a.c1,i,o)}})},5874:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644),l=n(3998);const u=(0,n(2125).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),u=(0,i._1)(t,"b","minimum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernel(a.q8,c)}})},8237:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,s._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-l&&t[e][1]>=0&&t[e][1]<=o.shape[e]-l,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-l} or less than 0 for input of shape ${o.shape}`));const u={paddings:t,mode:n},c={x:o};return r.BV.runKernel(a.jQ,c,u)}})},789:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.Vb,l)}})},3286:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.wY,l)}})},3191:(e,t,n)=>{"use strict";n.d(t,{S:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(2125),o=n(6488);const l=(0,i.op)({multinomial_:function(e,t,n,i=!1){const l=(0,s._1)(e,"logits","multinomial"),u=l.size,c=l.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);n=n||Math.random();const d={logits:1===c?(0,o.X)(l,[1,-1]):l},p={numSamples:t,seed:n,normalized:i},h=r.BV.runKernel(a.NZ,d,p);return 1===c?(0,o.X)(h,[h.size]):h}})},3568:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},4581:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(4382),a=n(1525),s=n(6983),i=n(6555),o=n(7437),l=n(5553),u=n(2125),c=n(4260),d=n(6488),p=n(6606),h=n(8260),f=n(4013),m=n(4661);function g(e,t,n=null){if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,d.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,o.F)((0,s.W)(e),n);if(t===-1/0)return(0,l.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,h._)((0,m.S)((0,c.s)((0,s.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,l.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,u.op)({norm_:function(e,t="euclidean",n=null,s=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let l=o.shape;if(s){const t=(0,a.EC)(n,e.shape);l=i.rv(o.shape,t)}return(0,d.X)(o,l)}})},6568:(e,t,n)=>{"use strict";n.d(t,{Q:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),l=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a.yQ,u)}})},2614:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,s._1)(e,"indices","oneHot","int32")},l={depth:t,onValue:n,offValue:i};return r.BV.runKernel(a.we,o,l)}})},326:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7845),a=n(1525),s=n(5768),i=n(4731);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7145:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return r.BV.runKernel(a.qW,t)}})},2125:(e,t,n)=>{"use strict";n.d(t,{z:()=>s,op:()=>i});var r=n(7845),a=n(1525);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},6087:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>S.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>s._,IHx:()=>i.I,QBD:()=>o.Q,$6P:()=>l.$,YjB:()=>u.Y,NqF:()=>c.N,vHJ:()=>d.v,ZRM:()=>p.Z,VfV:()=>h.V,z4N:()=>f.z,fvJ:()=>m.f,C80:()=>g.C,wS1:()=>y.w,uR5:()=>b.u,zEQ:()=>C,tgs:()=>$.t,Dxk:()=>A,JY5:()=>R,p3b:()=>F,E4h:()=>E.E,yE8:()=>D.y,anm:()=>Dn,UFq:()=>O.U,f3b:()=>M.f,pju:()=>z.p,mDi:()=>L.m,iUl:()=>B.i,d9v:()=>P.d,PYB:()=>V.P,zoF:()=>v.z,gME:()=>W,Izb:()=>U,MNy:()=>G,ZaL:()=>H,PAt:()=>j.P,Tek:()=>q.T,bc:()=>X.b,pdZ:()=>K.p,$QV:()=>Y,mCk:()=>Z.m,f9Y:()=>J.f,mew:()=>Gn,zbp:()=>ee.z,ppE:()=>te.p,nTT:()=>ne.n,B10:()=>re.B,Ka3:()=>ie,WmZ:()=>oe.W,hiC:()=>le.h,NTj:()=>ue.N,AKD:()=>ce.A,rvX:()=>Wn,WYO:()=>de.W,pyx:()=>pe.p,GRh:()=>Un,DgJ:()=>he.D,qNN:()=>fe.q,Qqt:()=>me.Q,dt4:()=>ge.d,t$B:()=>ye.t,iyy:()=>ve,kp_:()=>nn.k,hlL:()=>we.h,GWj:()=>ke.G,qPi:()=>Se.q,imm:()=>jn,Iqj:()=>Ne.I,dbB:()=>Vn.d,pjt:()=>Ie.p,brS:()=>Te.b,Sxn:()=>rn.S,asL:()=>Ce.a,BHj:()=>Dr,V3u:()=>Hn,wx0:()=>an.w,xVT:()=>Ee.x,UWc:()=>$e.U,i2d:()=>_e.i,hi7:()=>Ae.h,d9m:()=>Re.d,zN1:()=>Fe.z,$r2:()=>Or,SX3:()=>De.S,G9k:()=>Oe.G,cM7:()=>Me.c,Krr:()=>ze.K,e_t:()=>Le.e,CmS:()=>Be.C,l_t:()=>Pe.l,HvI:()=>Ve.H,hJK:()=>We.h,K5V:()=>Ue.K,egP:()=>Ge.e,MB5:()=>Mr,OI3:()=>w.O,Fp7:()=>He.F,_sB:()=>je._,YQQ:()=>qe.Y,Ip$:()=>Xe.I,gWQ:()=>Ke.g,J69:()=>Qe.J,ry_:()=>Je,VV$:()=>et.V,LTh:()=>tt.L,VdP:()=>nt.V,wQq:()=>rt.w,Gi7:()=>ot,p_:()=>Ln,dC7:()=>k.d,rq4:()=>lt,SJ_:()=>ut.S,W76:()=>ct.W,KOy:()=>Mn.K,Quu:()=>dt.Q,lfX:()=>pt.l,iUs:()=>Ye.i,JpU:()=>ht.J,op:()=>S.op,N2O:()=>ft,vku:()=>mt.v,pNR:()=>gt,koy:()=>yt,t1L:()=>bt,lGY:()=>xt,d_R:()=>vt.d,sQ3:()=>wt.s,AL3:()=>kt.A,S0v:()=>St.S,WVs:()=>Nt.W,TN_:()=>It,wzB:()=>Ct,nGf:()=>Et,LGj:()=>$t.L,w6H:()=>_t.w,kwC:()=>At.k,M25:()=>Rt.M,UYe:()=>Ft.U,btT:()=>Dt.b,XLQ:()=>be.X,GYS:()=>Ot.G,SDf:()=>Mt,diP:()=>zt,sx7:()=>Lt,mG2:()=>Bt,QEs:()=>sn.Q,NMM:()=>Pt.N,bp0:()=>Vt.b,iD$:()=>Wt.i,snQ:()=>Bn.s,U8D:()=>Ut.U,U_I:()=>Gt.U,ODp:()=>Ht.O,XD2:()=>N.X,Xxe:()=>jt.X,tdS:()=>Fr,O$l:()=>qt.O,R_K:()=>Xt.R,tPi:()=>I.t,jZU:()=>Kt,SmN:()=>Qt,CnO:()=>Yt,p0P:()=>Zt,XAC:()=>Jt.X,Wvh:()=>en.W,fBT:()=>tn.f,rVs:()=>zr,ers:()=>Pn.e,uN7:()=>Rr,Vl2:()=>on.V,_b3:()=>ln._,h62:()=>st.h,$i:()=>un.$,L9e:()=>cn.L,knu:()=>dn.k,Nbs:()=>pn.N,NXj:()=>hn.N,Z_8:()=>Lr,luU:()=>it.l,Smz:()=>fn.S,ORZ:()=>mn.O,AEp:()=>T.A,XeE:()=>gn.X,RRF:()=>yn.R,odF:()=>xn,wOQ:()=>vn.w,yXz:()=>wn,Bfx:()=>kn,xZs:()=>Sn,Gg6:()=>xe.G,hg7:()=>Nn.h,p4s:()=>On.p,Xu6:()=>In.X,Two:()=>Tn.T,pUJ:()=>Cn.p,HHK:()=>En.H,VD$:()=>$n,arb:()=>_n.a,itS:()=>An.i,lls:()=>Rn.l,P84:()=>Fn.P});var r=n(6983),a=n(4941),s=n(7839),i=n(7640),o=n(3835),l=n(1199),u=n(6159),c=n(6540),d=n(2237),p=n(9520),h=n(9692),f=n(5090),m=n(4265),g=n(9984),y=n(4614),b=n(1124),x=n(4382),v=n(5307),w=n(5375),k=n(3286),S=n(2125),N=n(9789),I=n(1015),T=n(1815);const C=(0,S.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),l=(0,x._1)(t,"lstmKernel","basicLSTMCell"),u=(0,x._1)(n,"lstmBias","basicLSTMCell"),c=(0,x._1)(r,"data","basicLSTMCell"),d=(0,x._1)(a,"c","basicLSTMCell"),p=(0,x._1)(s,"h","basicLSTMCell"),h=(0,v.z)([c,p],1),f=(0,w.O)(h,l),m=(0,i.I)(f,u),g=m.shape[0],y=m.shape[1]/4,b=[g,y],S=(0,I.t)(m,[0,0],b),C=(0,I.t)(m,[0,y],b),E=(0,I.t)(m,[0,2*y],b),$=(0,I.t)(m,[0,3*y],b),_=(0,i.I)((0,k.d)((0,N.X)(S),(0,T.A)(C)),(0,k.d)(d,(0,N.X)((0,i.I)(o,E))));return[_,(0,k.d)((0,T.A)(_),(0,N.X)($))]}});var E=n(9327),$=n(4066),_=n(1525);const A=(0,S.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),l=(0,x._1)(n,"variance","batchNorm");let u,c;return null!=a&&(u=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),_.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),_.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&_.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&_.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,$.t)(i,o,l,c,u,s)}}),R=(0,S.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),l=(0,x._1)(n,"variance","batchNorm");let u,c;return null!=a&&(u=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),_.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),_.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&_.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&_.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,$.t)(i,o,l,c,u,s)}}),F=(0,S.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),l=(0,x._1)(n,"variance","batchNorm");let u,c;return null!=a&&(u=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),_.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),_.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),_.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&_.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&_.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,$.t)(i,o,l,c,u,s)}});var D=n(691),O=n(3024),M=n(3522),z=n(3998),L=n(5055),B=n(486),P=n(674),V=n(5768);const W=(0,S.op)({concat1d_:function(e){return(0,v.z)(e,0)}}),U=(0,S.op)({concat2d_:function(e,t){return(0,v.z)(e,t)}}),G=(0,S.op)({concat3d_:function(e,t){return(0,v.z)(e,t)}}),H=(0,S.op)({concat4d_:function(e,t){return(0,v.z)(e,t)}});var j=n(6086),q=n(1655),X=n(3028),K=n(8820),Q=n(2793);const Y=(0,S.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,x._1)(e,"x","conv3dTranspose"),i=(0,x._1)(t,"filter","conv3dTranspose");return(0,Q._)(n,s,i,r,a)}});var Z=n(2811),J=n(3369),ee=n(294),te=n(7862),ne=n(9805),re=n(5633),ae=n(7845),se=n(671);const ie=(0,S.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return ae.BV.runKernel(se.$w,t)}});var oe=n(4113),le=n(6453),ue=n(7133),ce=n(8159),de=n(4678),pe=n(9955),he=n(9489),fe=n(8807),me=n(2864),ge=n(86),ye=n(714),be=n(6488),xe=n(3066);const ve=(0,S.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,M.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=(0,be.X)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,xe.G)((0,ge.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)((0,ge.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var we=n(8213),ke=n(6891),Se=n(4308),Ne=n(9690),Ie=n(8733),Te=n(7101),Ce=n(7329),Ee=n(8164),$e=n(3145),_e=n(4191),Ae=n(5999),Re=n(7201),Fe=n(7544),De=n(3585),Oe=n(7352),Me=n(1750),ze=n(9649),Le=n(6341),Be=n(8948),Pe=n(1859),Ve=n(926),We=n(3952),Ue=n(8940),Ge=n(1940),He=n(7437),je=n(8881),qe=n(8157),Xe=n(2993),Ke=n(5792),Qe=n(7104),Ye=n(326),Ze=n(6e3);function Je(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,x._1)(e,"x","meshgrid",e instanceof Ze.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,x._1)(t,"y","meshgrid",t instanceof Ze.es?t.dtype:"float32");const s=(0,_.NA)(r.shape),i=(0,_.NA)(a.shape);return"xy"===n?(r=(0,be.X)(r,[1,-1]),a=(0,be.X)(a,[-1,1]),[(0,w.O)((0,Ye.i)([i,1],r.dtype),r),(0,w.O)(a,(0,Ye.i)([1,s],a.dtype))]):(r=(0,be.X)(r,[-1,1]),a=(0,be.X)(a,[1,-1]),[(0,w.O)(r,(0,Ye.i)([1,i],r.dtype)),(0,w.O)((0,Ye.i)([s,1],a.dtype),a)])}var et=n(5553),tt=n(5874),nt=n(8237),rt=n(789),at=n(6555),st=n(4013),it=n(7458);const ot=(0,S.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const r=(0,_.EC)(t,e.shape),a=(0,Qe.J)(e,r,n);let s=a.shape;n||(s=(0,at.rv)(a.shape,r));const i=(0,st.h)((0,it.l)((0,z.p)(e,"float32"),(0,be.X)(a,s)));return{mean:a,variance:(0,Qe.J)(i,r,n)}}}),lt=(0,S.op)({multiRNNCell_:function(e,t,n,r){const a=(0,x._1)(t,"data","multiRNNCell"),s=(0,x.sI)(n,"c","multiRNNCell"),i=(0,x.sI)(r,"h","multiRNNCell");let o=a;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}});var ut=n(3191),ct=n(3568),dt=n(6568),pt=n(2614),ht=n(7145);const ft=(0,S.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),r=(0,x._1)(t,"v2","outerProduct");_.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,be.X)(n,[-1,1]),s=(0,be.X)(r,[1,-1]);return(0,w.O)(a,s)}});var mt=n(3879);const gt=(0,S.op)({pad1d_:function(e,t,n=0){return(0,_.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,mt.v)(e,[t],n)}}),yt=(0,S.op)({pad2d_:function(e,t,n=0){return(0,_.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),bt=(0,S.op)({pad3d_:function(e,t,n=0){return(0,_.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),xt=(0,S.op)({pad4d_:function(e,t,n=0){return(0,_.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}});var vt=n(6300),wt=n(4260),kt=n(8616),St=n(4969),Nt=n(833);const It=(0,S.op)({rand_:function(e,t,n){const r=(0,_.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ae.BV.makeTensor(a,e,n)}});var Tt=n(9023);const Ct=(0,S.op)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.T9(t,n,r,a),i=(0,M.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Et=(0,S.op)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.Yi(t,n,r,!1,a),i=(0,M.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var $t=n(9713),_t=n(1593),At=n(3870),Rt=n(8550),Ft=n(3697),Dt=n(9298),Ot=n(7789);const Mt=(0,S.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return _.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Ot.G)(t,0)}}),zt=(0,S.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}}),Lt=(0,S.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}}),Bt=(0,S.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return _.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}});var Pt=n(1684),Vt=n(149),Wt=n(6606),Ut=n(7770),Gt=n(5238),Ht=n(2014),jt=n(6788),qt=n(1328),Xt=n(7755);const Kt=(0,S.op)({slice1d_:function(e,t,n){const r=(0,x._1)(e,"x","slice1d");return _.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,I.t)(r,[t],[n])}}),Qt=(0,S.op)({slice2d_:function(e,t,n){const r=(0,x._1)(e,"x","slice2d");return _.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,I.t)(r,t,n)}}),Yt=(0,S.op)({slice3d_:function(e,t,n){const r=(0,x._1)(e,"x","slice3d");return _.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,I.t)(r,t,n)}}),Zt=(0,S.op)({slice4d_:function(e,t,n){const r=(0,x._1)(e,"x","slice4d");return _.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,I.t)(r,t,n)}});var Jt=n(6266),en=n(8019),tn=n(295),nn=n(9208),rn=n(8279),an=n(9961),sn=n(7664),on=n(3779),ln=n(8260),un=n(28),cn=n(8312),dn=n(6279),pn=n(3648),hn=n(225),fn=n(4661),mn=n(1148),gn=n(8890),yn=n(5038),bn=n(2829);function xn(e,t,n){if((0,_.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,x.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,bn.H)(e,t,r,n)}var vn=n(9829);function wn(e,t,n){if((0,_.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,x.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function kn(e,t,n){if((0,_.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,x.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function Sn(e,t,n){if((0,_.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,x.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,bn.H)(e,t,r,n)}var Nn=n(7972),In=n(4443),Tn=n(4684),Cn=n(7614),En=n(7537);function $n(e,t=!0,n,r){return ae.BV.makeVariable(e,t,n,r)}var _n=n(13),An=n(4611),Rn=n(4731),Fn=n(9433);const Dn=async function(e,t,n){const r=(0,x._1)(e,"tensor","boolMask"),a=(0,x._1)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;_.hu(i>0,(()=>"mask cannot be scalar")),_.k5(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];const u=o.slice(0,s).concat([l],o.slice(s+i)),c=(0,be.X)(r,u),d=(0,be.X)(a,[-1]),p=await(0,An.i)(d),h=(0,cn.L)(p,[1]),f=(0,Ne.I)(c,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),c.dispose(),d.dispose(),p.dispose(),f};var On=n(2298),Mn=n(4581),zn=n(290);const Ln=(0,S.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),l=(0,x._1)(n,"decay","movingAverage");(0,zn.assertTypesMatch)(s,o),_.hu(_.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=(0,Wt.i)(1),c=(0,it.l)(u,l);let d=(0,k.d)((0,it.l)(o,s),c);if(a){_.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(r,"step","movingAverage");d=(0,le.h)(d,(0,it.l)(u,(0,wt.s)(l,e)))}return(0,i.I)(s,d)}});var Bn=n(1758),Pn=n(994),Vn=n(5831);const Wn=(0,S.op)({dropout_:function(e,t,n,r){const a=(0,x._1)(e,"x","dropout");if(_.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),_.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ze.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(_.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,l=(0,le.h)((0,ke.G)((0,i.I)((0,$t.L)(s,0,1,"float32",r),o)),o);return(0,k.d)(a,l)}});function Un(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return(0,yn.R)(a,"float32")}const Hn=async function(e,t,n=1){const r=(0,x._1)(e,"predictions","inTopK"),a=(0,x._1)(t,"targets","inTopK");(0,_.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,_.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,_.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,_.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],c=(0,_.WP)("bool",l);for(let e=0;e<l;e++){const t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,gn.X)(c,a.shape,"bool")};var jn=n(3850);const qn=(0,S.op)({hammingWindow_:function(e){return Gn(e,.54,.46)}}),Xn=(0,S.op)({hannWindow_:function(e){return Gn(e,.5,.5)}}),Kn=(0,S.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push((0,I.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=(0,v.z)([(0,I.t)(e,s,t-r),(0,we.h)([r],a)]);i.push(o),s+=n}return 0===i.length?xn([],[0,t]):(0,be.X)((0,v.z)(i),[i.length,t])}}),Qn=(0,S.op)({stft_:function(e,t,n,r,a=Xn){null==r&&(r=Un(t));const s=Kn(e,t,n),i=(0,k.d)(s,a(t));return(0,sn.Q)(i,r)}}),Yn=(0,S.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),l=(0,x._1)(n,"boxInd","cropAndResize","int32"),u=o.shape[0];_.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),_.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),_.hu(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),_.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),_.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),_.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:l},d={method:a,extrapolationValue:s,cropSize:r};return ae.BV.runKernel(se.Vc,c,d)}}),Zn=(0,S.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");_.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ae.BV.runKernel(se.Uy,n,{})}}),Jn=(0,S.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,x._1)(e,"image","rotateWithOffset","float32");_.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return ae.BV.runKernel(se.b9,s,i)}});function er(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),_.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),_.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),_.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),_.hu(1===t.rank,(()=>"scores must be a 1D tensor")),_.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),_.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const tr=(0,S.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),o=er(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ae.BV.runKernel(se.uv,{boxes:s,scores:i},l)}});var nr=n(8673);const rr=(0,S.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),l=er(i,o,n,r,a,s),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},d=ae.BV.runKernel(se.W0,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),ar=(0,S.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),l=er(i,o,n,r,a,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},d=ae.BV.runKernel(se.cy,u,c);return{selectedIndices:d[0],validOutputs:d[1]}}});var sr=n(58),ir=n(1407);const or=(0,S.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,x._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,l,u,c,d=(0,k.d)((0,yn.R)([r]),255);if(_.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),_.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),_.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),_.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,l,u]=(0,on.V)(a,[1,1,1],-1);const e=(0,k.d)(o,.2989),t=(0,k.d)(l,.587),n=(0,k.d)(u,.114);c=(0,i.I)((0,i.I)(e,t),n)}else c=e;"otsu"===t&&(d=function(e,t){let n,r,a,s,o,l,u=(0,yn.R)([-1]),c=(0,yn.R)([0]),d=(0,yn.R)([0]);for(let p=0;p<e.size-1;p++){n=(0,I.t)(e,0,p+1),r=(0,I.t)(e,p+1),o=(0,le.h)((0,fn.S)(n),t),l=(0,le.h)((0,fn.S)(r),t);const h=(0,fn.S)((0,k.d)(n,(0,_t.w)(0,n.size)));a=(0,le.h)(h,(0,fn.S)(n));const f=(0,we.h)(r.shape,n.size),m=(0,i.I)((0,_t.w)(0,r.size),f),g=(0,k.d)(r,m);s=(0,le.h)((0,fn.S)(g),(0,fn.S)(r));const y=(0,it.l)(a,s),b=(0,it.l)(a,s),x=(0,k.d)(o,l);d=(0,k.d)((0,k.d)(x,y),b);const v=(0,Ie.p)(d,c);c=(0,_n.a)(v,d,c),u=(0,_n.a)(v,(0,yn.R)([p]),u)}return u}((0,D.y)((0,z.p)((0,Pt.N)(c),"int32"),(0,gn.X)([]),256),s));const p=n?(0,Fe.z)(c,d):(0,Ie.p)(c,d);return(0,z.p)((0,k.d)(p,255),"int32")}}),lr=(0,S.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=(0,x._1)(e,"image","transform","float32"),o=(0,x._1)(t,"transforms","transform","float32");_.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),_.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),_.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ae.BV.runKernel(se.wx,l,u)}}),ur=(0,S.op)({bandPart_:function(e,t,n){(0,_.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,_.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,x._1)(e,"a","bandPart");(0,_.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=(0,be.X)((0,_t.w)(0,s,1,"int32"),[-1,1]),l=(0,_t.w)(0,i,1,"int32"),u=(0,it.l)(o,l),c=(0,Ve.H)((0,Fe.z)(u,(0,Wt.i)(+t,"int32")),(0,Te.b)(u,(0,Wt.i)(-n,"int32"))),d=(0,Rn.l)([s,i],r.dtype);return(0,be.X)((0,dn.k)((0,En.H)((0,be.X)(r,[-1,s,i])).map((e=>(0,_n.a)(c,e,d)))),a)}}),cr=(0,S.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,_.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,_.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,on.V)(e,e.shape[0],0).map((e=>(0,cn.L)(e,[0])));(0,_.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ae.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,k.d)((0,fn.S)((0,k.d)(n[r],e)),n[r]);e=(0,it.l)(e,t)}return(0,le.h)(e,(0,Mn.K)(e,"euclidean"))})));return t?(0,dn.k)(n,0):n}});var dr=n(4340);function pr(e,t=!1){return ae.BV.tidy((()=>{(0,_.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ve(n),s=(0,P.d)(e);const i=xn([[1]],[1,1]);let o=(0,P.d)(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=s,l=o,u=a;[o,s,a]=ae.BV.tidy((()=>{const t=(0,I.t)(s,[e,e],[n-e,1]),l=(0,Mn.K)(t),u=(0,I.t)(s,[e,e],[1,1]),c=(0,_n.a)((0,Ie.p)(u,0),xn([[-1]]),xn([[1]])),d=(0,it.l)(u,(0,k.d)(c,l)),p=(0,le.h)(t,d);o=1===p.shape[0]?(0,P.d)(i):(0,v.z)([i,(0,I.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=(0,ct.W)((0,le.h)((0,w.O)(c,d),l)),f=(0,I.t)(s,[e,0],[n-e,r]),m=(0,k.d)(h,o),g=(0,On.p)(o);if(0===e)s=(0,it.l)(f,(0,w.O)(m,(0,w.O)(g,f)));else{const t=(0,it.l)(f,(0,w.O)(m,(0,w.O)(g,f)));s=(0,v.z)([(0,I.t)(s,[0,0],[e,r]),t],0)}const y=(0,On.p)(m),b=(0,I.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,it.l)(b,(0,w.O)((0,w.O)(b,o),y));else{const t=(0,it.l)(b,(0,w.O)((0,w.O)(b,o),y));a=(0,v.z)([(0,I.t)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,dr.B9)([t,l,u])}return!t&&n>r&&(a=(0,I.t)(a,[0,0],[n,r]),s=(0,I.t)(s,[0,0],[r,r])),[a,s]}))}const hr=(0,S.op)({qr_:function(e,t=!1){if((0,_.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return pr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,En.H)((0,be.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=pr(e,t);a.push(n),s.push(r)})),[(0,be.X)((0,dn.k)(a,0),e.shape),(0,be.X)((0,dn.k)(s,0),e.shape)]}}});var fr=n(2572);const mr=(0,S.op)({computeWeightedLoss_:function(e,t,n=fr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,x._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,k.d)(r,a);if(n===fr.I.NONE)return s;if(n===fr.I.SUM)return(0,fn.S)(s);if(n===fr.I.MEAN){if(null==a)return(0,Qe.J)(s);{const e=r.size/a.size,t=(0,le.h)((0,fn.S)(s),(0,fn.S)(a));return e>1?(0,le.h)(t,(0,Wt.i)(e)):t}}if(n===fr.I.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,le.h)((0,fn.S)(s),(0,Wt.i)(r.size));{const e=(0,k.d)(a,(0,Ye.i)(r.shape)),t=(0,z.p)((0,fn.S)((0,dt.Q)(e,(0,Wt.i)(0))),"float32");return(0,le.h)((0,fn.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),gr=(0,S.op)({absoluteDifference_:function(e,t,n,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","absoluteDifference"),i=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,_.k5)(s.shape,i.shape,"Error in absoluteDifference: ");const l=(0,r.W)((0,it.l)(s,i));return mr(l,o,a)}}),yr=(0,S.op)({cosineDistance_:function(e,t,n,r,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","cosineDistance"),i=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,x._1)(r,"weights","cosineDistance")),(0,_.k5)(s.shape,i.shape,"Error in cosineDistance: ");const l=(0,Wt.i)(1),u=(0,it.l)(l,(0,fn.S)((0,k.d)(s,i),n,!0));return mr(u,o,a)}}),br=(0,S.op)({hingeLoss_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"labels","hingeLoss");const s=(0,x._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,x._1)(n,"weights","hingeLoss")),(0,_.k5)(a.shape,s.shape,"Error in hingeLoss: ");const o=(0,Wt.i)(1);a=(0,it.l)((0,k.d)((0,Wt.i)(2),a),o);const l=(0,Ft.U)((0,it.l)(o,(0,k.d)(a,s)));return mr(l,i,r)}}),xr=(0,S.op)({huberLoss_:function(e,t,n,a=1,s=fr.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),l=(0,x._1)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","huberLoss")),(0,_.k5)(o.shape,l.shape,"Error in huberLoss: ");const c=(0,Wt.i)(a),d=(0,r.W)((0,it.l)(l,o)),p=(0,tt.L)(d,c),h=(0,it.l)(d,p),f=(0,i.I)((0,k.d)((0,Wt.i)(.5),(0,st.h)(p)),(0,k.d)(c,h));return mr(f,u,s)}}),vr=(0,S.op)({logLoss_:function(e,t,n,r=1e-7,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","logLoss")),(0,_.k5)(s.shape,o.shape,"Error in logLoss: ");const u=(0,Wt.i)(1),c=(0,Wt.i)(r),d=(0,ct.W)((0,k.d)(s,(0,Me.c)((0,i.I)(o,c)))),p=(0,k.d)((0,it.l)(u,s),(0,Me.c)((0,i.I)((0,it.l)(u,o),c))),h=(0,it.l)(d,p);return mr(h,l,a)}}),wr=(0,S.op)({meanSquaredError_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","meanSquaredError"),s=(0,x._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,x._1)(n,"weights","meanSquaredError")),(0,_.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const o=(0,un.$)(a,s);return mr(o,i,r)}}),kr=(0,S.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=fr.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,x._1)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,_.k5)(o.shape,l.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Wt.i)(a),t=(0,Wt.i)(1),n=(0,Wt.i)(.5);o=(0,i.I)((0,k.d)(o,(0,it.l)(t,e)),(0,k.d)(n,e))}const c=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,_.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Ft.U)(a),o=(0,k.d)(a,n),l=(0,ze.K)((0,me.Q)((0,ct.W)((0,r.W)(a))));return(0,i.I)((0,it.l)(s,o),l)}(o,l);return mr(c,u,s)}});var Sr=n(9203);const Nr=(0,S.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=fr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,_.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Wt.i)(r),t=(0,Wt.i)(1),n=(0,Wt.i)(s.shape[1]);s=(0,i.I)((0,k.d)(s,(0,it.l)(t,e)),(0,le.h)(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Sr.cb)(((e,t,r)=>{const a=(0,Pe.l)(t,[n],!0),s=(0,it.l)((0,z.p)(t,"float32"),a);r([e,s]);const i=(0,ct.W)((0,k.d)(s,e));return{value:(0,fn.S)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,at.rv)(e.shape,[n]);return[(0,k.d)((0,be.X)(e,s),(0,it.l)((0,z.p)(r,"float32"),(0,me.Q)(a))),(0,k.d)((0,be.X)(e,s),(0,it.l)((0,me.Q)(a),(0,z.p)(r,"float32")))]}}}))(e,t)}(s,o);return mr(u,l,a)}}),Ir=(0,S.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,x._1)(e,"indices","sparseFillEmptyRows"),s=(0,x._1)(t,"values","sparseFillEmptyRows"),i=(0,x._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,x._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=ae.BV.runKernel(se.O3,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Tr=(0,S.op)({sparseReshape_:function(e,t,n){const r=(0,x._1)(e,"inputIndices","sparseReshape"),a=(0,x._1)(t,"inputShape","sparseReshape"),s=(0,x._1)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=ae.BV.runKernel(se.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cr=(0,S.op)({sparseSegmentMean_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentMean"),a=(0,x._1)(t,"indices","sparseSegmentMean"),s=(0,x._1)(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.YW,i)}}),Er=(0,S.op)({sparseSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentSum"),a=(0,x._1)(t,"indices","sparseSegmentSum"),s=(0,x._1)(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.Zj,i)}}),$r=(0,S.op)({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=(0,x._1)(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},p=ae.BV.runKernel(se._J,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),_r=(0,S.op)({stringSplit_:function(e,t,n=!0){const r=(0,x._1)(e,"input","stringSplit","string"),a=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=ae.BV.runKernel(se.s1,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Ar=(0,S.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ae.BV.runKernel(se.Xk,a,r)}}),Rr={fft:nn.k,ifft:rn.S,rfft:sn.Q,irfft:an.w},Fr={hammingWindow:qn,hannWindow:Xn,frame:Kn,stft:Qn},Dr={flipLeftRight:Zn,resizeNearestNeighbor:ir.j,resizeBilinear:sr.I,rotateWithOffset:Jn,cropAndResize:Yn,nonMaxSuppression:tr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=er(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=(0,nr.GP)(u,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),(0,yn.R)(d,"int32")},nonMaxSuppressionWithScore:rr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),l=er(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:p,selectedScores:h}=(0,nr.pA)(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(p,"int32"),selectedScores:(0,yn.R)(h)}},nonMaxSuppressionPadded:ar,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),l=er(i,o,n,r,a,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=(0,nr.qP)(p,h,u,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(f,"int32"),validOutputs:(0,Wt.i)(m,"int32")}},threshold:or,transform:lr},Or={bandPart:ur,gramSchmidt:cr,qr:hr},Mr={absoluteDifference:gr,computeWeightedLoss:mr,cosineDistance:yr,hingeLoss:br,huberLoss:xr,logLoss:vr,meanSquaredError:wr,sigmoidCrossEntropy:kr,softmaxCrossEntropy:Nr},zr={sparseFillEmptyRows:Ir,sparseReshape:Tr,sparseSegmentMean:Cr,sparseSegmentSum:Er},Lr={stringNGrams:$r,stringSplit:_r,stringToHashBucketFast:Ar}},3879:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({pad_:function(e,t,n=0){const i=(0,s._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:i};return r.BV.runKernel(a.ly,l,o)}})},6300:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var r=n(4382),a=n(1525),s=n(4614),i=n(9327),o=n(5799),l=n(8881),u=n(2125),c=n(6488),d=n(295);const p=(0,u.op)({pool_:function(e,t,n,u,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===u&&(u="valid");const f=(0,r._1)(e,"x","maxPool");let m=f,g=!1;3===f.rank&&(g=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.hu(o.jT(h,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`));const y=o.Xw(m.shape,t,h,p,u),b=[y.dilationHeight,y.dilationWidth];let x;x="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([y.filterHeight,y.filterWidth],b):[[0,0],[0,0]];const v=1===b[0]&&1===b[1],[w,k]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([y.inHeight,y.inWidth],b,x),S=v?u:"valid",N=v?m:(0,d.f)(m,b,w),I=("avg"===n?()=>(0,s.w)(N,t,h,S):()=>(0,l._)(N,t,h,S))(),T=v?I:(0,i.E)(I,b,k);return g?(0,c.X)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},4260:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.pe,l)}})},8616:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},4969:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},833:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(3998);const o=(0,n(2125).op)({prod_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.BV.runKernel(a.Dl,l,u)}})},9023:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>a,T9:()=>s,wv:()=>i});var r=n(600);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},9713:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(3522),a=n(2125),s=n(9023);const i=(0,a.op)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=(0,r.f)(e,a),l=new s.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=l.nextValue();return o.toTensor()}})},1593:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(7845),a=n(671);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},i)}},3870:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},8550:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return r.BV.runKernel(a.$H,t)}})},3697:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},9298:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},6488:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(a.HZ,n,i)}})},7789:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(a.mK,n,i)}})},1684:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},149:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt")};return r.BV.runKernel(a.bV,t)}})},6606:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(1525),a=n(2829);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},1758:(e,t,n)=>{"use strict";n.d(t,{s:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(2125),o=n(3936);const l=(0,i.op)({scatterND_:function(e,t,n){const i=(0,s._1)(e,"indices","scatterND","int32"),l=(0,s._1)(t,"updates","scatterND");o.validateInput(l,i,n);const u={indices:i,updates:l},c={shape:n};return r.BV.runKernel(a.xQ,u,c)}})},3936:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>a,validateInput:()=>s,calculateShapes:()=>i});var r=n(1525);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let e=s;e<i;++e)o*=n[e];const l=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/l,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},7770:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return r.BV.runKernel(a.oF,t)}})},2821:(e,t,n)=>{"use strict";n.d(t,{y:()=>r,$:()=>a});const r=1.7580993408473768,a=1.0507009873554805},5238:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var r=n(4382),a=n(1525),s=n(1655),i=n(5633),o=n(2125),l=n(6488);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u,c=[1,1],d="NHWC"){const p=(0,r._1)(e,"x","separableConv2d"),h=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.hu(4===h.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`)),a.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`)),a.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=h.shape[2],b=h.shape[3];a.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,h,o,u,d,c),v=(0,s.T)(x,f,1,"valid",d);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},2014:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(6e3),a=n(4382),s=n(1525);const i=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),i=(0,a._1)(t,"y","setdiff1d");s.hu(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.hu(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),l=await i.data(),u=new Set(l);let c=0;for(let e=0;e<o.length;e++)u.has(o[e])||c++;const d=new r.YD([c],n.dtype),p=new r.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)u.has(o[e])||(d.values[t]=o[e],p.values[t]=e,t++);return[d.toTensor(),p.toTensor()]}},9789:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid")};return r.BV.runKernel(a.a5,t)}})},6788:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return r.BV.runKernel(a.i5,t)}})},1328:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin")};return r.BV.runKernel(a.RQ,t)}})},7755:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return r.BV.runKernel(a.w3,t)}})},1015:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({slice_:function(e,t,n){const i=(0,s._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},l={begin:t,size:n};return r.BV.runKernel(a.p2,o,l)}})},84:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>a,maskToAxes:()=>s,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>d,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>h,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>b,sliceInfo:()=>x});var r=n(1525);function a(e,t,n){const a=e.shape.length;r.hu(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.hu(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.hu(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function l(e,t,n){return n<=e?n:n-(t-1)}function u(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,i,l,u){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;g=d(i,u,c,r,e),y=p(l,u,c,a,e),b=o(s,u,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,r,s,e,t,u),y[t]=m(l,a,s,e,t,u),b[t]=h(s,t,u);return{begin:g,end:y,strides:b}}function d(e,t,n,r,a){const s=[...a],i=u(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=l(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function p(e,t,n,a,s){const i=[...s],o=u(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=l(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.uZ(0,i[e],s[e])}return i}function h(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];const l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[s];return o<0&&(o+=u),o=r.uZ(0,o,u-1),o}function m(e,t,n,a,s,i){let o=t[s];const l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[s];return o<0&&(o+=u),o=l>0?r.uZ(0,o,u):r.uZ(-1,o,u-1),o}function g(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function x(e,t,n,r,a,o,l,u,d){let p=t.slice(),h=n.slice(),f=r;null==r&&(f=new Array(p.length));const m=s(l);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==l&&0!==u)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==l&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const g=e.length-p.length,y=s(u),b=e.slice();y.forEach((e=>{p[e]=0,h[e]=1,b.splice(e,0,1)}));const{begin:x,end:v,strides:w}=c(b,m,g,p,h,f,a,o,l);p=x,h=v,f=w;const k=s(d);k.forEach((e=>{h[e]=p[e]+1,f[e]=1}));const S=i(p,h,f),N=S.filter(((e,t)=>-1===k.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:p,$end:h,$strides:f,size:S,newShape:b,outShape:N}}},6266:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(a.Gc,i,o)}})},8019:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return r.BV.runKernel(a.MR,t)}})},295:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({spaceToBatchND_:function(e,t,n){const o=(0,s._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:o},u={blockShape:t,paddings:n};return r.BV.runKernel(a.TQ,l,u)}})},994:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sparseToDense_:function(e,t,n,i=0){const o=(0,s._1)(e,"sparseIndices","sparseToDense","int32"),l=(0,s._1)(t,"sparseValues","sparseToDense"),u=(0,s._1)(i,"defaultValue","sparseToDense",l.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,l,n,u);const c={sparseIndices:o,sparseValues:l,defaultValue:u},d={outputShape:n};return r.BV.runKernel(a.D2,c,d)}})},9208:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7845),a=n(671),s=n(1525);const i=(0,n(2125).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},8279:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7845),a=n(671),s=n(1525);const i=(0,n(2125).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},9961:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(5768),a=n(5307),s=n(7329),i=n(3286),o=n(2125),l=n(3870),u=n(6488),c=n(7789),d=n(6606),p=n(1015),h=n(8279);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,u.X)(e,[n,t]);o=(0,h.S)(r)}else{const f=[n,2*(t-1)],m=(0,u.X)((0,l.k)(e),[n,t]),g=(0,u.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,d.i)(-1)),x=(0,a.z)([m,y],1),v=(0,a.z)([g,b],1),w=(0,u.X)((0,r.P)(x,v),[f[0],f[1]]);o=(0,h.S)(w)}if(o=(0,l.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},7664:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(1525),a=n(5768),s=n(5307),i=n(7329),o=n(2125),l=n(3870),u=n(6488),c=n(1015),d=n(3779),p=n(4731),h=n(9433),f=n(9208);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,p.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,u.X)((0,a.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,l.k)(b),w=(0,i.a)(b),k=(0,d.V)(v,[x,n-x],v.shape.length-1),S=(0,d.V)(w,[x,n-x],w.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,(0,u.X)((0,a.P)(k[0],S[0]),N)}})},3779:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({split_:function(e,t,n=0){const i={x:(0,s._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,i,o)}})},8260:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt")};return r.BV.runKernel(a.FK,t)}})},4013:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7845),a=n(4382);const s=(0,n(2125).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},28:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var r=n(7845),a=n(671),s=n(290),i=n(4382),o=n(7644);const l=(0,n(2125).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),l=(0,i._1)(t,"b","squaredDifference");[n,l]=(0,s.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return r.BV.runKernel(a._t,u,{})}})},8312:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(4382),a=n(1525),s=n(2125),i=n(6488);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,i.X)(n,(0,a.bp)(n.shape,t).newShape)}})},6279:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return r.BV.runKernel(a.Qi,o,l)}})},3648:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(a.h8,n,i)}})},225:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({stridedSlice_:function(e,t,n,i,o=0,l=0,u=0,c=0,d=0){const p={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:d};return r.BV.runKernel(a.m2,p,h)}})},7458:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7845),a=n(671),s=n(290),i=n(4382);const o=(0,n(2125).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const l={a:n,b:o};return r.BV.runKernel(a.Tr,l)}})},4661:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(3998);const o=(0,n(2125).op)({sum_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return r.BV.runKernel(a.GB,l,u)}})},1148:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan")};return r.BV.runKernel(a.sE,t)}})},1815:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh")};return r.BV.runKernel(a.MI,t)}})},8890:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(4382),a=n(2829);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},5038:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(4382),a=n(1525),s=n(2829);function i(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},9829:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(4382),a=n(1525),s=n(2829);function i(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,i,n)}},2829:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7845),a=n(1525),s=n(4687);function i(e,t,n,i){if(null==i&&(i=(0,a.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,i)}},3066:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return r.BV.runKernel(a.n9,o,l)}})},7972:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({topk_:function(e,t=1,n=!0){const i=(0,s._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const l={x:i},u={k:t,sorted:n},[c,d]=r.BV.runKernel(a.cW,l,u);return{values:c,indices:d}}})},2298:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},l={perm:t};return r.BV.runKernel(a.G3,o,l)}})},4443:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(3522),a=n(2125),s=n(9023);const i=(0,a.op)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.Yi(t,n,a,!0,i),l=(0,r.f)(e,a);for(let e=0;e<l.values.length;e++)l.values[e]=o.nextValue();return l.toTensor()}})},4684:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},l={axis:t},[u,c]=r.BV.runKernel(a.kp,o,l);return{values:u,indices:c}}})},7614:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,s._1)(e,"x","unsortedSegmentSum"),l=(0,s._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:o,segmentIds:l},c={numSegments:n};return r.BV.runKernel(a.Qv,u,c)}})},7537:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7845),a=n(671),s=n(4382),i=n(1525);const o=(0,n(2125).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return r.BV.runKernel(a.To,o,l)}})},13:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var r=n(7845),a=n(671),s=n(4382),i=n(3024),o=n(7644);const l=(0,n(2125).op)({where_:function(e,t,n){const l=(0,s._1)(t,"a","where"),u=(0,s._1)(n,"b","where"),c=(0,s._1)(e,"condition","where","bool"),d=(0,o.$N)((0,o.$N)(c.shape,l.shape),u.shape),p={condition:(0,i.U)(c,d),t:(0,i.U)(l,d),e:(0,i.U)(u,d)};return r.BV.runKernel(a.Ph,p)}})},4611:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(836),a=n(4382);const s=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),s}},4731:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7845),a=n(1525),s=n(5768);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},9433:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7845),a=n(671),s=n(4382);const i=(0,n(2125).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},6e3:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>d,_w:()=>v,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(2208),a=n(1525);function s(e,t,n,r){const s=(0,a.e3)(t),o=function(e,t,n,r){const s=(0,a.NA)(t),o=r[r.length-1],l=new Array(o).fill(0),c=t.length,d="complex64"===n?u(e):e;if(c>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)l[e]=Math.max(l[e],i(d[t+e],0,n).length)}return l}(e,t,n,s),c=t.length,d=l(e,t,n,s,o),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function o(e){return 0===e?"false":"true"}function l(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,d=t[0],p=t.length;if(0===p)return"complex64"===n?[i(u(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=u(r),s=u(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...l(e.slice(r,s),h,n,f,a,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;g.push(...l(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;g.push(...l(e.slice(r,s),h,n,f,a,t===d-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(4687);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function g(e){h=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,r.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class v extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},290:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>l,getTensorsInContainer:()=>u});var r=n(6e3),a=n(5998),s=n(1525);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),c(r,t,n))}}},4382:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>d,sI:()=>p});var r=n(7845),a=n(8286),s=n(6e3),i=n(1525),o=n(4687);function l(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,r,[]),r}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)u(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let u=(0,i.D2)(e);if("string"!==u&&["bool","int32","float32"].indexOf(a)>=0&&(u=a),c(a,u,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=l(e,u);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==u?(0,o.toTypedArray)(e,u):(0,i.xH)(e,[],!0);return r.BV.makeTensor(p,d,u)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},5998:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{yw:()=>r,x8:()=>u,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:a,bool:s,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}},4687:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,createScalarValue:()=>x,createShuffledIndices:()=>a.U$,decodeString:()=>N,distSquared:()=>a.E7,encodeString:()=>S,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>a.xH,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>o,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.N9,isString:()=>a.HD,isTypedArray:()=>a.fU,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>w,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>v});var r=n(8286),a=n(1525),s=n(4933);const i=n.n(s)()||s;function o(e){return i.fromString(e,!0,16)}const l=o("c3a5c85c97cb3127"),u=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function h(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=h(e,0).add(c),a=h(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(c.mul(n).xor(l.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=h(e,0).mul(u),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(c);return g(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=h(e,0).mul(c),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(c),o=m(r.add(a),43).add(m(s,30)).add(i),l=g(o,r.add(m(a.add(c),18)).add(s),n),u=h(e,16).mul(n),d=h(e,24),p=o.add(h(e,t-32)).mul(n),f=l.add(h(e,t-24)).mul(n);return g(m(u.add(d),43).add(m(p,30)).add(f),u.add(m(d.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(u).add(113),s=d(a.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];r=r.mul(c).add(h(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(h(e,b+8)),37).mul(u),a=m(a.add(o[1]).add(h(e,b+48)),42).mul(u),r=r.xor(p[1]),a=a.add(o[0]).add(h(e,b+40)),s=m(s.add(p[0]),33).mul(u),o=y(e,b,o[1].mul(u),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],b+=64}while(b!==x);const w=u.add(s.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),r=m(r.add(a).add(o[0]).add(h(e,b+8)),37).mul(w),a=m(a.add(o[1]).add(h(e,b+48)),42).mul(w),r=r.xor(p[1].mul(9)),a=a.add(o[0].mul(9).add(h(e,b+40))),s=m(s.add(p[0]),33).mul(w),o=y(e,b,o[1].mul(w),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],g(g(o[0],p[0],w).add(d(a).mul(l)).add(s),g(o[1],p[1],w).add(r),w)}function x(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},1525:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function N(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function z(e){return"number"==typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*o,i,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>a,uZ:()=>s,nY:()=>i,LF:()=>o,Sm:()=>l,bj:()=>u,E7:()=>c,hu:()=>d,k5:()=>p,Cq:()=>h,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>S,JZ:()=>N,EC:()=>I,bp:()=>T,WP:()=>C,rQ:()=>E,D5:()=>$,LP:()=>_,QB:()=>A,fU:()=>R,bT:()=>F,Ub:()=>D,HD:()=>O,jn:()=>M,hj:()=>z,D2:()=>L,mf:()=>B,jP:()=>P,e3:()=>V,GX:()=>U,p8:()=>G,wT:()=>H,l6:()=>j,Mu:()=>q,qy:()=>X,NE:()=>K,tI:()=>Q})},7705:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(var o=0;o<e.length;o++){var l=[].concat(e[o]);r&&a[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},4933:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),c=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*h+a*p+s*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(h)}return s},N.div=N.divide,N.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},7347:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,s){for(var i,o,l=a(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(l[c]=i[c]);if(t){o=t(i);for(var d=0;d<o.length;d++)r.call(i,o[d])&&(l[o[d]]=i[o[d]])}}return l}},3748:(e,t,n)=>{"use strict";var r=n(5466),a=n(7347),s=n(7767);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var o=new Set,l={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(l[e]=t,e=0;e<t.length;e++)o.add(t[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h=Object.prototype.hasOwnProperty,f={},m={};function g(e,t,n,r,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function x(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!h.call(m,e)||!h.call(f,e)&&(p.test(e)?m[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,x);y[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,S=60106,N=60107,I=60108,T=60114,C=60109,E=60110,$=60112,_=60113,A=60120,R=60115,F=60116,D=60121,O=60128,M=60129,z=60130,L=60131;if("function"==typeof Symbol&&Symbol.for){var B=Symbol.for;k=B("react.element"),S=B("react.portal"),N=B("react.fragment"),I=B("react.strict_mode"),T=B("react.profiler"),C=B("react.provider"),E=B("react.context"),$=B("react.forward_ref"),_=B("react.suspense"),A=B("react.suspense_list"),R=B("react.memo"),F=B("react.lazy"),D=B("react.block"),B("react.scope"),O=B("react.opaque.id"),M=B("react.debug_trace_mode"),z=B("react.offscreen"),L=B("react.legacy_hidden")}var P,V="function"==typeof Symbol&&Symbol.iterator;function W(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=V&&e[V]||e["@@iterator"])?e:null}function U(e){if(void 0===P)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);P=t&&t[1]||""}return"\n"+P+e}var G=!1;function H(e,t){if(!e||G)return"";G=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),s=r.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==s[o])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=o);break}}}finally{G=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function j(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case N:return"Fragment";case S:return"Portal";case T:return"Profiler";case I:return"StrictMode";case _:return"Suspense";case A:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case E:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case $:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return q(e.type);case D:return q(e._render);case F:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function X(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function K(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=K(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=K(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=X(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=X(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,X(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function se(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+X(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:X(n)}}function ue(e,t){var n=X(t.value),r=X(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var de="http://www.w3.org/1999/xhtml";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var fe,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((fe=fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},xe=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function we(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ve(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(be).forEach((function(e){xe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var ke=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ne(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ie(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Te=null,Ce=null,Ee=null;function $e(e){if(e=Jr(e)){if("function"!=typeof Te)throw Error(i(280));var t=e.stateNode;t&&(t=ta(t),Te(e.stateNode,e.type,t))}}function _e(e){Ce?Ee?Ee.push(e):Ee=[e]:Ce=e}function Ae(){if(Ce){var e=Ce,t=Ee;if(Ee=Ce=null,$e(e),t)for(e=0;e<t.length;e++)$e(t[e])}}function Re(e,t){return e(t)}function Fe(e,t,n,r,a){return e(t,n,r,a)}function De(){}var Oe=Re,Me=!1,ze=!1;function Le(){null===Ce&&null===Ee||(De(),Ae())}function Be(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Pe=!1;if(d)try{var Ve={};Object.defineProperty(Ve,"passive",{get:function(){Pe=!0}}),window.addEventListener("test",Ve,Ve),window.removeEventListener("test",Ve,Ve)}catch(me){Pe=!1}function We(e,t,n,r,a,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Ue=!1,Ge=null,He=!1,je=null,qe={onError:function(e){Ue=!0,Ge=e}};function Xe(e,t,n,r,a,s,i,o,l){Ue=!1,Ge=null,We.apply(qe,arguments)}function Ke(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Qe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ye(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var s=a.alternate;if(null===s){if(null!==(r=a.return)){n=r;continue}break}if(a.child===s.child){for(s=a.child;s;){if(s===n)return Ye(a),e;if(s===r)return Ye(a),t;s=s.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=s;else{for(var o=!1,l=a.child;l;){if(l===n){o=!0,n=a,r=s;break}if(l===r){o=!0,r=a,n=s;break}l=l.sibling}if(!o){for(l=s.child;l;){if(l===n){o=!0,n=s,r=a;break}if(l===r){o=!0,r=s,n=a;break}l=l.sibling}if(!o)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,st=[],it=null,ot=null,lt=null,ut=new Map,ct=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ft(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e=ht(t,n,r,a,s),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function gt(e){var t=Zr(e.target);if(null!==t){var n=Ke(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Qe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){s.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function bt(e,t,n){yt(e)&&n.delete(t)}function xt(){for(at=!1;0<st.length;){var e=st[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&st.shift()}null!==it&&yt(it)&&(it=null),null!==ot&&yt(ot)&&(ot=null),null!==lt&&yt(lt)&&(lt=null),ut.forEach(bt),ct.forEach(bt)}function vt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,xt)))}function wt(e){function t(t){return vt(t,e)}if(0<st.length){vt(st[0],e);for(var n=1;n<st.length;n++){var r=st[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&vt(it,e),null!==ot&&vt(ot,e),null!==lt&&vt(lt,e),ut.forEach(t),ct.forEach(t),n=0;n<dt.length;n++)(r=dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<dt.length&&null===(n=dt[0]).blockedOn;)gt(n),null===n.blockedOn&&dt.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},Nt={},It={};function Tt(e){if(Nt[e])return Nt[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in It)return Nt[e]=n[t];return e}d&&(It=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ct=Tt("animationend"),Et=Tt("animationiteration"),$t=Tt("animationstart"),_t=Tt("transitionend"),At=new Map,Rt=new Map,Ft=["abort","abort",Ct,"animationEnd",Et,"animationIteration",$t,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",_t,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Rt.set(r,t),At.set(r,a),u(a,[r])}}(0,s.unstable_now)();var Ot=8;function Mt(e){if(0!=(1&e))return Ot=15,1;if(0!=(2&e))return Ot=14,2;if(0!=(4&e))return Ot=13,4;var t=24&e;return 0!==t?(Ot=12,t):0!=(32&e)?(Ot=11,32):0!=(t=192&e)?(Ot=10,t):0!=(256&e)?(Ot=9,256):0!=(t=3584&e)?(Ot=8,t):0!=(4096&e)?(Ot=7,4096):0!=(t=4186112&e)?(Ot=6,t):0!=(t=62914560&e)?(Ot=5,t):67108864&e?(Ot=4,67108864):0!=(134217728&e)?(Ot=3,134217728):0!=(t=805306368&e)?(Ot=2,t):0!=(1073741824&e)?(Ot=1,1073741824):(Ot=8,e)}function zt(e,t){var n=e.pendingLanes;if(0===n)return Ot=0;var r=0,a=0,s=e.expiredLanes,i=e.suspendedLanes,o=e.pingedLanes;if(0!==s)r=s,a=Ot=15;else if(0!=(s=134217727&n)){var l=s&~i;0!==l?(r=Mt(l),a=Ot):0!=(o&=s)&&(r=Mt(o),a=Ot)}else 0!=(s=n&~i)?(r=Mt(s),a=Ot):0!==o&&(r=Mt(o),a=Ot);if(0===r)return 0;if(r=n&((0>(r=31-Ut(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Mt(t),a<=Ot)return t;Ot=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Ut(t)),r|=e[n],t&=~a;return r}function Lt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Bt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Pt(24&~t))?Bt(10,t):e;case 10:return 0===(e=Pt(192&~t))?Bt(8,t):e;case 8:return 0===(e=Pt(3584&~t))&&0===(e=Pt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Pt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Pt(e){return e&-e}function Vt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Wt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Gt(e)/Ht|0)|0},Gt=Math.log,Ht=Math.LN2,jt=s.unstable_UserBlockingPriority,qt=s.unstable_runWithPriority,Xt=!0;function Kt(e,t,n,r){Me||De();var a=Yt,s=Me;Me=!0;try{Fe(a,e,t,n,r)}finally{(Me=s)||Le()}}function Qt(e,t,n,r){qt(jt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){var a;if(Xt)if((a=0==(4&t))&&0<st.length&&-1<pt.indexOf(e))e=ht(null,e,t,n,r),st.push(e);else{var s=Zt(e,t,n,r);if(null===s)a&&ft(e,r);else{if(a){if(-1<pt.indexOf(e))return e=ht(s,e,t,n,r),void st.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return it=mt(it,e,t,n,r,a),!0;case"dragenter":return ot=mt(ot,e,t,n,r,a),!0;case"mouseover":return lt=mt(lt,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return ut.set(s,mt(ut.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,ct.set(s,mt(ct.get(s)||null,e,t,n,r,a)),!0}return!1}(s,e,t,n,r))return;ft(e,r)}Ar(e,t,r,null,n)}}}function Zt(e,t,n,r){var a=Ie(r);if(null!==(a=Zr(a))){var s=Ke(a);if(null===s)a=null;else{var i=s.tag;if(13===i){if(null!==(a=Qe(s)))return a;a=null}else if(3===i){if(s.stateNode.hydrate)return 3===s.tag?s.stateNode.containerInfo:null;a=null}else s!==a&&(a=null)}}return Ar(e,t,r,a,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[s-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function sn(){return!1}function on(e){function t(t,n,r,a,s){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:sn,this.isPropagationStopped=sn,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var ln,un,cn,dn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},pn=on(dn),hn=a({},dn,{view:0,detail:0}),fn=on(hn),mn=a({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(ln=e.screenX-cn.screenX,un=e.screenY-cn.screenY):un=ln=0,cn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),gn=on(mn),yn=on(a({},mn,{dataTransfer:0})),bn=on(a({},hn,{relatedTarget:0})),xn=on(a({},dn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=on(a({},dn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},dn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function Tn(){return In}var Cn=on(a({},hn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),En=on(a({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),$n=on(a({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tn})),_n=on(a({},dn,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=on(a({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rn=[9,13,27,32],Fn=d&&"CompositionEvent"in window,Dn=null;d&&"documentMode"in document&&(Dn=document.documentMode);var On=d&&"TextEvent"in window&&!Dn,Mn=d&&(!Fn||Dn&&8<Dn&&11>=Dn),zn=String.fromCharCode(32),Ln=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Pn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1,Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function Gn(e,t,n,r){_e(r),0<(t=Fr(t,"onChange")).length&&(n=new pn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,jn=null;function qn(e){Ir(e,0)}function Xn(e){if(Y(ea(e)))return e}function Kn(e,t){if("change"===e)return t}var Qn=!1;if(d){var Yn;if(d){var Zn="oninput"in document;if(!Zn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Zn="function"==typeof Jn.oninput}Yn=Zn}else Yn=!1;Qn=Yn&&(!document.documentMode||9<document.documentMode)}function er(){Hn&&(Hn.detachEvent("onpropertychange",tr),jn=Hn=null)}function tr(e){if("value"===e.propertyName&&Xn(jn)){var t=[];if(Gn(t,jn,e,Ie(e)),e=qn,Me)e(t);else{Me=!0;try{Re(e,t)}finally{Me=!1,Le()}}}}function nr(e,t,n){"focusin"===e?(er(),jn=n,(Hn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(jn)}function ar(e,t){if("click"===e)return Xn(t)}function sr(e,t){if("input"===e||"change"===e)return Xn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},or=Object.prototype.hasOwnProperty;function lr(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!or.call(t,n[r])||!ir(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function hr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var fr=d&&"documentMode"in document&&11>=document.documentMode,mr=null,gr=null,yr=null,br=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==mr||mr!==Z(r)||(r="selectionStart"in(r=mr)&&hr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&lr(yr,r)||(yr=r,0<(r=Fr(gr,"onSelect")).length&&(t=new pn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Dt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Ft,2);for(var vr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<vr.length;wr++)Rt.set(vr[wr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Nr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,s,o,l,u){if(Xe.apply(this,arguments),Ue){if(!Ue)throw Error(i(198));var c=Ge;Ue=!1,Ge=null,He||(He=!0,je=c)}}(r,t,void 0,e),e.currentTarget=null}function Ir(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;Nr(a,o,u),s=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;Nr(a,o,u),s=l}}}if(He)throw e=je,He=!1,je=null,e}function Tr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(_r(t,e,2,!1),n.add(r))}var Cr="_reactListening"+Math.random().toString(36).slice(2);function Er(e){e[Cr]||(e[Cr]=!0,o.forEach((function(t){Sr.has(t)||$r(t,!1,e,null),$r(t,!0,e,null)})))}function $r(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,s=n;if("selectionchange"===e&&9!==n.nodeType&&(s=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,s=r}var i=na(s),o=e+"__"+(t?"capture":"bubble");i.has(o)||(t&&(a|=4),_r(s,e,a,t),i.add(o))}function _r(e,t,n,r){var a=Rt.get(t);switch(void 0===a?2:a){case 0:a=Kt;break;case 1:a=Qt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Pe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Ar(e,t,n,r,a){var s=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=Zr(o)))return;if(5===(l=i.tag)||6===l){r=s=i;continue e}o=o.parentNode}}r=r.return}!function(e,t,n){if(ze)return e();ze=!0;try{Oe(e,t,n)}finally{ze=!1,Le()}}((function(){var r=s,a=Ie(n),i=[];e:{var o=At.get(e);if(void 0!==o){var l=pn,u=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":l=Cn;break;case"focusin":u="focus",l=bn;break;case"focusout":u="blur",l=bn;break;case"beforeblur":case"afterblur":l=bn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=$n;break;case Ct:case Et:case $t:l=xn;break;case _t:l=_n;break;case"scroll":l=fn;break;case"wheel":l=An;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=En}var c=0!=(4&t),d=!c&&"scroll"===e,p=c?null!==o?o+"Capture":null:o;c=[];for(var h,f=r;null!==f;){var m=(h=f).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==p&&null!=(m=Be(f,p))&&c.push(Rr(f,m,h))),d)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,a),i.push({event:o,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(u=n.relatedTarget||n.fromElement)||!Zr(u)&&!u[Qr])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?Zr(u):null)&&(u!==(d=Ke(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=gn,m="onMouseLeave",p="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,m="onPointerLeave",p="onPointerEnter",f="pointer"),d=null==l?o:ea(l),h=null==u?o:ea(u),(o=new c(m,f+"leave",l,n,a)).target=d,o.relatedTarget=h,m=null,Zr(a)===r&&((c=new c(p,f+"enter",u,n,a)).target=h,c.relatedTarget=d,m=c),d=m,l&&u)e:{for(p=u,f=0,h=c=l;h;h=Dr(h))f++;for(h=0,m=p;m;m=Dr(m))h++;for(;0<f-h;)c=Dr(c),f--;for(;0<h-f;)p=Dr(p),h--;for(;f--;){if(c===p||null!==p&&c===p.alternate)break e;c=Dr(c),p=Dr(p)}c=null}else c=null;null!==l&&Or(i,o,l,c,!1),null!==u&&null!==d&&Or(i,d,u,c,!0)}if("select"===(l=(o=r?ea(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Kn;else if(Un(o))if(Qn)g=sr;else{g=rr;var y=nr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=ar);switch(g&&(g=g(e,r))?Gn(i,g,n,a):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ae(o,"number",o.value)),y=r?ea(r):window,e){case"focusin":(Un(y)||"true"===y.contentEditable)&&(mr=y,gr=r,yr=null);break;case"focusout":yr=gr=mr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,xr(i,n,a);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":xr(i,n,a)}var b;if(Fn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Vn?Bn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Mn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=nn()):(en="value"in(Jt=a)?Jt.value:Jt.textContent,Vn=!0)),0<(y=Fr(r,x)).length&&(x=new wn(x,e,null,n,a),i.push({event:x,listeners:y}),(b||null!==(b=Pn(n)))&&(x.data=b))),(b=On?function(e,t){switch(e){case"compositionend":return Pn(t);case"keypress":return 32!==t.which?null:(Ln=!0,zn);case"textInput":return(e=t.data)===zn&&Ln?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Fn&&Bn(e,t)?(e=nn(),tn=en=Jt=null,Vn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Fr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}Ir(i,t)}))}function Rr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Fr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=Be(e,n))&&r.unshift(Rr(e,s,a)),null!=(s=Be(e,t))&&r.push(Rr(e,s,a))),e=e.return}return r}function Dr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Or(e,t,n,r,a){for(var s=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,a?null!=(l=Be(n,s))&&i.unshift(Rr(n,l,o)):a||null!=(l=Be(n,s))&&i.push(Rr(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Mr(){}var zr=null,Lr=null;function Br(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Pr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Vr="function"==typeof setTimeout?setTimeout:void 0,Wr="function"==typeof clearTimeout?clearTimeout:void 0;function Ur(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Gr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Hr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var jr=0,qr=Math.random().toString(36).slice(2),Xr="__reactFiber$"+qr,Kr="__reactProps$"+qr,Qr="__reactContainer$"+qr,Yr="__reactEvents$"+qr;function Zr(e){var t=e[Xr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Qr]||n[Xr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Hr(e);null!==e;){if(n=e[Xr])return n;e=Hr(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Xr]||e[Qr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ta(e){return e[Kr]||null}function na(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var ra=[],aa=-1;function sa(e){return{current:e}}function ia(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function oa(e,t){aa++,ra[aa]=e.current,e.current=t}var la={},ua=sa(la),ca=sa(!1),da=la;function pa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function ha(e){return null!=e.childContextTypes}function fa(){ia(ca),ia(ua)}function ma(e,t,n){if(ua.current!==la)throw Error(i(168));oa(ua,t),oa(ca,n)}function ga(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in e))throw Error(i(108,q(t)||"Unknown",s));return a({},n,r)}function ya(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,da=ua.current,oa(ua,e),oa(ca,ca.current),!0}function ba(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ga(e,t,da),r.__reactInternalMemoizedMergedChildContext=e,ia(ca),ia(ua),oa(ua,e)):ia(ca),oa(ca,n)}var xa=null,va=null,wa=s.unstable_runWithPriority,ka=s.unstable_scheduleCallback,Sa=s.unstable_cancelCallback,Na=s.unstable_shouldYield,Ia=s.unstable_requestPaint,Ta=s.unstable_now,Ca=s.unstable_getCurrentPriorityLevel,Ea=s.unstable_ImmediatePriority,$a=s.unstable_UserBlockingPriority,_a=s.unstable_NormalPriority,Aa=s.unstable_LowPriority,Ra=s.unstable_IdlePriority,Fa={},Da=void 0!==Ia?Ia:function(){},Oa=null,Ma=null,za=!1,La=Ta(),Ba=1e4>La?Ta:function(){return Ta()-La};function Pa(){switch(Ca()){case Ea:return 99;case $a:return 98;case _a:return 97;case Aa:return 96;case Ra:return 95;default:throw Error(i(332))}}function Va(e){switch(e){case 99:return Ea;case 98:return $a;case 97:return _a;case 96:return Aa;case 95:return Ra;default:throw Error(i(332))}}function Wa(e,t){return e=Va(e),wa(e,t)}function Ua(e,t,n){return e=Va(e),ka(e,t,n)}function Ga(){if(null!==Ma){var e=Ma;Ma=null,Sa(e)}Ha()}function Ha(){if(!za&&null!==Oa){za=!0;var e=0;try{var t=Oa;Wa(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Oa=null}catch(t){throw null!==Oa&&(Oa=Oa.slice(e+1)),ka(Ea,Ga),t}finally{za=!1}}}var ja=w.ReactCurrentBatchConfig;function qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Xa=sa(null),Ka=null,Qa=null,Ya=null;function Za(){Ya=Qa=Ka=null}function Ja(e){var t=Xa.current;ia(Xa),e.type._context._currentValue=t}function es(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ts(e,t){Ka=e,Ya=Qa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ri=!0),e.firstContext=null)}function ns(e,t){if(Ya!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ya=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Qa){if(null===Ka)throw Error(i(308));Qa=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Qa=Qa.next=t;return e._currentValue}var rs=!1;function as(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ss(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function is(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function os(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ls(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=i:s=s.next=i,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function us(e,t,n,r){var s=e.updateQueue;rs=!1;var i=s.firstBaseUpdate,o=s.lastBaseUpdate,l=s.shared.pending;if(null!==l){s.shared.pending=null;var u=l,c=u.next;u.next=null,null===o?i=c:o.next=c,o=u;var d=e.alternate;if(null!==d){var p=(d=d.updateQueue).lastBaseUpdate;p!==o&&(null===p?d.firstBaseUpdate=c:p.next=c,d.lastBaseUpdate=u)}}if(null!==i){for(p=s.baseState,o=0,d=c=u=null;;){l=i.lane;var h=i.eventTime;if((r&l)===l){null!==d&&(d=d.next={eventTime:h,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(l=t,h=n,m.tag){case 1:if("function"==typeof(f=m.payload)){p=f.call(h,p,l);break e}p=f;break e;case 3:f.flags=-4097&f.flags|64;case 0:if(null==(l="function"==typeof(f=m.payload)?f.call(h,p,l):f))break e;p=a({},p,l);break e;case 2:rs=!0}}null!==i.callback&&(e.flags|=32,null===(l=s.effects)?s.effects=[i]:l.push(i))}else h={eventTime:h,lane:l,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===d?(c=d=h,u=p):d=d.next=h,o|=l;if(null===(i=i.next)){if(null===(l=s.shared.pending))break;i=l.next,l.next=null,s.lastBaseUpdate=l,s.shared.pending=null}}null===d&&(u=p),s.baseState=u,s.firstBaseUpdate=c,s.lastBaseUpdate=d,Oo|=o,e.lanes=o,e.memoizedState=p}}function cs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var ds=(new r.Component).refs;function ps(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var hs={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=il(),a=ol(e),s=is(r,a);s.payload=t,null!=n&&(s.callback=n),os(e,s),ll(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=il(),a=ol(e),s=is(r,a);s.tag=1,s.payload=t,null!=n&&(s.callback=n),os(e,s),ll(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=il(),r=ol(e),a=is(n,r);a.tag=2,null!=t&&(a.callback=t),os(e,a),ll(e,r,n)}};function fs(e,t,n,r,a,s,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,s))}function ms(e,t,n){var r=!1,a=la,s=t.contextType;return"object"==typeof s&&null!==s?s=ns(s):(a=ha(t)?da:ua.current,s=(r=null!=(r=t.contextTypes))?pa(e,a):la),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=hs,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function gs(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&hs.enqueueReplaceState(t,t.state,null)}function ys(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=ds,as(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=ns(s):(s=ha(t)?da:ua.current,a.context=pa(e,s)),us(e,n,a,r),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(ps(e,t,s,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&hs.enqueueReplaceState(a,a.state,null),us(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var bs=Array.isArray;function xs(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===ds&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function vs(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ws(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Pl(e,t)).index=0,e.sibling=null,e}function s(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function o(t){return e&&null===t.alternate&&(t.flags=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Gl(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=xs(e,t,n),r.return=e,r):((r=Vl(n.type,n.key,n.props,null,e.mode,r)).ref=xs(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Hl(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,s){return null===t||7!==t.tag?((t=Wl(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Gl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Vl(t.type,t.key,t.props,null,e.mode,n)).ref=xs(e,null,t),n.return=e,n;case S:return(t=Hl(t,e.mode,n)).return=e,t}if(bs(t)||W(t))return(t=Wl(t,e.mode,n,null)).return=e,t;vs(e,t)}return null}function h(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?n.type===N?d(e,t,n.props.children,r,a):u(e,t,n,r):null;case S:return n.key===a?c(e,t,n,r):null}if(bs(n)||W(n))return null!==a?null:d(e,t,n,r,null);vs(e,n)}return null}function f(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===N?d(t,e,r.props.children,a,r.key):u(t,e,r,a);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(bs(r)||W(r))return d(t,e=e.get(n)||null,r,a,null);vs(t,r)}return null}function m(a,i,o,l){for(var u=null,c=null,d=i,m=i=0,g=null;null!==d&&m<o.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=h(a,d,o[m],l);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(a,d),i=s(y,i,m),null===c?u=y:c.sibling=y,c=y,d=g}if(m===o.length)return n(a,d),u;if(null===d){for(;m<o.length;m++)null!==(d=p(a,o[m],l))&&(i=s(d,i,m),null===c?u=d:c.sibling=d,c=d);return u}for(d=r(a,d);m<o.length;m++)null!==(g=f(d,a,m,o[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),i=s(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&d.forEach((function(e){return t(a,e)})),u}function g(a,o,l,u){var c=W(l);if("function"!=typeof c)throw Error(i(150));if(null==(l=c.call(l)))throw Error(i(151));for(var d=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=h(a,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(a,m),o=s(x,o,g),null===d?c=x:d.sibling=x,d=x,m=y}if(b.done)return n(a,m),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=p(a,b.value,u))&&(o=s(b,o,g),null===d?c=b:d.sibling=b,d=b);return c}for(m=r(a,m);!b.done;g++,b=l.next())null!==(b=f(m,a,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=s(b,o,g),null===d?c=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(a,e)})),c}return function(e,r,s,l){var u="object"==typeof s&&null!==s&&s.type===N&&null===s.key;u&&(s=s.props.children);var c="object"==typeof s&&null!==s;if(c)switch(s.$$typeof){case k:e:{for(c=s.key,u=r;null!==u;){if(u.key===c){switch(u.tag){case 7:if(s.type===N){n(e,u.sibling),(r=a(u,s.props.children)).return=e,e=r;break e}break;default:if(u.elementType===s.type){n(e,u.sibling),(r=a(u,s.props)).ref=xs(e,u,s),r.return=e,e=r;break e}}n(e,u);break}t(e,u),u=u.sibling}s.type===N?((r=Wl(s.props.children,e.mode,l,s.key)).return=e,e=r):((l=Vl(s.type,s.key,s.props,null,e.mode,l)).ref=xs(e,r,s),l.return=e,e=l)}return o(e);case S:e:{for(u=s.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===s.containerInfo&&r.stateNode.implementation===s.implementation){n(e,r.sibling),(r=a(r,s.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Hl(s,e.mode,l)).return=e,e=r}return o(e)}if("string"==typeof s||"number"==typeof s)return s=""+s,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,s)).return=e,e=r):(n(e,r),(r=Gl(s,e.mode,l)).return=e,e=r),o(e);if(bs(s))return m(e,r,s,l);if(W(s))return g(e,r,s,l);if(c&&vs(e,s),void 0===s&&!u)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,q(e.type)||"Component"))}return n(e,r)}}var ks=ws(!0),Ss=ws(!1),Ns={},Is=sa(Ns),Ts=sa(Ns),Cs=sa(Ns);function Es(e){if(e===Ns)throw Error(i(174));return e}function $s(e,t){switch(oa(Cs,t),oa(Ts,e),oa(Is,Ns),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ia(Is),oa(Is,t)}function _s(){ia(Is),ia(Ts),ia(Cs)}function As(e){Es(Cs.current);var t=Es(Is.current),n=he(t,e.type);t!==n&&(oa(Ts,e),oa(Is,n))}function Rs(e){Ts.current===e&&(ia(Is),ia(Ts))}var Fs=sa(0);function Ds(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Os=null,Ms=null,zs=!1;function Ls(e,t){var n=Ll(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Bs(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ps(e){if(zs){var t=Ms;if(t){var n=t;if(!Bs(e,t)){if(!(t=Gr(n.nextSibling))||!Bs(e,t))return e.flags=-1025&e.flags|2,zs=!1,void(Os=e);Ls(Os,n)}Os=e,Ms=Gr(t.firstChild)}else e.flags=-1025&e.flags|2,zs=!1,Os=e}}function Vs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Os=e}function Ws(e){if(e!==Os)return!1;if(!zs)return Vs(e),zs=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Pr(t,e.memoizedProps))for(t=Ms;t;)Ls(e,t),t=Gr(t.nextSibling);if(Vs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ms=Gr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ms=null}}else Ms=Os?Gr(e.stateNode.nextSibling):null;return!0}function Us(){Ms=Os=null,zs=!1}var Gs=[];function Hs(){for(var e=0;e<Gs.length;e++)Gs[e]._workInProgressVersionPrimary=null;Gs.length=0}var js=w.ReactCurrentDispatcher,qs=w.ReactCurrentBatchConfig,Xs=0,Ks=null,Qs=null,Ys=null,Zs=!1,Js=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,s){if(Xs=s,Ks=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,js.current=null===e||null===e.memoizedState?Ei:$i,e=n(r,a),Js){s=0;do{if(Js=!1,!(25>s))throw Error(i(301));s+=1,Ys=Qs=null,t.updateQueue=null,js.current=_i,e=n(r,a)}while(Js)}if(js.current=Ci,t=null!==Qs&&null!==Qs.next,Xs=0,Ys=Qs=Ks=null,Zs=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ys?Ks.memoizedState=Ys=e:Ys=Ys.next=e,Ys}function ai(){if(null===Qs){var e=Ks.alternate;e=null!==e?e.memoizedState:null}else e=Qs.next;var t=null===Ys?Ks.memoizedState:Ys.next;if(null!==t)Ys=t,Qs=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Qs=e).memoizedState,baseState:Qs.baseState,baseQueue:Qs.baseQueue,queue:Qs.queue,next:null},null===Ys?Ks.memoizedState=Ys=e:Ys=Ys.next=e}return Ys}function si(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Qs,a=r.baseQueue,s=n.pending;if(null!==s){if(null!==a){var o=a.next;a.next=s.next,s.next=o}r.baseQueue=a=s,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var l=o=s=null,u=a;do{var c=u.lane;if((Xs&c)===c)null!==l&&(l=l.next={lane:0,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),r=u.eagerReducer===e?u.eagerState:e(r,u.action);else{var d={lane:c,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(o=l=d,s=r):l=l.next=d,Ks.lanes|=c,Oo|=c}u=u.next}while(null!==u&&u!==a);null===l?s=r:l.next=o,ir(r,t.memoizedState)||(Ri=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function oi(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,s=t.memoizedState;if(null!==a){n.pending=null;var o=a=a.next;do{s=e(s,o.action),o=o.next}while(o!==a);ir(s,t.memoizedState)||(Ri=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,r]}function li(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Xs&e)===e)&&(t._workInProgressVersionPrimary=r,Gs.push(t))),e)return n(t._source);throw Gs.push(t),Error(i(350))}function ui(e,t,n,r){var a=Co;if(null===a)throw Error(i(349));var s=t._getVersion,o=s(t._source),l=js.current,u=l.useState((function(){return li(a,t,n)})),c=u[1],d=u[0];u=Ys;var p=e.memoizedState,h=p.refs,f=h.getSnapshot,m=p.source;p=p.subscribe;var g=Ks;return e.memoizedState={refs:h,source:t,subscribe:r},l.useEffect((function(){h.getSnapshot=n,h.setSnapshot=c;var e=s(t._source);if(!ir(o,e)){e=n(t._source),ir(d,e)||(c(e),e=ol(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var l=31-Ut(i),u=1<<l;r[l]|=e,i&=~u}}}),[n,t,r]),l.useEffect((function(){return r(t._source,(function(){var e=h.getSnapshot,n=h.setSnapshot;try{n(e(t._source));var r=ol(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),ir(f,n)&&ir(m,t)&&ir(p,r)||((e={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:d}).dispatch=c=Ti.bind(null,Ks,e),u.queue=e,u.baseQueue=null,d=li(a,t,n),u.memoizedState=u.baseState=d),d}function ci(e,t,n){return ui(ai(),e,t,n)}function di(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:e}).dispatch=Ti.bind(null,Ks,e),[t.memoizedState,e]}function pi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ks.updateQueue)?(t={lastEffect:null},Ks.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hi(e){return e={current:e},ri().memoizedState=e}function fi(){return ai().memoizedState}function mi(e,t,n,r){var a=ri();Ks.flags|=e,a.memoizedState=pi(1|t,n,void 0,void 0===r?null:r)}function gi(e,t,n,r){var a=ai();r=void 0===r?null:r;var s=void 0;if(null!==Qs){var i=Qs.memoizedState;if(s=i.destroy,null!==r&&ti(r,i.deps))return void pi(t,n,s,r)}Ks.flags|=e,a.memoizedState=pi(1|t,n,s,r)}function yi(e,t){return mi(516,4,e,t)}function bi(e,t){return gi(516,4,e,t)}function xi(e,t){return gi(4,2,e,t)}function vi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function wi(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,vi.bind(null,t,e),n)}function ki(){}function Si(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ni(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Ii(e,t){var n=Pa();Wa(98>n?98:n,(function(){e(!0)})),Wa(97<n?97:n,(function(){var n=qs.transition;qs.transition=1;try{e(!1),t()}finally{qs.transition=n}}))}function Ti(e,t,n){var r=il(),a=ol(e),s={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?s.next=s:(s.next=i.next,i.next=s),t.pending=s,i=e.alternate,e===Ks||null!==i&&i===Ks)Js=Zs=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=i(o,n);if(s.eagerReducer=i,s.eagerState=l,ir(l,o))return}catch(e){}ll(e,a,r)}}var Ci={readContext:ns,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},Ei={readContext:ns,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:ns,useEffect:yi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mi(4,2,vi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ti.bind(null,Ks,e),[r.memoizedState,e]},useRef:hi,useState:di,useDebugValue:ki,useDeferredValue:function(e){var t=di(e),n=t[0],r=t[1];return yi((function(){var t=qs.transition;qs.transition=1;try{r(e)}finally{qs.transition=t}}),[e]),n},useTransition:function(){var e=di(!1),t=e[0];return hi(e=Ii.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},ui(r,e,t,n)},useOpaqueIdentifier:function(){if(zs){var e=!1,t=function(e){return{$$typeof:O,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(jr++).toString(36))),Error(i(355))})),n=di(t)[1];return 0==(2&Ks.mode)&&(Ks.flags|=516,pi(5,(function(){n("r:"+(jr++).toString(36))}),void 0,null)),t}return di(t="r:"+(jr++).toString(36)),t},unstable_isNewReconciler:!1},$i={readContext:ns,useCallback:Si,useContext:ns,useEffect:bi,useImperativeHandle:wi,useLayoutEffect:xi,useMemo:Ni,useReducer:ii,useRef:fi,useState:function(){return ii(si)},useDebugValue:ki,useDeferredValue:function(e){var t=ii(si),n=t[0],r=t[1];return bi((function(){var t=qs.transition;qs.transition=1;try{r(e)}finally{qs.transition=t}}),[e]),n},useTransition:function(){var e=ii(si)[0];return[fi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(si)[0]},unstable_isNewReconciler:!1},_i={readContext:ns,useCallback:Si,useContext:ns,useEffect:bi,useImperativeHandle:wi,useLayoutEffect:xi,useMemo:Ni,useReducer:oi,useRef:fi,useState:function(){return oi(si)},useDebugValue:ki,useDeferredValue:function(e){var t=oi(si),n=t[0],r=t[1];return bi((function(){var t=qs.transition;qs.transition=1;try{r(e)}finally{qs.transition=t}}),[e]),n},useTransition:function(){var e=oi(si)[0];return[fi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return oi(si)[0]},unstable_isNewReconciler:!1},Ai=w.ReactCurrentOwner,Ri=!1;function Fi(e,t,n,r){t.child=null===e?Ss(t,null,n,r):ks(t,e.child,n,r)}function Di(e,t,n,r,a){n=n.render;var s=t.ref;return ts(t,a),r=ni(e,t,n,r,s,a),null===e||Ri?(t.flags|=1,Fi(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zi(e,t,a))}function Oi(e,t,n,r,a,s){if(null===e){var i=n.type;return"function"!=typeof i||Bl(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Vl(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Mi(e,t,i,r,a,s))}return i=e.child,0==(a&s)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)?Zi(e,t,s):(t.flags|=1,(e=Pl(i,r)).ref=t.ref,e.return=t,t.child=e)}function Mi(e,t,n,r,a,s){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(Ri=!1,0==(s&a))return t.lanes=e.lanes,Zi(e,t,s);0!=(16384&e.flags)&&(Ri=!0)}return Bi(e,t,n,r,s)}function zi(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},gl(0,n);else{if(0==(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},gl(0,e),null;t.memoizedState={baseLanes:0},gl(0,null!==s?s.baseLanes:n)}else null!==s?(r=s.baseLanes|n,t.memoizedState=null):r=n,gl(0,r);return Fi(e,t,a,n),t.child}function Li(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Bi(e,t,n,r,a){var s=ha(n)?da:ua.current;return s=pa(t,s),ts(t,a),n=ni(e,t,n,r,s,a),null===e||Ri?(t.flags|=1,Fi(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zi(e,t,a))}function Pi(e,t,n,r,a){if(ha(n)){var s=!0;ya(t)}else s=!1;if(ts(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ms(t,n,r),ys(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;u="object"==typeof u&&null!==u?ns(u):pa(t,u=ha(n)?da:ua.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||l!==u)&&gs(t,i,r,u),rs=!1;var p=t.memoizedState;i.state=p,us(t,r,i,a),l=t.memoizedState,o!==r||p!==l||ca.current||rs?("function"==typeof c&&(ps(t,n,c,r),l=t.memoizedState),(o=rs||fs(t,n,o,r,p,l,u))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ss(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:qa(t.type,o),i.props=u,d=t.pendingProps,p=i.context,l="object"==typeof(l=n.contextType)&&null!==l?ns(l):pa(t,l=ha(n)?da:ua.current);var h=n.getDerivedStateFromProps;(c="function"==typeof h||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==d||p!==l)&&gs(t,i,r,l),rs=!1,p=t.memoizedState,i.state=p,us(t,r,i,a);var f=t.memoizedState;o!==d||p!==f||ca.current||rs?("function"==typeof h&&(ps(t,n,h,r),f=t.memoizedState),(u=rs||fs(t,n,u,r,p,f,l))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=l,r=u):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=256),r=!1)}return Vi(e,t,n,r,s,a)}function Vi(e,t,n,r,a,s){Li(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&ba(t,n,!1),Zi(e,t,s);r=t.stateNode,Ai.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=ks(t,e.child,null,s),t.child=ks(t,null,o,s)):Fi(e,t,o,s),t.memoizedState=r.state,a&&ba(t,n,!0),t.child}function Wi(e){var t=e.stateNode;t.pendingContext?ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ma(0,t.context,!1),$s(e,t.containerInfo)}var Ui,Gi,Hi,ji={dehydrated:null,retryLane:0};function qi(e,t,n){var r,a=t.pendingProps,s=Fs.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&s)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(s|=1),oa(Fs,1&s),null===e?(void 0!==a.fallback&&Ps(t),e=a.children,s=a.fallback,i?(e=Xi(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ji,e):"number"==typeof a.unstable_expectedLoadTime?(e=Xi(t,e,s,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ji,t.lanes=33554432,e):((n=Ul({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var s=t.mode,i=e.child;e=i.sibling;var o={mode:"hidden",children:n};return 0==(2&s)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=o,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Pl(i,o),null!==e?r=Pl(e,r):(r=Wl(r,s,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,s=e.child.memoizedState,i.memoizedState=null===s?{baseLanes:n}:{baseLanes:s.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=ji,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Pl(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Xi(e,t,n,r){var a=e.mode,s=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==s?(s.childLanes=0,s.pendingProps=t):s=Ul(t,a,0,null),n=Wl(n,a,r,null),s.return=e,n.return=e,s.sibling=n,e.child=s,n}function Ki(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),es(e.return,t)}function Qi(e,t,n,r,a,s){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=s)}function Yi(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(Fi(e,t,r.children,n),0!=(2&(r=Fs.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ki(e,n);else if(19===e.tag)Ki(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(oa(Fs,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Ds(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Qi(t,!1,a,n,s,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Ds(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Qi(t,!0,n,null,s,t.lastEffect);break;case"together":Qi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Oo|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Pl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Pl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Ji(e,t){if(!zs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function eo(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ha(t.type)&&fa(),null;case 3:return _s(),ia(ca),ia(ua),Hs(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ws(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Rs(t);var s=Es(Cs.current);if(n=t.type,null!==e&&null!=t.stateNode)Gi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Es(Is.current),Ws(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[Xr]=t,r[Kr]=o,n){case"dialog":Tr("cancel",r),Tr("close",r);break;case"iframe":case"object":case"embed":Tr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Tr(kr[e],r);break;case"source":Tr("error",r);break;case"img":case"image":case"link":Tr("error",r),Tr("load",r);break;case"details":Tr("toggle",r);break;case"input":ee(r,o),Tr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Tr("invalid",r);break;case"textarea":le(r,o),Tr("invalid",r)}for(var u in Se(n,o),e=null,o)o.hasOwnProperty(u)&&(s=o[u],"children"===u?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):l.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Tr("scroll",r));switch(n){case"input":Q(r),re(r,o,!0);break;case"textarea":Q(r),ce(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Mr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(u=9===s.nodeType?s:s.ownerDocument,e===de&&(e=pe(n)),e===de?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[Xr]=t,e[Kr]=r,Ui(e,t),t.stateNode=e,u=Ne(n,r),n){case"dialog":Tr("cancel",e),Tr("close",e),s=r;break;case"iframe":case"object":case"embed":Tr("load",e),s=r;break;case"video":case"audio":for(s=0;s<kr.length;s++)Tr(kr[s],e);s=r;break;case"source":Tr("error",e),s=r;break;case"img":case"image":case"link":Tr("error",e),Tr("load",e),s=r;break;case"details":Tr("toggle",e),s=r;break;case"input":ee(e,r),s=J(e,r),Tr("invalid",e);break;case"option":s=se(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=a({},r,{value:void 0}),Tr("invalid",e);break;case"textarea":le(e,r),s=oe(e,r),Tr("invalid",e);break;default:s=r}Se(n,s);var c=s;for(o in c)if(c.hasOwnProperty(o)){var d=c[o];"style"===o?we(e,d):"dangerouslySetInnerHTML"===o?null!=(d=d?d.__html:void 0)&&ge(e,d):"children"===o?"string"==typeof d?("textarea"!==n||""!==d)&&ye(e,d):"number"==typeof d&&ye(e,""+d):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(l.hasOwnProperty(o)?null!=d&&"onScroll"===o&&Tr("scroll",e):null!=d&&v(e,o,d,u))}switch(n){case"input":Q(e),re(e,r,!1);break;case"textarea":Q(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+X(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ie(e,!!r.multiple,o,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=Mr)}Br(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Hi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Es(Cs.current),Es(Is.current),Ws(t)?(r=t.stateNode,n=t.memoizedProps,r[Xr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Xr]=t,t.stateNode=r)}return null;case 13:return ia(Fs),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Ws(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fs.current)?0===Ro&&(Ro=3):(0!==Ro&&3!==Ro||(Ro=4),null===Co||0==(134217727&Oo)&&0==(134217727&Mo)||pl(Co,$o))),(r||n)&&(t.flags|=4),null);case 4:return _s(),null===e&&Er(t.stateNode.containerInfo),null;case 10:return Ja(t),null;case 17:return ha(t.type)&&fa(),null;case 19:if(ia(Fs),null===(r=t.memoizedState))return null;if(o=0!=(64&t.flags),null===(u=r.rendering))if(o)Ji(r,!1);else{if(0!==Ro||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(u=Ds(e))){for(t.flags|=64,Ji(r,!1),null!==(o=u.updateQueue)&&(t.updateQueue=o,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return oa(Fs,1&Fs.current|2),t.child}e=e.sibling}null!==r.tail&&Ba()>Po&&(t.flags|=64,o=!0,Ji(r,!1),t.lanes=33554432)}else{if(!o)if(null!==(e=Ds(u))){if(t.flags|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ji(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate&&!zs)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ba()-r.renderingStartTime>Po&&1073741824!==n&&(t.flags|=64,o=!0,Ji(r,!1),t.lanes=33554432);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ba(),n.sibling=null,t=Fs.current,oa(Fs,o?1&t|2:1&t),n):null;case 23:case 24:return yl(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function to(e){switch(e.tag){case 1:ha(e.type)&&fa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(_s(),ia(ca),ia(ua),Hs(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Rs(e),null;case 13:return ia(Fs),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ia(Fs),null;case 4:return _s(),null;case 10:return Ja(e),null;case 23:case 24:return yl(),null;default:return null}}function no(e,t){try{var n="",r=t;do{n+=j(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ro(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ui=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Gi=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,Es(Is.current);var i,o=null;switch(n){case"input":s=J(e,s),r=J(e,r),o=[];break;case"option":s=se(e,s),r=se(e,r),o=[];break;case"select":s=a({},s,{value:void 0}),r=a({},r,{value:void 0}),o=[];break;case"textarea":s=oe(e,s),r=oe(e,r),o=[];break;default:"function"!=typeof s.onClick&&"function"==typeof r.onClick&&(e.onclick=Mr)}for(d in Se(n,r),n=null,s)if(!r.hasOwnProperty(d)&&s.hasOwnProperty(d)&&null!=s[d])if("style"===d){var u=s[d];for(i in u)u.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(l.hasOwnProperty(d)?o||(o=[]):(o=o||[]).push(d,null));for(d in r){var c=r[d];if(u=null!=s?s[d]:void 0,r.hasOwnProperty(d)&&c!==u&&(null!=c||null!=u))if("style"===d)if(u){for(i in u)!u.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&u[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(o||(o=[]),o.push(d,n)),n=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(o=o||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(l.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Tr("scroll",e),o||u===c||(o=[])):"object"==typeof c&&null!==c&&c.$$typeof===O?c.toString():(o=o||[]).push(d,c))}n&&(o=o||[]).push("style",n);var d=o;(t.updateQueue=d)&&(t.flags|=4)}},Hi=function(e,t,n,r){n!==r&&(t.flags|=4)};var ao="function"==typeof WeakMap?WeakMap:Map;function so(e,t,n){(n=is(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Go||(Go=!0,Ho=r),ro(0,t)},n}function io(e,t,n){(n=is(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ro(0,t),r(a)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===jo?jo=new Set([this]):jo.add(this),ro(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var oo="function"==typeof WeakSet?WeakSet:Set;function lo(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Dl(e,t)}else t.current=null}function uo(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ur(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function co(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Al(n,e),_l(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&cs(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}cs(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Br(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function po(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=ve("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function ho(e,t){if(va&&"function"==typeof va.onCommitFiberUnmount)try{va.onCommitFiberUnmount(xa,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Al(t,n);else{r=t;try{a()}catch(e){Dl(r,e)}}n=n.next}while(n!==e)}break;case 1:if(lo(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Dl(t,e)}break;case 5:lo(t);break;case 4:xo(e,t)}}function fo(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function mo(e){return 5===e.tag||3===e.tag||4===e.tag}function go(e){e:{for(var t=e.return;null!==t;){if(mo(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yo(e,n,t):bo(e,n,t)}function yo(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Mr));else if(4!==r&&null!==(e=e.child))for(yo(e,t,n),e=e.sibling;null!==e;)yo(e,t,n),e=e.sibling}function bo(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(bo(e,t,n),e=e.sibling;null!==e;)bo(e,t,n),e=e.sibling}function xo(e,t){for(var n,r,a=t,s=!1;;){if(!s){s=a.return;e:for(;;){if(null===s)throw Error(i(160));switch(n=s.stateNode,s.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}s=s.return}s=!0}if(5===a.tag||6===a.tag){e:for(var o=e,l=a,u=l;;)if(ho(o,u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===l)break e;for(;null===u.sibling;){if(null===u.return||u.return===l)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}r?(o=n,l=a.stateNode,8===o.nodeType?o.parentNode.removeChild(l):o.removeChild(l)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(ho(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(s=!1)}a.sibling.return=a.return,a=a.sibling}}function vo(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var s=t.updateQueue;if(t.updateQueue=null,null!==s){for(n[Kr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ne(e,a),t=Ne(e,r),a=0;a<s.length;a+=2){var o=s[a],l=s[a+1];"style"===o?we(n,l):"dangerouslySetInnerHTML"===o?ge(n,l):"children"===o?ye(n,l):v(n,o,l,t)}switch(e){case"input":ne(n,r);break;case"textarea":ue(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(s=r.value)?ie(n,!!r.multiple,s,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bo=Ba(),po(t.child,!0)),void wo(t);case 19:return void wo(t);case 17:return;case 23:case 24:return void po(t,null!==t.memoizedState)}throw Error(i(163))}function wo(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oo),t.forEach((function(t){var r=Ml.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ko(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var So=Math.ceil,No=w.ReactCurrentDispatcher,Io=w.ReactCurrentOwner,To=0,Co=null,Eo=null,$o=0,_o=0,Ao=sa(0),Ro=0,Fo=null,Do=0,Oo=0,Mo=0,zo=0,Lo=null,Bo=0,Po=1/0;function Vo(){Po=Ba()+500}var Wo,Uo=null,Go=!1,Ho=null,jo=null,qo=!1,Xo=null,Ko=90,Qo=[],Yo=[],Zo=null,Jo=0,el=null,tl=-1,nl=0,rl=0,al=null,sl=!1;function il(){return 0!=(48&To)?Ba():-1!==tl?tl:tl=Ba()}function ol(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Pa()?1:2;if(0===nl&&(nl=Do),0!==ja.transition){0!==rl&&(rl=null!==Lo?Lo.pendingLanes:0),e=nl;var t=4186112&~rl;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Pa(),e=Bt(0!=(4&To)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nl)}function ll(e,t,n){if(50<Jo)throw Jo=0,el=null,Error(i(185));if(null===(e=ul(e,t)))return null;Wt(e,t,n),e===Co&&(Mo|=t,4===Ro&&pl(e,$o));var r=Pa();1===t?0!=(8&To)&&0==(48&To)?hl(e):(cl(e,n),0===To&&(Vo(),Ga())):(0==(4&To)||98!==r&&99!==r||(null===Zo?Zo=new Set([e]):Zo.add(e)),cl(e,n)),Lo=e}function ul(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cl(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,s=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-Ut(o),u=1<<l,c=s[l];if(-1===c){if(0==(u&r)||0!=(u&a)){c=t,Mt(u);var d=Ot;s[l]=10<=d?c+250:6<=d?c+5e3:-1}}else c<=t&&(e.expiredLanes|=u);o&=~u}if(r=zt(e,e===Co?$o:0),t=Ot,0===r)null!==n&&(n!==Fa&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Fa&&Sa(n)}15===t?(n=hl.bind(null,e),null===Oa?(Oa=[n],Ma=ka(Ea,Ha)):Oa.push(n),n=Fa):n=14===t?Ua(99,hl.bind(null,e)):Ua(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),dl.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function dl(e){if(tl=-1,rl=nl=0,0!=(48&To))throw Error(i(327));var t=e.callbackNode;if($l()&&e.callbackNode!==t)return null;var n=zt(e,e===Co?$o:0);if(0===n)return null;var r=n,a=To;To|=16;var s=vl();for(Co===e&&$o===r||(Vo(),bl(e,r));;)try{Sl();break}catch(t){xl(e,t)}if(Za(),No.current=s,To=a,null!==Eo?r=0:(Co=null,$o=0,r=Ro),0!=(Do&Mo))bl(e,0);else if(0!==r){if(2===r&&(To|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(n=Lt(e))&&(r=wl(e,n))),1===r)throw t=Fo,bl(e,0),pl(e,n),cl(e,Ba()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Tl(e);break;case 3:if(pl(e,n),(62914560&n)===n&&10<(r=Bo+500-Ba())){if(0!==zt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){il(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Vr(Tl.bind(null,e),r);break}Tl(e);break;case 4:if(pl(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var o=31-Ut(n);s=1<<o,(o=r[o])>a&&(a=o),n&=~s}if(n=a,10<(n=(120>(n=Ba()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*So(n/1960))-n)){e.timeoutHandle=Vr(Tl.bind(null,e),n);break}Tl(e);break;case 5:Tl(e);break;default:throw Error(i(329))}}return cl(e,Ba()),e.callbackNode===t?dl.bind(null,e):null}function pl(e,t){for(t&=~zo,t&=~Mo,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),r=1<<n;e[n]=-1,t&=~r}}function hl(e){if(0!=(48&To))throw Error(i(327));if($l(),e===Co&&0!=(e.expiredLanes&$o)){var t=$o,n=wl(e,t);0!=(Do&Mo)&&(n=wl(e,t=zt(e,t)))}else n=wl(e,t=zt(e,0));if(0!==e.tag&&2===n&&(To|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(t=Lt(e))&&(n=wl(e,t))),1===n)throw n=Fo,bl(e,0),pl(e,t),cl(e,Ba()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Tl(e),cl(e,Ba()),null}function fl(e,t){var n=To;To|=1;try{return e(t)}finally{0===(To=n)&&(Vo(),Ga())}}function ml(e,t){var n=To;To&=-2,To|=8;try{return e(t)}finally{0===(To=n)&&(Vo(),Ga())}}function gl(e,t){oa(Ao,_o),_o|=t,Do|=t}function yl(){_o=Ao.current,ia(Ao)}function bl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Wr(n)),null!==Eo)for(n=Eo.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&fa();break;case 3:_s(),ia(ca),ia(ua),Hs();break;case 5:Rs(r);break;case 4:_s();break;case 13:case 19:ia(Fs);break;case 10:Ja(r);break;case 23:case 24:yl()}n=n.return}Co=e,Eo=Pl(e.current,null),$o=_o=Do=t,Ro=0,Fo=null,zo=Mo=Oo=0}function xl(e,t){for(;;){var n=Eo;try{if(Za(),js.current=Ci,Zs){for(var r=Ks.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zs=!1}if(Xs=0,Ys=Qs=Ks=null,Js=!1,Io.current=null,null===n||null===n.return){Ro=1,Fo=t,Eo=null;break}e:{var s=e,i=n.return,o=n,l=t;if(t=$o,o.flags|=2048,o.firstEffect=o.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&o.mode)){var c=o.alternate;c?(o.updateQueue=c.updateQueue,o.memoizedState=c.memoizedState,o.lanes=c.lanes):(o.updateQueue=null,o.memoizedState=null)}var d=0!=(1&Fs.current),p=i;do{var h;if(h=13===p.tag){var f=p.memoizedState;if(null!==f)h=null!==f.dehydrated;else{var m=p.memoizedProps;h=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!d)}}if(h){var g=p.updateQueue;if(null===g){var y=new Set;y.add(u),p.updateQueue=y}else g.add(u);if(0==(2&p.mode)){if(p.flags|=64,o.flags|=16384,o.flags&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var b=is(-1,1);b.tag=2,os(o,b)}o.lanes|=1;break e}l=void 0,o=t;var x=s.pingCache;if(null===x?(x=s.pingCache=new ao,l=new Set,x.set(u,l)):void 0===(l=x.get(u))&&(l=new Set,x.set(u,l)),!l.has(o)){l.add(o);var v=Ol.bind(null,s,u,o);u.then(v,v)}p.flags|=4096,p.lanes=t;break e}p=p.return}while(null!==p);l=Error((q(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ro&&(Ro=2),l=no(l,o),p=i;do{switch(p.tag){case 3:s=l,p.flags|=4096,t&=-t,p.lanes|=t,ls(p,so(0,s,t));break e;case 1:s=l;var w=p.type,k=p.stateNode;if(0==(64&p.flags)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===jo||!jo.has(k)))){p.flags|=4096,t&=-t,p.lanes|=t,ls(p,io(p,s,t));break e}}p=p.return}while(null!==p)}Il(n)}catch(e){t=e,Eo===n&&null!==n&&(Eo=n=n.return);continue}break}}function vl(){var e=No.current;return No.current=Ci,null===e?Ci:e}function wl(e,t){var n=To;To|=16;var r=vl();for(Co===e&&$o===t||bl(e,t);;)try{kl();break}catch(t){xl(e,t)}if(Za(),To=n,No.current=r,null!==Eo)throw Error(i(261));return Co=null,$o=0,Ro}function kl(){for(;null!==Eo;)Nl(Eo)}function Sl(){for(;null!==Eo&&!Na();)Nl(Eo)}function Nl(e){var t=Wo(e.alternate,e,_o);e.memoizedProps=e.pendingProps,null===t?Il(e):Eo=t,Io.current=null}function Il(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=eo(n,t,_o)))return void(Eo=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&_o)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=to(t)))return n.flags&=2047,void(Eo=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Eo=t);Eo=t=e}while(null!==t);0===Ro&&(Ro=5)}function Tl(e){var t=Pa();return Wa(99,Cl.bind(null,e,t)),null}function Cl(e,t){do{$l()}while(null!==Xo);if(0!=(48&To))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,s=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var o=e.eventTimes,l=e.expirationTimes;0<s;){var u=31-Ut(s),c=1<<u;a[u]=0,o[u]=-1,l[u]=-1,s&=~c}if(null!==Zo&&0==(24&r)&&Zo.has(e)&&Zo.delete(e),e===Co&&(Eo=Co=null,$o=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=To,To|=32,Io.current=null,zr=Xt,hr(o=pr())){if("selectionStart"in o)l={start:o.selectionStart,end:o.selectionEnd};else e:if(l=(l=o.ownerDocument)&&l.defaultView||window,(c=l.getSelection&&l.getSelection())&&0!==c.rangeCount){l=c.anchorNode,s=c.anchorOffset,u=c.focusNode,c=c.focusOffset;try{l.nodeType,u.nodeType}catch(e){l=null;break e}var d=0,p=-1,h=-1,f=0,m=0,g=o,y=null;t:for(;;){for(var b;g!==l||0!==s&&3!==g.nodeType||(p=d+s),g!==u||0!==c&&3!==g.nodeType||(h=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===o)break t;if(y===l&&++f===s&&(p=d),y===u&&++m===c&&(h=d),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}l=-1===p||-1===h?null:{start:p,end:h}}else l=null;l=l||{start:0,end:0}}else l=null;Lr={focusedElem:o,selectionRange:l},Xt=!1,al=null,sl=!1,Uo=r;do{try{El()}catch(e){if(null===Uo)throw Error(i(330));Dl(Uo,e),Uo=Uo.nextEffect}}while(null!==Uo);al=null,Uo=r;do{try{for(o=e;null!==Uo;){var x=Uo.flags;if(16&x&&ye(Uo.stateNode,""),128&x){var v=Uo.alternate;if(null!==v){var w=v.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&x){case 2:go(Uo),Uo.flags&=-3;break;case 6:go(Uo),Uo.flags&=-3,vo(Uo.alternate,Uo);break;case 1024:Uo.flags&=-1025;break;case 1028:Uo.flags&=-1025,vo(Uo.alternate,Uo);break;case 4:vo(Uo.alternate,Uo);break;case 8:xo(o,l=Uo);var k=l.alternate;fo(l),null!==k&&fo(k)}Uo=Uo.nextEffect}}catch(e){if(null===Uo)throw Error(i(330));Dl(Uo,e),Uo=Uo.nextEffect}}while(null!==Uo);if(w=Lr,v=pr(),x=w.focusedElem,o=w.selectionRange,v!==x&&x&&x.ownerDocument&&dr(x.ownerDocument.documentElement,x)){null!==o&&hr(x)&&(v=o.start,void 0===(w=o.end)&&(w=v),"selectionStart"in x?(x.selectionStart=v,x.selectionEnd=Math.min(w,x.value.length)):(w=(v=x.ownerDocument||document)&&v.defaultView||window).getSelection&&(w=w.getSelection(),l=x.textContent.length,k=Math.min(o.start,l),o=void 0===o.end?k:Math.min(o.end,l),!w.extend&&k>o&&(l=o,o=k,k=l),l=cr(x,k),s=cr(x,o),l&&s&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==s.node||w.focusOffset!==s.offset)&&((v=v.createRange()).setStart(l.node,l.offset),w.removeAllRanges(),k>o?(w.addRange(v),w.extend(s.node,s.offset)):(v.setEnd(s.node,s.offset),w.addRange(v))))),v=[];for(w=x;w=w.parentNode;)1===w.nodeType&&v.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<v.length;x++)(w=v[x]).element.scrollLeft=w.left,w.element.scrollTop=w.top}Xt=!!zr,Lr=zr=null,e.current=n,Uo=r;do{try{for(x=e;null!==Uo;){var S=Uo.flags;if(36&S&&co(x,Uo.alternate,Uo),128&S){v=void 0;var N=Uo.ref;if(null!==N){var I=Uo.stateNode;switch(Uo.tag){case 5:v=I;break;default:v=I}"function"==typeof N?N(v):N.current=v}}Uo=Uo.nextEffect}}catch(e){if(null===Uo)throw Error(i(330));Dl(Uo,e),Uo=Uo.nextEffect}}while(null!==Uo);Uo=null,Da(),To=a}else e.current=n;if(qo)qo=!1,Xo=e,Ko=t;else for(Uo=r;null!==Uo;)t=Uo.nextEffect,Uo.nextEffect=null,8&Uo.flags&&((S=Uo).sibling=null,S.stateNode=null),Uo=t;if(0===(r=e.pendingLanes)&&(jo=null),1===r?e===el?Jo++:(Jo=0,el=e):Jo=0,n=n.stateNode,va&&"function"==typeof va.onCommitFiberRoot)try{va.onCommitFiberRoot(xa,n,void 0,64==(64&n.current.flags))}catch(e){}if(cl(e,Ba()),Go)throw Go=!1,e=Ho,Ho=null,e;return 0!=(8&To)||Ga(),null}function El(){for(;null!==Uo;){var e=Uo.alternate;sl||null===al||(0!=(8&Uo.flags)?Je(Uo,al)&&(sl=!0):13===Uo.tag&&ko(e,Uo)&&Je(Uo,al)&&(sl=!0));var t=Uo.flags;0!=(256&t)&&uo(e,Uo),0==(512&t)||qo||(qo=!0,Ua(97,(function(){return $l(),null}))),Uo=Uo.nextEffect}}function $l(){if(90!==Ko){var e=97<Ko?97:Ko;return Ko=90,Wa(e,Rl)}return!1}function _l(e,t){Qo.push(t,e),qo||(qo=!0,Ua(97,(function(){return $l(),null})))}function Al(e,t){Yo.push(t,e),qo||(qo=!0,Ua(97,(function(){return $l(),null})))}function Rl(){if(null===Xo)return!1;var e=Xo;if(Xo=null,0!=(48&To))throw Error(i(331));var t=To;To|=32;var n=Yo;Yo=[];for(var r=0;r<n.length;r+=2){var a=n[r],s=n[r+1],o=a.destroy;if(a.destroy=void 0,"function"==typeof o)try{o()}catch(e){if(null===s)throw Error(i(330));Dl(s,e)}}for(n=Qo,Qo=[],r=0;r<n.length;r+=2){a=n[r],s=n[r+1];try{var l=a.create;a.destroy=l()}catch(e){if(null===s)throw Error(i(330));Dl(s,e)}}for(l=e.current.firstEffect;null!==l;)e=l.nextEffect,l.nextEffect=null,8&l.flags&&(l.sibling=null,l.stateNode=null),l=e;return To=t,Ga(),!0}function Fl(e,t,n){os(e,t=so(0,t=no(n,t),1)),t=il(),null!==(e=ul(e,1))&&(Wt(e,1,t),cl(e,t))}function Dl(e,t){if(3===e.tag)Fl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Fl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===jo||!jo.has(r))){var a=io(n,e=no(t,e),1);if(os(n,a),a=il(),null!==(n=ul(n,1)))Wt(n,1,a),cl(n,a);else if("function"==typeof r.componentDidCatch&&(null===jo||!jo.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Ol(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=il(),e.pingedLanes|=e.suspendedLanes&n,Co===e&&($o&n)===n&&(4===Ro||3===Ro&&(62914560&$o)===$o&&500>Ba()-Bo?bl(e,0):zo|=n),cl(e,t)}function Ml(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Pa()?1:2:(0===nl&&(nl=Do),0===(t=Pt(62914560&~nl))&&(t=4194304))),n=il(),null!==(e=ul(e,t))&&(Wt(e,t,n),cl(e,n))}function zl(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Ll(e,t,n,r){return new zl(e,t,n,r)}function Bl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Pl(e,t){var n=e.alternate;return null===n?((n=Ll(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Vl(e,t,n,r,a,s){var o=2;if(r=e,"function"==typeof e)Bl(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case N:return Wl(n.children,a,s,t);case M:o=8,a|=16;break;case I:o=8,a|=1;break;case T:return(e=Ll(12,n,t,8|a)).elementType=T,e.type=T,e.lanes=s,e;case _:return(e=Ll(13,n,t,a)).type=_,e.elementType=_,e.lanes=s,e;case A:return(e=Ll(19,n,t,a)).elementType=A,e.lanes=s,e;case z:return Ul(n,a,s,t);case L:return(e=Ll(24,n,t,a)).elementType=L,e.lanes=s,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:o=10;break e;case E:o=9;break e;case $:o=11;break e;case R:o=14;break e;case F:o=16,r=null;break e;case D:o=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Ll(o,n,t,a)).elementType=e,t.type=r,t.lanes=s,t}function Wl(e,t,n,r){return(e=Ll(7,e,r,t)).lanes=n,e}function Ul(e,t,n,r){return(e=Ll(23,e,r,t)).elementType=z,e.lanes=n,e}function Gl(e,t,n){return(e=Ll(6,e,null,t)).lanes=n,e}function Hl(e,t,n){return(t=Ll(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function jl(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Vt(0),this.expirationTimes=Vt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Vt(0),this.mutableSourceEagerHydrationData=null}function ql(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Xl(e,t,n,r){var a=t.current,s=il(),o=ol(a);e:if(n){t:{if(Ke(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ha(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(i(171))}if(1===n.tag){var u=n.type;if(ha(u)){n=ga(n,u,l);break e}}n=l}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=is(s,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),os(a,t),ll(a,o,s),o}function Kl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ql(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Yl(e,t){Ql(e,t),(e=e.alternate)&&Ql(e,t)}function Zl(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new jl(e,t,null!=n&&!0===n.hydrate),t=Ll(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,as(t),e[Qr]=n.current,Er(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function eu(e,t,n,r,a){var s=n._reactRootContainer;if(s){var i=s._internalRoot;if("function"==typeof a){var o=a;a=function(){var e=Kl(i);o.call(e)}}Xl(t,i,e,a)}else{if(s=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Zl(e,0,t?{hydrate:!0}:void 0)}(n,r),i=s._internalRoot,"function"==typeof a){var l=a;a=function(){var e=Kl(i);l.call(e)}}ml((function(){Xl(t,i,e,a)}))}return Kl(i)}function tu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Jl(t))throw Error(i(200));return ql(e,t,null,n)}Wo=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ca.current)Ri=!0;else{if(0==(n&r)){switch(Ri=!1,t.tag){case 3:Wi(t),Us();break;case 5:As(t);break;case 1:ha(t.type)&&ya(t);break;case 4:$s(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;oa(Xa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?qi(e,t,n):(oa(Fs,1&Fs.current),null!==(t=Zi(e,t,n))?t.sibling:null);oa(Fs,1&Fs.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Yi(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),oa(Fs,Fs.current),r)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,n)}return Zi(e,t,n)}Ri=0!=(16384&e.flags)}else Ri=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=pa(t,ua.current),ts(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ha(r)){var s=!0;ya(t)}else s=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,as(t);var o=r.getDerivedStateFromProps;"function"==typeof o&&ps(t,r,o,e),a.updater=hs,t.stateNode=a,a._reactInternals=t,ys(t,r,e,n),t=Vi(null,t,r,!0,s,n)}else t.tag=0,Fi(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(s=a._init)(a._payload),t.type=a,s=t.tag=function(e){if("function"==typeof e)return Bl(e)?1:0;if(null!=e){if((e=e.$$typeof)===$)return 11;if(e===R)return 14}return 2}(a),e=qa(a,e),s){case 0:t=Bi(null,t,a,e,n);break e;case 1:t=Pi(null,t,a,e,n);break e;case 11:t=Di(null,t,a,e,n);break e;case 14:t=Oi(null,t,a,qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Bi(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Pi(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if(Wi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ss(e,t),us(t,r,null,n),(r=t.memoizedState.element)===a)Us(),t=Zi(e,t,n);else{if((s=(a=t.stateNode).hydrate)&&(Ms=Gr(t.stateNode.containerInfo.firstChild),Os=t,s=zs=!0),s){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(s=e[a])._workInProgressVersionPrimary=e[a+1],Gs.push(s);for(n=Ss(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Fi(e,t,r,n),Us();t=t.child}return t;case 5:return As(t),null===e&&Ps(t),r=t.type,a=t.pendingProps,s=null!==e?e.memoizedProps:null,o=a.children,Pr(r,a)?o=null:null!==s&&Pr(r,s)&&(t.flags|=16),Li(e,t),Fi(e,t,o,n),t.child;case 6:return null===e&&Ps(t),null;case 13:return qi(e,t,n);case 4:return $s(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ks(t,null,r,n):Fi(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Di(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return Fi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Fi(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,o=t.memoizedProps,s=a.value;var l=t.type._context;if(oa(Xa,l._currentValue),l._currentValue=s,null!==o)if(l=o.value,0==(s=ir(l,s)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,s):1073741823))){if(o.children===a.children&&!ca.current){t=Zi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){o=l.child;for(var c=u.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&s)){1===l.tag&&((c=is(-1,n&-n)).tag=2,os(l,c)),l.lanes|=n,null!==(c=l.alternate)&&(c.lanes|=n),es(l.return,n),u.lanes|=n;break}c=c.next}}else o=10===l.tag&&l.type===t.type?null:l.child;if(null!==o)o.return=l;else for(o=l;null!==o;){if(o===t){o=null;break}if(null!==(l=o.sibling)){l.return=o.return,o=l;break}o=o.return}l=o}Fi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(s=t.pendingProps).children,ts(t,n),r=r(a=ns(a,s.unstable_observedBits)),t.flags|=1,Fi(e,t,r,n),t.child;case 14:return s=qa(a=t.type,t.pendingProps),Oi(e,t,a,s=qa(a.type,s),r,n);case 15:return Mi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ha(r)?(e=!0,ya(t)):e=!1,ts(t,n),ms(t,r,a),ys(t,r,a,n),Vi(null,t,r,!0,e,n);case 19:return Yi(e,t,n);case 23:case 24:return zi(e,t,n)}throw Error(i(156,t.tag))},Zl.prototype.render=function(e){Xl(e,this._internalRoot,null,null)},Zl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xl(null,e,null,(function(){t[Qr]=null}))},et=function(e){13===e.tag&&(ll(e,4,il()),Yl(e,4))},tt=function(e){13===e.tag&&(ll(e,67108864,il()),Yl(e,67108864))},nt=function(e){if(13===e.tag){var t=il(),n=ol(e);ll(e,n,t),Yl(e,n)}},rt=function(e,t){return t()},Te=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(i(90));Y(r),ne(r,a)}}}break;case"textarea":ue(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Re=fl,Fe=function(e,t,n,r,a){var s=To;To|=4;try{return Wa(98,e.bind(null,t,n,r,a))}finally{0===(To=s)&&(Vo(),Ga())}},De=function(){0==(49&To)&&(function(){if(null!==Zo){var e=Zo;Zo=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cl(e,Ba())}))}Ga()}(),$l())},Oe=function(e,t){var n=To;To|=2;try{return e(t)}finally{0===(To=n)&&(Vo(),Ga())}};var nu={Events:[Jr,ea,ta,_e,Ae,$l,{current:!1}]},ru={findFiberByHostInstance:Zr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},au={bundleType:ru.bundleType,version:ru.version,rendererPackageName:ru.rendererPackageName,rendererConfig:ru.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ru.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var su=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!su.isDisabled&&su.supportsFiber)try{xa=su.inject(au),va=su}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,t.createPortal=tu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=To;if(0!=(48&n))return e(t);To|=1;try{if(e)return Wa(99,e.bind(null,t))}finally{To=n,Ga()}},t.hydrate=function(e,t,n){if(!Jl(t))throw Error(i(200));return eu(null,e,t,!0,n)},t.render=function(e,t,n){if(!Jl(t))throw Error(i(200));return eu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(i(40));return!!e._reactRootContainer&&(ml((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Qr]=null}))})),!0)},t.unstable_batchedUpdates=fl,t.unstable_createPortal=function(e,t){return tu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Jl(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return eu(e,t,n,!1,r)},t.version="17.0.2"},6116:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(3748)},8722:function(e,t,n){var r;r=function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var r,a=n("react"),s=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function o(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!=typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,r){t.call(navigator,e,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var l=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.unmounted=!1,n.state={hasUserMedia:!1},n}return s(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;o()?e.hasUserMedia||this.requestUserMedia():t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(o()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),r=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),a=e.minScreenshotWidth!==t.minScreenshotWidth,s=e.minScreenshotHeight!==t.minScreenshotHeight;(r||a||s)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var r=this.getCanvas(e);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,a=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=r/a;a=(r=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&a<n.minScreenshotHeight&&(r=(a=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null==e?void 0:e.width)||r,this.canvas.height=(null==e?void 0:e.height)||a,this.ctx=this.canvas.getContext("2d")}var i=this.ctx,o=this.canvas;return i&&o&&(n.mirrored&&(i.translate(o.width,0),i.scale(-1,1)),i.imageSmoothingEnabled=n.imageSmoothing,i.drawImage(this.video,0,0,(null==e?void 0:e.width)||o.width,(null==e?void 0:e.height)||o.height),n.mirrored&&(i.scale(-1,1),i.translate(-o.width,0))),o},t.prototype.requestUserMedia=function(){var e=this,n=this.props,r=function(r,a){var s={video:void 0===a||a};n.audio&&(s.audio=void 0===r||r),navigator.mediaDevices.getUserMedia(s).then((function(n){e.unmounted?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var a=function(e){return{optional:[{sourceId:e}]}},s=function(e){var t=e.deviceId;return"string"==typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"==typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,i=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(i=e.id)}));var o=s(n.audioConstraints);o&&(t=o);var l=s(n.videoConstraints);l&&(i=l),r(a(t),a(i))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(e){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,r=n.audio,s=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),o=n.style,l=void 0===o?{}:o,u=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),c=s?i(i({},l),{transform:(l.transform||"")+" scaleX(-1)"}):l;return a.createElement("video",i({autoPlay:!0,src:t.src,muted:r,playsInline:!0,ref:function(t){e.video=t},style:c},u))},t.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(a.Component);t.default=l},react:function(t,n){t.exports=e}}).default},e.exports=r(n(5466))},6751:(e,t,n)=>{"use strict";var r=n(7347),a=60103,s=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,o=60110,l=60112;t.Suspense=60113;var u=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;a=d("react.element"),s=d("react.portal"),t.Fragment=d("react.fragment"),t.StrictMode=d("react.strict_mode"),t.Profiler=d("react.profiler"),i=d("react.provider"),o=d("react.context"),l=d("react.forward_ref"),t.Suspense=d("react.suspense"),u=d("react.memo"),c=d("react.lazy")}var p="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||f}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var x=b.prototype=new y;x.constructor=b,r(x,g.prototype),x.isPureReactComponent=!0;var v={current:null},w=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,s={},i=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,r)&&!k.hasOwnProperty(r)&&(s[r]=t[r]);var l=arguments.length-2;if(1===l)s.children=n;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===s[r]&&(s[r]=l[r]);return{$$typeof:a,type:e,key:i,ref:o,props:s,_owner:v.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var I=/\/+/g;function T(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,r,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case s:l=!0}}if(l)return i=i(l=e),e=""===r?"."+T(l,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(I,"$&/")+"/"),C(i,t,n,"",(function(e){return e}))):null!=i&&(N(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(I,"$&/")+"/")+e)),t.push(i)),1;if(l=0,r=""===r?".":r+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=r+T(o=e[u],u);l+=C(o,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),u=0;!(o=e.next()).done;)l+=C(o=o.value,t,n,c=r+T(o,u++),i);else if("object"===o)throw t=""+e,Error(h(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return l}function E(e,t,n){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function $(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var _={current:null};function A(){var e=_.current;if(null===e)throw Error(h(321));return e}var R={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:v,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:E,forEach:function(e,t,n){E(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return E(e,(function(){t++})),t},toArray:function(e){return E(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error(h(143));return e}},t.Component=g,t.PureComponent=b,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(h(267,e));var s=r({},e.props),i=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=v.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)w.call(t,c)&&!k.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=n;else if(1<c){u=Array(c);for(var d=0;d<c;d++)u[d]=arguments[d+2];s.children=u}return{$$typeof:a,type:e.type,key:i,ref:o,props:s,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:o,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:$}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="17.0.2"},5466:(e,t,n)=>{"use strict";e.exports=n(6751)},7588:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",o=a.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof g?t:g,s=Object.create(a.prototype),i=new E(r||[]);return s._invoke=function(e,t,n){var r=d;return function(a,s){if(r===h)throw new Error("Generator is already running");if(r===f){if("throw"===a)throw s;return _()}for(n.method=a,n.arg=s;;){var i=n.delegate;if(i){var o=I(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=h;var l=c(e,t,n);if("normal"===l.type){if(r=n.done?f:p,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=f,n.method="throw",n.arg=l.arg)}}}(e,n,i),s}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var d="suspendedStart",p="suspendedYield",h="executing",f="completed",m={};function g(){}function y(){}function b(){}var x={};x[s]=function(){return this};var v=Object.getPrototypeOf,w=v&&v(v($([])));w&&w!==n&&r.call(w,s)&&(x=w);var k=b.prototype=g.prototype=Object.create(x);function S(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function N(e,t){function n(a,s,i,o){var l=c(e[a],e,s);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(d).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;this._invoke=function(e,r){function s(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(s,s):s()}}function I(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,I(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=c(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function $(e){if(e){var n=e[s];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:_}}function _(){return{value:t,done:!0}}return y.prototype=k.constructor=b,b.constructor=y,y.displayName=l(b,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,l(e,o,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},S(N.prototype),N.prototype[i]=function(){return this},e.AsyncIterator=N,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var i=new N(u(t,n,r,a),s);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},S(k),l(k,o,"Generator"),k[s]=function(){return this},k.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=$,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return o.type="throw",o.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),C(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;C(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:$(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}},8794:(e,t)=>{"use strict";var n,r,a,s;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,d=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(d,0),e}};n=function(e){null!==u?setTimeout(n,0,e):(u=e,setTimeout(d,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},s=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var f=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof f&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,y=-1,b=5,x=0;t.unstable_shouldYield=function(){return t.unstable_now()>=x},s=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var v=new MessageChannel,w=v.port2;v.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();x=e+b;try{g(!0,e)?w.postMessage(null):(m=!1,g=null)}catch(e){throw w.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,w.postMessage(null))},r=function(e,n){y=p((function(){e(t.unstable_now())}),n)},a=function(){h(y),y=-1}}function k(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<I(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function N(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var s=2*(r+1)-1,i=e[s],o=s+1,l=e[o];if(void 0!==i&&0>I(i,n))void 0!==l&&0>I(l,i)?(e[r]=l,e[o]=n,r=o):(e[r]=i,e[s]=n,r=s);else{if(!(void 0!==l&&0>I(l,n)))break e;e[r]=l,e[o]=n,r=o}}}return t}return null}function I(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var T=[],C=[],E=1,$=null,_=3,A=!1,R=!1,F=!1;function D(e){for(var t=S(C);null!==t;){if(null===t.callback)N(C);else{if(!(t.startTime<=e))break;N(C),t.sortIndex=t.expirationTime,k(T,t)}t=S(C)}}function O(e){if(F=!1,D(e),!R)if(null!==S(T))R=!0,n(M);else{var t=S(C);null!==t&&r(O,t.startTime-e)}}function M(e,n){R=!1,F&&(F=!1,a()),A=!0;var s=_;try{for(D(n),$=S(T);null!==$&&(!($.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=$.callback;if("function"==typeof i){$.callback=null,_=$.priorityLevel;var o=i($.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?$.callback=o:$===S(T)&&N(T),D(n)}else N(T);$=S(T)}if(null!==$)var l=!0;else{var u=S(C);null!==u&&r(O,u.startTime-n),l=!1}return l}finally{$=null,_=s,A=!1}}var z=s;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||A||(R=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return _},t.unstable_getFirstCallbackNode=function(){return S(T)},t.unstable_next=function(e){switch(_){case 1:case 2:case 3:var t=3;break;default:t=_}var n=_;_=t;try{return e()}finally{_=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=z,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=_;_=e;try{return t()}finally{_=n}},t.unstable_scheduleCallback=function(e,s,i){var o=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?o+i:o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:E++,callback:s,priorityLevel:e,startTime:i,expirationTime:l=i+l,sortIndex:-1},i>o?(e.sortIndex=i,k(C,e),null===S(T)&&e===S(C)&&(F?a():F=!0,r(O,i-o))):(e.sortIndex=l,k(T,e),R||A||(R=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=_;return function(){var n=_;_=t;try{return e.apply(this,arguments)}finally{_=n}}}},7767:(e,t,n)=>{"use strict";e.exports=n(8794)},600:(e,t,n)=>{var r=n(906),a=n(1930),s=n(7319),i=n(866),o=n(8217),l=n(4977),u=n(6084);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},906:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},4977:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},1930:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},8217:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},866:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},7319:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},6084:(e,t,n)=>{var r;!function(a,s){var i,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<l;)i[a]=a++;for(a=0;a<l;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*l+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},9087:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7705),a=n.n(r)()((function(e){return e[1]}));a.push([e.id,"h1{\r\n    color: teal\r\n}",""]);const s=a},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},i=[],o=0;o<e.length;o++){var l=e[o],u=r.base?l[0]+r.base:l[0],c=s[u]||0,d="".concat(u," ").concat(c);s[u]=c+1;var p=n(d),h={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(t[p].references++,t[p].updater(h)):t.push({identifier:d,updater:a(h,r),references:1}),i.push(d)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var s=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<s.length;i++){var o=n(s[i]);t[o].references--}for(var l=r(e,a),u=0;u<s.length;u++){var c=n(s[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}s=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,a=n.media,s=n.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},5042:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>yc,bincountImpl:()=>ud,bincountReduceImpl:()=>cd,ceilImpl:()=>hd,concatImpl:()=>xd,equalImpl:()=>tp,expImpl:()=>pp,expm1Impl:()=>yp,floorImpl:()=>Dp,gatherNdImpl:()=>Wp,gatherV2Impl:()=>Gp,greaterEqualImpl:()=>Kp,greaterImpl:()=>jp,lessEqualImpl:()=>lh,lessImpl:()=>sh,linSpaceImpl:()=>dh,logImpl:()=>hh,maxImpl:()=>Eh,maximumImpl:()=>Ah,minimumImpl:()=>Vh,multiplyImpl:()=>qd,negImpl:()=>Yh,notEqualImpl:()=>sf,prodImpl:()=>xf,rangeImpl:()=>wf,rsqrtImpl:()=>Ff,simpleAbsImpl:()=>Tc,sliceImpl:()=>sd,sparseFillEmptyRowsImpl:()=>Jf,sparseReshapeImpl:()=>tm,sparseSegmentReductionImpl:()=>rm,squaredDifferenceImpl:()=>dm,stridedSliceImpl:()=>gm,stringNGramsImpl:()=>xm,stringSplitImpl:()=>km,stringToHashBucketFastImpl:()=>Nm,subImpl:()=>Sp,tileImpl:()=>_m,topKImpl:()=>Dm,transposeImpl:()=>Fc,uniqueImpl:()=>Vm});var t=n(5466),r=n(6116),a=(n(7588),n(2080)),s=n(671),i=n(3998),o=n(3286),l=n(3648);const u={kernelName:s.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,l.N)((0,i.p)(n,"float32"),-1))}}};var c=n(6453),d=n(3568),p=n(6606),h=n(8260),f=n(4013),m=n(7458);const g={kernelName:s.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f.h)((0,i.p)(n,"float32")),r=(0,h._)((0,m.l)((0,p.i)(1),t));return(0,d.W)((0,c.h)(e,r))}}}},y={kernelName:s.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,h._)((0,m.l)((0,f.h)((0,i.p)(n,"float32")),1));return(0,c.h)(e,t)}}}};var b=n(7644),x=n(6488),v=n(4661);const w={kernelName:s.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=b.RR(n.shape,a);return r.length>0&&(t=(0,v.S)(t,r)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.RR(r.shape,a);return n.length>0&&(t=(0,v.S)(t,n)),(0,x.X)(t,r.shape)}}}},k={kernelName:s.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var S=n(9433);const N={kernelName:s.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},I={kernelName:s.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,S.P)(n)}}},T={kernelName:s.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,h._)((0,m.l)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32")))))}}};var C=n(7640);const E={kernelName:s.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,h._)((0,C.I)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32"))));return(0,c.h)(e,t)}}}},$={kernelName:s.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.$N)(n.shape,r.shape);return{a:()=>{const t=(0,C.I)((0,f.h)(n),(0,f.h)(r));let s=(0,o.d)(e,(0,c.h)(r,t));const i=(0,b.RR)(n.shape,a);return i.length>0&&(s=(0,v.S)(s,i)),(0,x.X)(s,n.shape)},b:()=>{const t=(0,C.I)((0,f.h)(n),(0,f.h)(r));let s=(0,d.W)((0,o.d)(e,(0,c.h)(n,t)));const i=(0,b.RR)(r.shape,a);return i.length>0&&(s=(0,v.S)(s,i)),(0,x.X)(s,r.shape)}}}},_={kernelName:s.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,C.I)((0,f.h)((0,i.p)(n,"float32")),1))}}},A={kernelName:s.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,m.l)((0,p.i)(1),(0,f.h)((0,i.p)(n,"float32"))))}}};var R=n(7845),F=n(4382),D=n(1525),O=n(2125);const M=(0,O.op)({avgPool3dGrad_:function(e,t,n,r,a,i){const o=(0,F._1)(e,"dy","avgPool3dGrad"),l=(0,F._1)(t,"input","avgPool3dGrad");let u=o,c=l,d=!1;4===l.rank&&(d=!0,u=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),D.hu(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),null!=i&&D.hu(D.GN(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:u,input:c},h={filterSize:n,strides:r,pad:a,dimRoundingMode:i},f=R.BV.runKernel(s.IM,p,h);return d?(0,x.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),z={kernelName:s._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>M(e,r,a,s,i,o)}}},L=(0,O.op)({avgPoolGrad_:function(e,t,n,r,a){const i=(0,F._1)(e,"dy","avgPoolGrad"),o=(0,F._1)(t,"input","avgPoolGrad");D.hu(o.rank===i.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`));let l=o,u=i,c=!1;3===o.rank&&(c=!0,l=(0,x.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),D.hu(4===l.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`));const d={dy:u,input:l},p={filterSize:n,strides:r,pad:a},h=R.BV.runKernel(s.RO,d,p);return c?(0,x.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),B={kernelName:s.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>L(e,r,a,s,i)}}};var P=n(5375);const V={kernelName:s.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>(0,P.O)(e,a,!1,!1),b:()=>(0,P.O)(e,r,!0,!1)}:s&&!i?{a:()=>(0,P.O)(a,e,!1,!0),b:()=>(0,P.O)(r,e,!1,!1)}:{a:()=>(0,P.O)(a,e,!0,!0),b:()=>(0,P.O)(e,r,!0,!0)}:{a:()=>(0,P.O)(e,a,!1,!0),b:()=>(0,P.O)(r,e,!0,!1)}}};var W=n(295);const U={kernelName:s.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>(0,W.f)(e,r,a)}}},G={kernelName:s.Ly,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,v.S)(e,o,!0)}}},H={kernelName:s.RF,gradFunc:e=>({x:()=>e.clone()})},j={kernelName:s.gJ,gradFunc:e=>({x:()=>(0,S.P)(e)})};var q=n(7101),X=n(7544),K=n(926),Q=n(13);const Y={kernelName:s.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,Q.a)((0,K.H)((0,q.b)(r,a),(0,X.z)(r,s)),e,(0,S.P)(e))}}},Z={kernelName:s.yj,inputsToSave:["x"],gradFunc:u.gradFunc};var J=n(3779);const ee={kernelName:s.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,D.EC)(a,t[0].shape)[0],i=r.map((e=>e[s]));return(0,J.V)(e,i,s).map((e=>()=>e))}};var te=n(3775),ne=n(7349),re=n(5799);const ae={kernelName:s.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return D.hu(re.I0(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,ne._)(r.shape,e,a,i,o,l),filter:()=>(0,te.p)(r,e,a.shape,i,o,l)}}};var se=n(1655);const ie={kernelName:s.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>(0,se.T)(e,a,s,i,o,1,l),filter:()=>(0,te.p)(e,r,a.shape,s,i,o,l)}}},oe=(0,O.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let i=e;4===e.rank&&(i=(0,x.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,x.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D.hu(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),D.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),D.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),D.hu(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),D.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const l={x:i,dy:o},u={strides:r,pad:a,filterShape:n};return R.BV.runKernel(s.o2,l,u)}});var le=n(2793);const ue={kernelName:s.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;D.hu((0,re.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,le._)(i.shape,e,o,a,s),filter:()=>oe(i,e,o.shape,a,s)}}};var ce=n(1328);const de={kernelName:s.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,d.W)((0,ce.O)((0,i.p)(n,"float32"))),e)}}};var pe=n(7755);const he={kernelName:s.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,pe.R)((0,i.p)(n,"float32")),e)}}};var fe=n(6555),me=n(294),ge=n(2298);const ye={kernelName:s.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=(0,fe.Q3)([a],r.rank);let n=(0,me.z)(e,a,s,!i);return null!=t&&(n=(0,ge.p)(n,t)),n}}}};var be=n(2418),xe=n(8717);const ve={kernelName:s.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;D.hu(re.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return D.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),D.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),D.hu(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),D.hu(re.jT(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&D.hu(D.GN(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>(0,xe.v)(l.shape,e,u,a,s,r,i),filter:()=>(0,be.z)(l,e,u.shape,a,s,r,i)}}},we={kernelName:s.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>R.BV.runKernel(s.ek,i,n),filter:()=>R.BV.runKernel(s.Vn,o,n)}}},ke={kernelName:s.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>R.BV.runKernel(s.HE,r)}}};var Se=n(2864);const Ne={kernelName:s.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.d)((0,Se.Q)((0,d.W)((0,f.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,o.d)(e,r)}}},Ie={kernelName:s.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,n)}}},Te={kernelName:s.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,x.X)(e,n.shape)}}},Ce={kernelName:s.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,Se.Q)(n))}}},Ee={kernelName:s.OR,gradFunc:e=>({x:()=>(0,S.P)(e)})},$e={kernelName:s.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.$N)(n.shape,r.shape);return{a:()=>{const t=(0,c.h)(e,(0,i.p)(r,"float32")),s=(0,b.RR)(n.shape,a);return s.length>0?(0,x.X)((0,v.S)(t,s),n.shape):t},b:()=>{let t=(0,o.d)(e,(0,i.p)(n,"float32"));const s=(0,b.RR)(r.shape,a);s.length>0&&(t=(0,x.X)((0,v.S)(t,s),r.shape));const l=(0,f.h)(r);return(0,d.W)((0,c.h)(t,(0,i.p)(l,"float32")))}}}};var _e=n(149),Ae=n(3066);const Re={kernelName:s.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,l]=t,u=null==l?(0,p.i)(1):l,c=(0,b.RR)(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}const h=(0,m.l)(a,s),f=(0,o.d)(e,u),g=(0,_e.b)((0,C.I)(i,(0,p.i)(r))),y=(0,o.d)((0,o.d)((0,o.d)(g,g),g),(0,p.i)(-.5));return{x:()=>1===s.rank?(0,x.X)((0,o.d)((0,o.d)(e,(0,Ae.G)((0,x.X)(g,[1,1,1,s.shape[0]]),d)),u),a.shape):(0,x.X)((0,o.d)((0,o.d)(e,g),u),a.shape),mean:()=>{let e=(0,o.d)((0,o.d)(g,(0,p.i)(-1)),f);return 1===s.rank&&(e=(0,v.S)(e,c)),(0,x.X)(e,s.shape)},variance:()=>{let e=(0,o.d)((0,o.d)(y,h),f);return 1===s.rank&&(e=(0,v.S)(e,c)),(0,x.X)(e,s.shape)},scale:()=>{const t=(0,o.d)(h,g);let n=(0,o.d)(e,t);return 1===s.rank&&(n=(0,v.S)(n,c)),(0,x.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,v.S)(t,c)),(0,x.X)(t,s.shape)}}}};var Fe=n(7614);const De={kernelName:s.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=(0,D.EC)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),c=u.length,d=Oe(0,l),p=Oe(l+1,l+1+c),h=Me([o,[n],u]),f=(0,x.X)(e,h),m=(0,x.X)(a,[n]),g=Me([[l],d,p]),y=(0,ge.p)(f,g);let b=(0,Fe.p)(y,m,r.shape[i]);const v=(0,fe.LJ)(g);return b=(0,ge.p)(b,v),b},indices:()=>a}}};function Oe(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Me(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ze={kernelName:s.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,S.P)(n),b:()=>(0,S.P)(r)}}},Le={kernelName:s.iJ,gradFunc:e=>({x:()=>(0,i.p)(e,"float32")})},Be={kernelName:s.av,gradFunc:e=>({x:()=>(0,S.P)(e)})},Pe={kernelName:s.iW,gradFunc:e=>({x:()=>(0,S.P)(e)})},Ve={kernelName:s.r7,gradFunc:e=>({x:()=>(0,S.P)(e)})};var We=n(8733);const Ue={kernelName:s.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=(0,We.p)(r,0);return{x:()=>(0,Q.a)(s,e,(0,o.d)(e,a))}}},Ge={kernelName:s.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,C.I)(n,1))}}},He={kernelName:s.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,i.p)(n,"float32"))}}},je={kernelName:s.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Se.Q)(r);return(0,m.l)(e,(0,o.d)((0,v.S)(e,a,!0),t))}}}},qe=(0,O.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,i=1,o=.5){const l={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:i,beta:o};return R.BV.runKernel(s.Hh,l,u)}}),Xe={kernelName:s.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>qe(r,a,e,s,i,o,l)}}};var Ke=n(9489);function Qe(e,t,n,r){return t.rank<n.rank&&(t=(0,x.X)(t,fe.rv(t.shape,r))),e.rank<n.rank&&(e=(0,x.X)(e,fe.rv(e.shape,r))),{x:()=>(0,o.d)(e,(0,i.p)((0,Ke.D)(n,t),e.dtype))}}const Ye={kernelName:s.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=Qe(e,t[1],s,D.EC(a,s.shape));return{x:()=>i.x()}}};var Ze=n(7201);const Je={kernelName:s.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.d)(e,(0,i.p)((0,q.b)(n,r),"float32")),b:()=>(0,o.d)(e,(0,i.p)((0,Ze.d)(n,r),"float32"))}}},et=(0,O.op)({maxPool3dGrad_:function(e,t,n,r,a,i,o){const l=(0,F._1)(e,"dy","maxPool3dGrad"),u=(0,F._1)(t,"input","maxPool3dGrad"),c=(0,F._1)(n,"output","maxPool3dGrad");let d=l,p=u,h=c,f=!1;4===u.rank&&(f=!0,d=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D.hu(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),D.hu(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),D.hu(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=o&&D.hu(D.GN(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:d,input:p,output:h},g={filterSize:r,strides:a,pad:i,dimRoundingMode:o},y=R.BV.runKernel(s.OU,m,g);return f?(0,x.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),tt={kernelName:s.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>et(e,r,a,s,i,o,l)}}},nt=(0,O.op)({maxPoolGrad_:function(e,t,n,r,a,i,o){const l=(0,F._1)(e,"dy","maxPoolGrad"),u=(0,F._1)(t,"input","maxPoolGrad"),c=(0,F._1)(n,"output","maxPoolGrad");D.hu(u.rank===l.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`)),D.hu(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),D.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=o&&D.hu(D.GN(i),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const d={dy:l,input:u,output:c},p={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return R.BV.runKernel(s.OV,d,p)}}),rt={kernelName:s.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>nt(e,r,a,s,i,o)}}};var at=n(326);const st={kernelName:s.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=D.EC(a,r.shape),i=(0,fe.kz)(r.shape,s)[1],l=D.NA(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,x.X)(e,t);return(0,c.h)((0,o.d)(n,(0,at.i)(r.shape,"float32")),l)}}}},it={kernelName:s.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=Qe(e,i,s,D.EC(a,s.shape));return{x:()=>o.x()}}},ot={kernelName:s.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,o.d)(e,(0,i.p)((0,X.z)(n,r),"float32")),b:()=>(0,o.d)(e,(0,i.p)((0,We.p)(n,r),"float32"))}}};var lt=n(1015);const ut={kernelName:s.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,lt.t)(e,s,r.shape)}}};var ct=n(6891);const dt={kernelName:s.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.$N)(n.shape,r.shape);return{a:()=>{const t=(0,b.RR)(n.shape,a);return t.length>0?(0,x.X)((0,v.S)(e,t),n.shape):e},b:()=>{const t=(0,o.d)(e,(0,d.W)((0,ct.G)((0,c.h)(n,r)))),s=(0,b.RR)(r.shape,a);return s.length>0?(0,x.X)((0,v.S)(t,s),r.shape):t}}}},pt={kernelName:s.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.$N)(n.shape,r.shape);return{a:()=>{const t=(0,o.d)(e,(0,i.p)(r,"float32")),s=(0,b.RR)(n.shape,a);return s.length>0?(0,x.X)((0,v.S)(t,s),n.shape):t},b:()=>{const t=(0,o.d)(e,(0,i.p)(n,"float32")),s=(0,b.RR)(r.shape,a);return s.length>0?(0,x.X)((0,v.S)(t,s),r.shape):t}}}},ht={kernelName:s.ku,gradFunc:e=>({x:()=>(0,d.W)(e)})};var ft=n(4731);const mt={kernelName:s.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,ft.l)(n.shape,"float32")}}},gt={kernelName:s.qW,gradFunc:e=>({x:()=>(0,S.P)(e)})};var yt=n(7537);const bt={kernelName:s.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,yt.H)(e,r).map((e=>()=>e))}},xt={kernelName:s.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,lt.t)(e,s,r.shape)}}};var vt=n(1750),wt=n(4260);const kt={kernelName:s.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,l=r,u=b.$N(s.shape,l.shape);return{a:()=>{const t=(0,i.p)(l,"float32");let n=(0,o.d)(e,(0,o.d)(t,(0,wt.s)(s,(0,m.l)(t,(0,p.i)(1)))));const r=b.RR(s.shape,u);return r.length>0&&(n=(0,v.S)(n,r)),(0,x.X)(n,s.shape)},b:()=>{const t=(0,We.p)(s,0),n=(0,Q.a)(t,(0,vt.c)(s),(0,S.P)(s));let r=(0,o.d)(e,(0,o.d)(a,n));const i=b.RR(l.shape,u);return i.length>0&&(r=(0,v.S)(r,i)),(0,x.X)(r,l.shape)}}}},St={kernelName:s.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,We.p)(n,0);return{x:()=>(0,Q.a)(a,e,(0,o.d)(e,r)),alpha:()=>{let t=(0,Q.a)(a,(0,S.P)(e),(0,o.d)(e,n));const s=(0,b.RR)(r.shape,e.shape);return s.length>0&&(t=(0,v.S)(t,s)),(0,x.X)(t,r.shape)}}}},Nt={kernelName:s.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.$N(n.shape,r.shape);return{a:()=>{const t=(0,c.h)(e,(0,i.p)(r,"float32")),s=b.RR(n.shape,a);return s.length>0?(0,x.X)((0,v.S)(t,s),n.shape):t},b:()=>{let t=(0,o.d)(e,(0,i.p)(n,"float32"));const s=b.RR(r.shape,a);s.length>0&&(t=(0,x.X)((0,v.S)(t,s),r.shape));const l=(0,f.h)(r);return(0,d.W)((0,c.h)(t,(0,i.p)(l,"float32")))}}}},It={kernelName:s.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,d.W)((0,f.h)(n)))}}},Tt={kernelName:s.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,o.d)((0,X.z)(n,6),(0,l.N)(n));return{x:()=>(0,o.d)(e,(0,i.p)(r,"float32"))}}},Ct={kernelName:s.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,i.p)((0,l.N)(n),"float32"))}}},Et={kernelName:s.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,x.X)(e,n.shape)}}},$t={kernelName:s._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.BV.runKernel(s.zb,a,n)}}},_t={kernelName:s.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>R.BV.runKernel(s.Hm,a,n)}}};var At=n(7789);const Rt={kernelName:s.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,D.EC)(r,e.shape);return{x:()=>(0,At.G)(e,a)}}},Ft={kernelName:s.e0,gradFunc:e=>({x:()=>(0,S.P)(e)})},Dt={kernelName:s.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.W)((0,c.h)(e,(0,o.d)((0,wt.s)(n,1.5),2)))}}};var Ot=n(3952);const Mt={kernelName:s.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.p)((0,S.P)(n),"float32"),t:()=>(0,o.d)(e,(0,i.p)(n,e.dtype)),e:()=>(0,o.d)(e,(0,i.p)((0,Ot.h)(n),e.dtype))}}};var zt=n(2821);const Lt={kernelName:s.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,We.p)(n,(0,p.i)(0)),r=(0,p.i)(zt.y),a=(0,p.i)(zt.$),s=(0,o.d)(e,a),l=(0,o.d)((0,o.d)(e,r),(0,Se.Q)((0,i.p)(n,"float32")));return(0,Q.a)(t,s,l)}}}},Bt={kernelName:s.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,o.d)(n,(0,m.l)((0,p.i)(1),n)))}}},Pt={kernelName:s.i5,gradFunc:e=>({x:()=>(0,S.P)(e)})};var Vt=n(2811);const Wt={kernelName:s.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,Vt.m)((0,i.p)(n,"float32")),e)}}};var Ut=n(3369);const Gt={kernelName:s.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,Ut.f)((0,i.p)(n,"float32")),e)}}};var Ht=n(3879),jt=n(84);const qt={kernelName:s.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=(0,jt.parseSliceParams)(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>(0,Ht.v)(e,u)}}},Xt={kernelName:s.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,o.d)(e,r);return{logits:()=>(0,m.l)(s,(0,o.d)((0,v.S)(s,[a],!0),r))}}};var Kt=n(9789);const Qt={kernelName:s.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,Kt.X)(n))}}};var Yt=n(9327);const Zt={kernelName:s.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>(0,Yt.E)(e,r,a)}}};var Jt=n(5307);const en={kernelName:s.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,Jt.z)(e,r)}}},tn={kernelName:s.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,o.d)((0,h._)((0,i.p)(n,"float32")),2))}}},nn={kernelName:s.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)(e,(0,o.d)((0,i.p)(n,"float32"),2))}}},rn={kernelName:s._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,p.i)(2);return{a:()=>(0,o.d)(e,(0,o.d)(a,(0,m.l)(n,r))),b:()=>(0,o.d)(e,(0,o.d)(a,(0,m.l)(r,n)))}}},an={kernelName:s.h8,gradFunc:e=>({x:()=>(0,S.P)(e)})},sn={kernelName:s.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=b.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=b.RR(n.shape,a);return r.length>0&&(t=(0,v.S)(t,r)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=b.RR(r.shape,a);return n.length>0&&(t=(0,v.S)(t,n)),(0,x.X)((0,d.W)(t),r.shape)}}}},on={kernelName:s.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,D.EC)(s,r.shape).forEach((e=>{a[e]=1}));const i=(0,x.X)(e,a),l=(0,o.d)(i,(0,at.i)(r.shape,"float32"));return{x:()=>l}}},ln={kernelName:s.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.h)(e,(0,f.h)((0,Vt.m)(n)))}}},un={kernelName:s.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,o.d)((0,m.l)((0,p.i)(1),(0,f.h)(n)),e)}}},cn={kernelName:s.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,S.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,C.I)(t,(0,lt.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,C.I)(t,(0,lt.t)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,C.I)(t,(0,lt.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,C.I)(t,(0,lt.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},dn={kernelName:s.G3,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=fe.LJ(a);return{x:()=>(0,ge.p)(e,s)}}};var pn=n(6279);const hn={kernelName:s.To,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,pn.k)(e,a)}}};var fn=n(86),mn=n(9690),gn=n(5792);const yn={kernelName:s.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,gn.g)(t,(0,S.P)(t)),r=(0,mn.I)(e,n);let a=(0,q.b)(t,(0,p.i)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=(0,fn.d)(a,e+1);a=(0,K.H)(a,(0,at.i)(r.shape,"bool"));const i=(0,S.P)(r);return(0,Q.a)(a,r,i)}(e,n)}}},bn={kernelName:s.Ru,gradFunc:e=>({x:()=>(0,S.P)(e)})};var xn=n(4346);const vn=[u,g,y,w,k,N,I,T,E,$,_,A,z,B,V,U,G,H,j,Y,Z,ee,ie,ae,ue,de,he,ye,ve,we,Nt,ke,Ne,Ie,Te,Ce,$e,Ee,Re,De,ze,Le,Be,Pe,Ve,Ue,Ge,He,je,Xe,Ye,Ye,Je,tt,rt,st,it,ot,ut,dt,pt,ht,mt,gt,bt,xt,xt,kt,St,It,Tt,Ct,Et,$t,_t,Rt,Ft,Dt,Mt,Lt,Bt,Pt,Wt,Gt,qt,Xt,Qt,Zt,Zt,en,en,tn,rn,nn,an,sn,on,ln,un,cn,dn,hn,yn,bn];for(const e of vn)(0,xn.Li)(e);var wn=n(6983),kn=n(6e3);(0,kn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,wn.W)(this)};var Sn=n(4941);(0,kn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Sn.K)(this)};var Nn=n(7839);(0,kn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Nn._)(this)},(0,kn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,C.I)(this,e)};var In=n(1199);(0,kn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,In.$)(this,e,t)};var Tn=n(6159);(0,kn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Tn.Y)(this,e,t)};var Cn=n(6540);(0,kn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Cn.N)(this,e)};var En=n(2237);(0,kn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,En.v)(this,e)},(0,kn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,D.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.X)(this,[])},(0,kn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)},(0,kn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,kn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,x.X)(this,[e,t])},(0,kn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n])},(0,kn.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,r])},(0,kn.t3)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,r,a])};var $n=n(9520);(0,kn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,$n.Z)(this)};var _n=n(9692);(0,kn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,_n.V)(this)};var An=n(5090);(0,kn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,An.z)(this)};var Rn=n(4265);(0,kn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Rn.f)(this,e)};var Fn=n(9984);(0,kn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Fn.C)(this)};var Dn=n(4614);(0,kn.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Dn.w)(this,e,t,n,r)},(0,kn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Yt.E)(this,e,t)};var On=n(4066);(0,kn.t3)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,On.t)(this,e,t,n,r,a)};var Mn=n(3024);(0,kn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Mn.U)(this,e)},(0,kn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)};var zn=n(5055);(0,kn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,zn.m)(this)};var Ln=n(486);(0,kn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Ln.i)(this,e,t)},(0,kn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof kn.es&&(e=[e]),(0,Jt.z)([this,...e],t)};var Bn=n(6086);(0,kn.t3)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Bn.P)(this,e,t,n,r,a,s)};var Pn=n(3028);(0,kn.t3)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Pn.b)(this,e,t,n,r,a)},(0,kn.t3)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,se.T)(this,e,t,n,r,a,s)},(0,kn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,Vt.m)(this)},(0,kn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Ut.f)(this)},(0,kn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,me.z)(this,e,t,n)};var Vn=n(9805);(0,kn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Vn.n)(this,e,t)};var Wn=n(5633);(0,kn.t3)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Wn.B)(this,e,t,n,r,a,s)};var Un=n(4113);(0,kn.t3)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Un.W)(this,e,t,n,r,a)};var Gn=n(7133);(0,kn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Gn.N)(this,e)},(0,kn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,c.h)(this,e)};var Hn=n(8159);(0,kn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Hn.A)(this,e)};var jn=n(9955);(0,kn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,jn.p)(this)},(0,kn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ke.D)(this,e)};var qn=n(8807);(0,kn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,qn.q)(this)},(0,kn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Se.Q)(this)},(0,kn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,fn.d)(this,e)};var Xn=n(714);(0,kn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Xn.t)(this)};var Kn=n(9208);(0,kn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Kn.k)(this)},(0,kn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,kn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,ct.G)(this)};var Qn=n(4308);(0,kn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,Qn.q)(this,e)},(0,kn.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,mn.I)(this,e,t)},(0,kn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,q.b)(this,e)},(0,kn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,We.p)(this,e)};var Yn=n(8279);(0,kn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Yn.S)(this)};var Zn=n(9961);(0,kn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Zn.w)(this)};var Jn=n(8164);(0,kn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Jn.x)(this)};var er=n(3145);(0,kn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,er.U)(this)};var tr=n(4191);(0,kn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,tr.i)(this)};var nr=n(5999);(0,kn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,nr.h)(this,e)},(0,kn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,X.z)(this,e)},(0,kn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,Ze.d)(this,e)};var rr=n(7352);(0,kn.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,rr.G)(this,e,t,n,r)};var ar=n(6341);(0,kn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,ar.e)(this)};var sr=n(8948);(0,kn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,sr.C)(this,e)};var ir=n(1859);(0,kn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,ir.l)(this,e,t)},(0,kn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,vt.c)(this)};var or=n(9649);(0,kn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,or.K)(this)},(0,kn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,K.H)(this,e)},(0,kn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Ot.h)(this)};var lr=n(8940);(0,kn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,lr.K)(this,e)};var ur=n(1940);(0,kn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,ur.e)(this,e)},(0,kn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,P.O)(this,e,t,n)};var cr=n(8881);(0,kn.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,cr._)(this,e,t,n,r)};var dr=n(7437);(0,kn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,dr.F)(this,e,t)},(0,kn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,gn.g)(this,e)};var pr=n(7104);(0,kn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,pr.J)(this,e,t)};var hr=n(5553);(0,kn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,hr.V)(this,e,t)};var fr=n(5874);(0,kn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,fr.L)(this,e)};var mr=n(8237);(0,kn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,mr.V)(this,e,t)};var gr=n(789);(0,kn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,gr.w)(this,e)},(0,kn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,o.d)(this,e)},(0,kn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,d.W)(this)};var yr=n(4581);(0,kn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,yr.K)(this,e,t,n)};var br=n(6568);(0,kn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,br.Q)(this,e)};var xr=n(2614);(0,kn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,xr.l)(this,e,t,n)};var vr=n(7145);(0,kn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,vr.J)(this)},(0,kn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Ht.v)(this,e,t)};var wr=n(6300);(0,kn.t3)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),(0,wr.d)(this,e,t,n,r,a)},(0,kn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,wt.s)(this,e)};var kr=n(8616);(0,kn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,kr.A)(this,e)};var Sr=n(833);(0,kn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Sr.W)(this,e,t)};var Nr=n(8550);(0,kn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Nr.M)(this)};var Ir=n(3697);(0,kn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Ir.U)(this)};var Tr=n(9298);(0,kn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Tr.b)(this)},(0,kn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,x.X)(this,e.shape)},(0,kn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,x.X)(this,e)};var Cr=n(58);(0,kn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Cr.I)(this,e,t,n)};var Er=n(1407);(0,kn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Er.j)(this,e,t,n)},(0,kn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,At.G)(this,e)};var $r=n(7664);(0,kn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,$r.Q)(this)};var _r=n(1684);(0,kn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,_r.N)(this)},(0,kn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,_e.b)(this)};var Ar=n(7770);(0,kn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,Ar.U)(this)};var Rr=n(5238);(0,kn.t3)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Rr.U)(this,e,t,n,r,a,s)},(0,kn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Kt.X)(this)};var Fr=n(6788);(0,kn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Fr.X)(this)},(0,kn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,ce.O)(this)},(0,kn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,pe.R)(this)},(0,kn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,lt.t)(this,e,t)};var Dr=n(6266);(0,kn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Dr.X)(this,e)};var Or=n(8019);(0,kn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Or.W)(this)},(0,kn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,W.f)(this,e,t)},(0,kn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,J.V)(this,e,t)},(0,kn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,h._)(this)},(0,kn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,f.h)(this)};var Mr=n(28);(0,kn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Mr.$)(this,e)};var zr=n(8312);(0,kn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,zr.L)(this,e)},(0,kn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof kn.es?[this,e]:[this,...e];return(0,pn.k)(n,t)},(0,kn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,l.N)(this,e)};var Lr=n(225);(0,kn.t3)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),(0,Lr.N)(this,e,t,n,r,a,s,i,o)},(0,kn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,m.l)(this,e)},(0,kn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,v.S)(this,e,t)};var Br=n(1148);(0,kn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Br.O)(this)};var Pr=n(1815);(0,kn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Pr.A)(this)},(0,kn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Ae.G)(this,e)},(0,kn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.p)(this,"bool")},(0,kn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.p)(this,"float32")},(0,kn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.p)(this,"int32")};var Vr=n(7972);(0,kn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Vr.h)(this,e,t)},(0,kn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ge.p)(this,e)};var Wr=n(4684);let Ur;function Gr(){return null==Ur&&(Ur=(0,a.backend)().epsilon()),Ur}(0,kn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Wr.T)(this,e)},(0,kn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Fe.p)(this,e,t)},(0,kn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,yt.H)(this,e)},(0,kn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Q.a)(e,this,t)},(0,kn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,S.P)(this)};class Hr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hr.prototype)}}class jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jr.prototype)}}class qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qr.prototype)}}class Xr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xr.prototype)}}class Kr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kr.prototype)}}function Qr(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Yr(e,t){if(!e)throw new Kr(t)}function Zr(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Jr(e){return 1===e.length?e[0]:e}function ea(e){return Array.isArray(e)?e:[e]}function ta(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function na(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let ra={};function aa(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function sa(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>sa(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?sa(t):e[n]=t.value)}}}function ia(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ra)s=ra[a];else if(s=t[a],null==s)throw new qr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new qr(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in ra?[o,l]=ra.className:i in t&&([o,l]=t[i]),null==o)throw new qr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(ra))e[t]=ra[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},ra);for(const e of Object.keys(n))ra[e]=n[e];sa(s.config);const r=l(o,s.config,n,a);return ra=Object.assign({},t),r}{const e=Object.assign({},ra);for(const e of Object.keys(n))ra[e]=n[e];const t=new o(s.config);return ra=Object.assign({},e),t}}}function oa(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function la(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ua(e){if(null==e)throw new qr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ca(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new qr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function da(e,t,n=0,r=1/0){return Yr(n>=0),Yr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function pa(e,t){Array.isArray(e)?(a.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>pa(e,`element ${n+1} of ${t}`)))):a.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ha(e)}.`))}function ha(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ha(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function fa(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function ma(e,t){return(0,a.tidy)((()=>a.sqrt(a.sum(a.mul(e,e),t,!0))))}class ga extends a.serialization.Serializable{getConfig(){return{}}}class ya extends ga{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>{const t=ma(e,this.axis),n=a.clipByValue(t,0,this.maxValue);return a.mul(e,a.div(n,a.add(Gr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ya.className="MaxNorm",a.serialization.registerClass(ya);class ba extends ga{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>a.div(e,a.add(Gr(),ma(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ba.className="UnitNorm",a.serialization.registerClass(ba);class xa extends ga{apply(e){return a.relu(e)}}xa.className="NonNeg",a.serialization.registerClass(xa);class va extends ga{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,a.tidy)((()=>{const t=ma(e,this.axis),n=a.add(a.mul(this.rate,a.clipByValue(t,this.minValue,this.maxValue)),a.mul(1-this.rate,t));return a.mul(e,a.div(n,a.add(Gr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}va.className="MinMaxNorm",a.serialization.registerClass(va);const wa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ka(e){return aa(e)}function Sa(e,t={}){return ia(e,a.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function Na(e){return null==e?null:"string"==typeof e?Sa({className:e in wa?wa[e]:e,config:{}}):e instanceof ga?e:Sa(e)}const Ia=["channelsFirst","channelsLast"],Ta=["nearest","bilinear"],Ca=["valid","same","causal"],Ea=["max","avg"],$a=["sum","mul","concat","ave"],_a=new Map;function Aa(e){ca(Ia,"DataFormat",e)}function Ra(e){ca(Ca,"PaddingMode",e)}function Fa(e){ca(Ea,"PoolMode",e)}const Da=[];function Oa(e,t){Da.push(e);try{const e=t();return Da.pop(),e}catch(e){throw Da.pop(),e}}function Ma(e){if(!Ba(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Da.length?"":Da.join("/")+"/")+e}function za(e){if(!Ba(e))throw new Error("Not a valid tensor name: '"+e+"'");_a.has(e)||_a.set(e,0);const t=_a.get(e);if(_a.set(e,_a.get(e)+1),t>0){const n=`${e}_${t}`;return _a.set(n,1),n}return e}const La=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ba(e){return!!e.match(La)}function Pa(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Va(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Wa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ua(e,t){if(t<e)throw new qr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ga(e,t){return a.cast(e,t)}function Ha(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),a.reshape(e,n)}function ja(e,t,n){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:return a.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return a.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return a.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return a.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return a.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new qr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qa(e,t,n){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:return a.slice2d(e,[0,t],[e.shape[0],n]);case 3:return a.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return a.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new qr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Xa(e,t,n,r){return(0,a.tidy)((()=>{switch(e.rank){case 1:return a.slice1d(e,t,n);case 2:switch(r){case 1:return ja(e,t,n);case 2:return qa(e,t,n);default:throw new qr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ja(e,t,n);case 2:return a.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qa(e,t,n);default:throw new qr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ja(e,t,n);case 2:return a.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return a.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qa(e,t,n);default:throw new qr(`The axis is not within the rank of the tensor ${r}`)}default:throw new qr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ka(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),a.concat(e,t)}function Qa(e,t){switch(e.rank){case 1:return a.concat1d([e,t]);case 2:return a.concat2d([e,t],0);case 3:return a.concat3d([e,t],0);case 4:return a.concat4d([e,t],0);default:throw new qr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ya(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new qr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return a.tile(e,t)}function Za(e,t=0,n=1,r,s){return a.randomNormal(e,t,n,r,s)}function Ja(e,t,n,r){if(e.rank<2||t.rank<2)throw new Xr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Xr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const s=!1,i=!1;return a.fused.matMul({a:e,b:t,transposeA:s,transposeB:i,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=a.reshape(e,[-1,i]);const o=t.shape.slice(),l=o.pop(),u=o.pop(),c=[...o,l],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=a.reshape(a.transpose(t,d),[u,-1]);const p=[...s,...c],h=!1,f=!1;return a.reshape(a.fused.matMul({a:e,b:t,transposeA:h,transposeB:f,bias:r?ns(e.rank,r,"channelsLast"):null,activation:n}),p)}}function es(e,t,n){return(0,a.tidy)((()=>(t=Array.isArray(t)?(0,a.tensor1d)(t,"int32"):a.cast(t,"int32"),a.gather(e,t,n))))}function ts(e){return a.mul(e,e)}function ns(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new qr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1,1,1]):a.reshape(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1,1]):a.reshape(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?a.reshape(t,[1,r[0],1]):a.reshape(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?a.reshape(t,[1,1,r[0]]):a.reshape(t,[1].concat(r))}else if(e<3)return t;throw new qr(`Unsupported input rank by biasAdd: ${t.rank}`)}function rs(e,t,n){return(0,a.tidy)((()=>(null==n&&(n="channelsLast"),Aa(n),a.add(e,ns(e.rank,t,n)))))}function as(e,t,n,r){return(0,a.tidy)((()=>a.dropout(e,t,n,r)))}function ss(e,t,n=!1){return n?e():t()}const is=["fanIn","fanOut","fanAvg"],os=["normal","uniform","truncatedNormal"];class ls extends a.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class us extends ls{apply(e,t){return(0,a.zeros)(e,t)}}us.className="Zeros",a.serialization.registerClass(us);class cs extends ls{apply(e,t){return(0,a.ones)(e,t)}}cs.className="Ones",a.serialization.registerClass(cs);class ds extends ls{constructor(e){if(super(),"object"!=typeof e)throw new qr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new qr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,a.tidy)((()=>(0,a.mul)((0,a.scalar)(this.value),(0,a.ones)(e,t))))}getConfig(){return{value:this.value}}}ds.className="Constant",a.serialization.registerClass(ds);class ps extends ls{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,a.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ps.className="RandomUniform",a.serialization.registerClass(ps);class hs extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`randomNormal does not support dType ${t}.`);return Za(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hs.className="RandomNormal",a.serialization.registerClass(hs);class fs extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`truncatedNormal does not support dType ${t}.`);return(0,a.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="TruncatedNormal",a.serialization.registerClass(fs);class ms extends ls{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,a.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new qr("Identity matrix initializer can only be used for 2D square matrices.");return(0,a.mul)(this.gain,(0,a.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}ms.className="Identity",a.serialization.registerClass(ms);class gs extends ls{constructor(e){if(super(),e.scale<0)throw new qr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ca(is,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ca(os,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Aa(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Pa(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Pa(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Pa(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Xr(`${this.getClassName()} does not support dType ${t}.`);return(0,a.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,a.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gs.className="VarianceScaling",a.serialization.registerClass(gs);class ys extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ys.className="GlorotUniform",a.serialization.registerClass(ys);class bs extends gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}bs.className="GlorotNormal",a.serialization.registerClass(bs);class xs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}xs.className="HeNormal",a.serialization.registerClass(xs);class vs extends gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}vs.className="HeUniform",a.serialization.registerClass(vs);class ws extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ws.className="LeCunNormal",a.serialization.registerClass(ws);class ks extends gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gs.className}}ks.className="LeCunNormal",a.serialization.registerClass(ks);class Ss extends ls{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Xr("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,a.tidy)((()=>{if(e.length<2)throw new Xr("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Za(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=a.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=(0,a.transpose)(n)),(0,a.mul)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ss.className="Orthogonal",a.serialization.registerClass(Ss);const Ns={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Is(e,t={}){return ia(e,a.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Ts(e){return aa(e)}function Cs(e){if("string"==typeof e){const t=e in Ns?Ns[e]:e;if("GlorotNormal"===t)return new bs;if("GlorotUniform"===t)return new ys;if("HeNormal"===t)return new xs;if("HeUniform"===t)return new vs;if("LeCunNormal"===t)return new ws;if("LeCunUniform"===t)return new ks;{const e={};return e.className=t,e.config={},Is(e)}}return e instanceof ls?e:Is(e)}let Es=0;function $s(){return Es++}const _s={};function As(e=""){return e in _s||(_s[e]=0),_s[e]+=1,e+_s[e].toString()}function Rs(e){return Array.isArray(e)&&Array.isArray(e[0])}function Fs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ds(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new qr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Os(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new qr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ms(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class zs{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=$s(),n=null==n?"Variable":n,this.originalName=Ma(n),this.name=za(this.originalName),this.trainable_=r,this.constraint=s,this.val=a.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ls(e){return e.map((e=>e.read()))}function Bs(e){e.forEach((e=>{e[0].write(e[1])}))}class Ps{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Vs{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=$s(),null!=s&&(this.originalName=Ma(s),this.name=za(this.originalName)),this.rank=t.length}}let Ws=0;class Us{constructor(e,t){this.callArgs=t,this.id=Ws++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Gs=0;class Hs extends a.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Gs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ta(e)+"_"+As(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new jr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new qr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Jr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Jr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Hr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Hr(`Layer ${this.name} is not connected, no input to return.`);return Jr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Hr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Hr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Jr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ea(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ea(this.inputSpec);if(e.length!==t.length)throw new qr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new qr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ea(e);let r=!0;for(const e of n)if(!(e instanceof Vs)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Vs){a=!1;break}if(r===a)throw new qr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Oa(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ea(e))t.push(n.shape);this.build(Jr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ea(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Jr(s),null!=this.activityRegularizer)throw new Xr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ea(e);const t=[];for(const n of e)t.push(n.shape);return Jr(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Vs(s,n,this,ea(e),t,this.name,r))):new Vs(s,r,this,ea(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Xr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Hr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Hr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new jr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ms(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ls(e?this.trainableWeights:this.weights)}setWeights(e){(0,a.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new qr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ls(t);for(let s=0;s<r.length;++s){const i=r[s],o=t[s],l=e[s];if(!a.util.arraysEqual(i.shape,l.shape))throw new qr(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}Bs(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new qr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Cs("zeros"));const o=r.apply(t,n),l=new zs(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ea(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ea(e);t=ea(t),n=ea(n),r=ea(r),a=Fs(a),s=Fs(s);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Us({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function js(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=js(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class qs extends Hs{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:As("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new qr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new qr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new qr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Vs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new qr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Xs(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,a.dispose)(r)}}function Ks(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Qs;qs.className="InputLayer",a.serialization.registerClass(qs),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Qs||(Qs={}));class Ys{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Zs{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Js extends Ys{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=(0,a.tidy)((()=>(0,a.add)(this.totals[e],(0,a.mul)(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,a.tidy)((()=>{const n=(0,a.mul)((0,a.div)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,a.keep)(t[e])})))}}class ei extends Ys{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class ti extends Ys{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=a.util.now();return(...s)=>{const i=a.util.now();return i-r<t||(r=i,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Xs(n),r.push(this.yield(e,t,n))),r.push((0,a.nextFrame)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Xs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Xs(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,a.nextFrame)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Xs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Xs(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,a.nextFrame)()):a.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Xs(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Xs(e),await this.trainEnd(e))}}function ni(e,t){return null==e&&(e={}),e instanceof Ys?[e]:Array.isArray(e)&&e[0]instanceof Ys?e:ea(e).map((e=>new ti(e,t)))}class ri{constructor(){}static registerCallbackConstructor(e,t){a.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ri.checkForDuplicate(t),null==ri.constructors[e]&&(ri.constructors[e]=[]),ri.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ri.constructors)ri.constructors[+t].forEach((t=>{if(t===e)throw new qr("Duplicate callback constructor.")}))}static clear(){ri.constructors={}}static createCallbacks(e){const t=[];for(const n in ri.constructors){const r=+n;e>=r&&t.push(...ri.constructors[r])}return t.map((e=>new e))}}function ai(e,t,n,r,a,s,i,o,l){const u=new ei,c=[new Js,...ri.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new Zs(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function si(e,t={},n=!1){return ia(e,a.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function ii(e,t){return(0,a.tidy)((()=>{"float32"!==e.dtype&&(e=a.cast(e,"float32"));const n=a.sum(ts(e),t,!0),r=a.fill(n.shape,Gr()),s=a.sqrt(a.maximum(n,r));return a.div(e,s)}))}function oi(e,t){return(0,a.tidy)((()=>a.mean(ts(a.sub(t,e)),-1)))}function li(e,t){return(0,a.tidy)((()=>a.mean(a.abs(a.sub(t,e)),-1)))}function ui(e,t){return(0,a.tidy)((()=>{const n=a.sub(e,t),r=a.clipByValue(a.abs(e),Gr(),Number.MAX_VALUE),s=a.abs(a.div(n,r));return a.mul(100,a.mean(s,-1))}))}function ci(e,t,n=!1){return(0,a.tidy)((()=>{if(n)t=a.softmax(t);else{const e=a.sum(t,t.shape.length-1,!0);t=a.div(t,e)}return t=a.clipByValue(t,Gr(),1-Gr()),a.neg(a.sum(a.mul(a.cast(e,"float32"),a.log(t)),t.shape.length-1))}))}function di(e,t,n=!1){return(0,a.tidy)((()=>{const r=a.cast(a.floor(function(e){const t=[Pa(e.shape)];return a.reshape(e,t)}(e)),"int32"),s=(t=a.clipByValue(t,Gr(),1-Gr())).shape;return ci(a.reshape(a.oneHot(r,s[s.length-1]),s),t,n)}))}function pi(e,t){return(0,a.tidy)((()=>{let n;return n=a.clipByValue(t,Gr(),1-Gr()),n=a.log(a.div(n,a.sub(1,n))),a.mean(function(e,t){if(!a.util.arraysEqual(e.shape,t.shape))throw new qr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,a.tidy)((()=>{const n=a.relu(t),r=a.neg(a.abs(t));return a.add(a.sub(n,a.mul(t,e)),a.log1p(a.exp(r)))}))}(e,n),-1)}))}function hi(e,t){return(0,a.tidy)((()=>{const n=ii(e,-1),r=ii(t,-1),s=a.mul(n,r);return a.neg(a.sum(s,-1))}))}ri.constructors={};const fi={meanSquaredError:oi,meanAbsoluteError:li,meanAbsolutePercentageError:ui,meanSquaredLogarithmicError:function(e,t){return(0,a.tidy)((()=>{const n=a.clipByValue(t,Gr(),Number.MAX_VALUE),r=a.log(a.add(1,n)),s=a.clipByValue(e,Gr(),Number.MAX_VALUE),i=a.log(a.add(1,s));return a.mean(ts(a.sub(r,i)),-1)}))},squaredHinge:function(e,t){return(0,a.tidy)((()=>{const n=a.maximum(0,a.sub(1,a.mul(e,t)));return a.mean(ts(n),-1)}))},hinge:function(e,t){return(0,a.tidy)((()=>{const n=a.maximum(0,a.sub(1,a.mul(e,t)));return a.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,a.tidy)((()=>{const n=a.sum(a.mul(e,t),-1),r=a.max(a.mul(a.sub(1,e),t),-1);return a.maximum(0,a.add(1,a.sub(r,n)))}))},logcosh:function(e,t){return(0,a.tidy)((()=>{const n=Math.log(2),r=a.sub(t,e),s=a.sub(a.add(r,a.softplus(a.mul(-2,r))),n);return a.mean(s,-1)}))},categoricalCrossentropy:ci,sparseCategoricalCrossentropy:di,binaryCrossentropy:pi,kullbackLeiblerDivergence:function(e,t){return(0,a.tidy)((()=>{const n=a.clipByValue(e,Gr(),1),r=a.clipByValue(t,Gr(),1);return a.sum(a.mul(e,a.log(a.div(n,r))),-1)}))},poisson:function(e,t){return(0,a.tidy)((()=>{const n=a.log(a.add(Gr(),t));return a.mean(a.sub(t,a.mul(e,n)),-1)}))},cosineProximity:hi};function mi(e){if("string"==typeof e){if(e in fi)return fi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new qr(t)}return e}function gi(e,t){return(0,a.tidy)((()=>{const n=a.mul(.5,a.onesLike(t)),r=Ga(a.greater(t,n),e.dtype);return a.mean(a.equal(e,r),-1)}))}function yi(e,t){return(0,a.tidy)((()=>Ga(a.equal(a.argMax(e,-1),a.argMax(t,-1)),"float32")))}function bi(e,t){return pi(e,t)}function xi(e,t){return e.rank===t.rank&&(e=a.squeeze(e,[e.rank-1])),(t=a.argMax(t,-1)).dtype!==e.dtype&&(t=a.cast(t,e.dtype)),a.cast(a.equal(e,t),"float32")}const vi=ci,wi=di,ki={binaryAccuracy:gi,categoricalAccuracy:yi,precision:function(e,t){return(0,a.tidy)((()=>{const n=function(e,t){return(0,a.tidy)((()=>a.cast(a.sum(a.logicalAnd(a.equal(e,1),a.equal(t,1))),"float32")))}(e,t),r=function(e,t){return(0,a.tidy)((()=>a.cast(a.sum(a.logicalAnd(a.equal(e,0),a.equal(t,1))),"float32")))}(e,t),s=a.add(n,r);return a.cast(a.where(a.greater(s,0),a.div(n,s),0),"float32")}))},categoricalCrossentropy:vi,sparseCategoricalCrossentropy:wi,mse:oi,MSE:oi,mae:li,MAE:li,mape:ui,MAPE:ui,cosine:hi};function Si(e){if("string"==typeof e&&e in ki)return ki[e];if("string"!=typeof e&&null!=e)return e;throw new qr(`Unknown metric ${e}`)}function Ni(e){if(Yr(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(fi))if(fi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ki))if(ki[n]===e){t=n;break}return void 0!==t?t:e.name}}function Ii(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ti(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ti(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Ti(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ti(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ci(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ei(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ci([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function $i(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),l=0===s.length?"":s[0];Ci([`${i} (${o})`,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)Ci(["","","",s[e]],t,r)}function _i(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Ai(e,t){if(null===e)return null;if("string"==typeof e)return na(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_i(t,a,r)?n.push(r):n.push(Ai(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=na(n);t[e]=Ai(r,e)}}return t}}function Ri(e,t){if(null==e)return null;if("string"==typeof e)return ta(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_i(t,a,r)?n.push(r):n.push(Ri(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[ta(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ri(r,n):r}return t}}class Fi{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fi)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new qr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,a.cast)(t,e.dtype)}catch(n){throw new qr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Vs){if(null==this.id2Value[e.id])throw new qr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new qr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Vs){if(null==this.id2Value[e.id])throw new qr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new qr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,a.dispose)(this.id2Mask)}}const Di={},Oi={};function Mi(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map((e=>e.name)),u=[],c=t.names();for(const e of l)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=l.join(",")+"|"+t.names().join(",");let p,h;if(null==Di[d]){const e=function(e,t){a.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Li(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Li(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:zi(r)}}(o,t);p=e.sorted,h=e.recipientCounts,Di[d]=p,Oi[d]=h}p=Di[d],h={},s||Object.assign(h,Oi[d]);const f=new Fi(t);for(let e=0;e<p.length;++e){if(null!=r){const e=(0,a.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=p[e],o=i.sourceLayer;if(o instanceof qs)continue;const c=[],d=[],m=[];let g=!1;for(const e of i.inputs){const n=f.getValue(e),r=f.getMask(e);c.push(n),d.push(r),null!=r&&(g=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==l.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=d[0]);const y=ea(o.apply(c,n));let b=null;o.supportsMasking&&(b=o.computeMask(c,d));const x=Bi(i),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],y[e],Array.isArray(b)?b[0]:b);const t=l.indexOf(v[e].name);-1!==t&&(u[t]=y[e])}s||(0,a.dispose)(m)}return f.disposeMasks(),i?u:u[0]}function zi(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Li(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Bi(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Pi extends Hs{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=As(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],la(this.inputs).length!==this.inputs.length)throw new qr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);la(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Yr(0===n,"input layer has >1 nodes"),Yr(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof qs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{null!=r&&null!=a&&null!=l||(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new jr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Pi.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(oa);this.layers=[];for(const e of h){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Pi&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,h=Object.keys(d).map((e=>parseInt(e,10))).sort(oa);const f=this.inputs.slice(),m=[];for(const e of h)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new jr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new jr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new qr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new qr(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new qr(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new qr(`${e.length} of ${r} weights are not set: ${e}`)}Bs(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.8.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ri(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,a.tidy)((()=>{e=ea(e);const n=new Fi;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Mi(this.outputs,n,t)}))}computeMask(e,t){return(0,a.tidy)((()=>{let n;return e=ea(e),n=null==t?Qr(null,e.length):ea(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Fs(e);if(t.length!==this.inputLayers.length)throw new qr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(oa);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Fs(t.computeOutputShape(Jr(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Yr(t in n),a.push(n[t])}return Jr(a)}runInternalGraph(e,t){null==t&&(t=Qr(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(oa);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),o=ea(t.call(e,u)),l=ea(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ea(t.call(r,u)),l=ea(t.computeMask(r,i));if(t.activityRegularizer)throw new Xr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Yr(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Pi?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Pi.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new qr(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new qr("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new qr(`No such layer: ${e}`)}calculateLosses(){return(0,a.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Pi.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Pi.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Pi.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Pi.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Pi.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=l)return void i(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(Jr(n),r)}function l(e){const n=e.name,s=si(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new qr(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!ua(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],p=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],r=e[2];Yr(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Yr(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new qr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,a.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Vi(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Wi(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,a.tidy)((()=>{if(1===e.shape.length)return(0,a.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,a.argMax)(e,t)}if(1===e.shape[1])return(0,a.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,a.dispose)(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),(0,a.tensor1d)(s,"float32")}return null}function Ui(e,t){return(0,a.mul)(e,t)}function Gi(e,t){let n,r;const s=t;n=s.xs,r=s.ys,a.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Hi("input",e.inputNames,n),o=Hi("output",e.outputNames,r),l=i[0].shape[0];a.util.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),a.util.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)a.util.assert(i[t].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)a.util.assert(o[t].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function Hi(e,t,n){if(n instanceof a.Tensor)return[n];if(Array.isArray(n))return a.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new qr(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function ji(e){return"function"==typeof e.iterator}function qi(e){a.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Xi(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ja(e,t,n-t))):ja(e,t,n-t)}function Ki(e,t){return a.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>Ki(e,t))):es(e,"int32"===t.dtype?t:a.cast(t,"int32"))))}function Qi(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Yi(e){const t=[];e instanceof a.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Ha(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Zi(e,t){if(null==e)return;const n=[];if(t instanceof a.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof a.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ji(e){return Array.isArray(e)}function eo(e){return!function(e){return e instanceof a.Tensor}(e)&&!Ji(e)}function to(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ji(e)&&e.length>0)t=!0;else if(eo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new qr(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(eo(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new qr(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Ji(e)){if((e=e).length!==t.length)throw new qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new qr(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Yi(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new qr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],l=n[e][s];if(null!=l&&l>=0&&o!==l)throw new qr(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function no(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new qr(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new qr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new qr(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ro extends Pi{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new qr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ci(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Ei(o[e],n,r):$i(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Ms(e.collectedTrainableWeights):Ms(e.trainableWeights),t}(e),u=Ms(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>a.train.adagrad(.01),Adadelta:()=>a.train.adadelta(1,.95,Gr()),Adam:()=>a.train.adam(.001,.9,.999,Gr()),Adamax:()=>a.train.adamax(.002,.9,.999,Gr(),0),RMSProp:()=>a.train.rmsprop(.001,.9,0,Gr()),SGD:()=>a.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new qr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof a.Optimizer))throw new qr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new qr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>mi(e)))}else{const n=mi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new qr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(mi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Oa("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Oa("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===pi?-1!==["accuracy","acc"].indexOf(i)?r=gi:-1!==["crossentropy","ce"].indexOf(i)&&(r=bi):this.lossFunctions[e]===di?-1!==["accuracy","acc"].indexOf(i)?r=xi:-1!==["crossentropy","ce"].indexOf(i)&&(r=wi):-1!==["accuracy","acc"].indexOf(i)?r=yi:-1!==["crossentropy","ce"].indexOf(i)&&(r=vi),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Si(i);a=e,n=""+Ni(i)}let t;Oa(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;qi(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Jr(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Zi(a[0],e),Zi(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new Xr("Verbose mode is not implemented yet.");a.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let l=0,u=0;for(;!r||u<n.batches;){const t=await o.next();if(i=a.tidy((()=>{if(t.value){const{xs:n,ys:r}=Gi(e,t.value),o=n.concat(r),c=a.tidy((()=>s(o)));if(a.dispose(o),0===u)for(let e=0;e<c.length;++e)i.push((0,a.scalar)(0));const d=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=a.tidy((()=>a.add(i[e],a.mul(d,t)))),u>0&&a.dispose(n)}a.dispose(c),l+=d,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=a.div(i[e],l),a.dispose(t)}return Jr(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new qr(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new qr(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new qr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new Fi;if(e instanceof a.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new qr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new qr(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const o=Mi(s,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Qr(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new qr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return a.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new Xr("Verbose predictLoop() is not implemented yet.");const s=Qi(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)a.tidy((()=>{const n=s[t][0],r=s[t][1],a=Xi(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Fi(i);return Mi(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return Jr(i.map((e=>a.concat(e,0))))}))}predict(e,t={}){const n=Yi(e);no(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return qi(r),this.predictLoop(n,r)}finally{Zi(n,e)}}predictOnBatch(e){no(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new jr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===di?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=la(e.map((e=>e.shape[0])));r.sort();const s=la(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new qr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new qr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!a.util.arraysEqual(r,s))throw new qr(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=to(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=to(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[oi,pi,ci];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===ci&&1===s.shape[s.shape.length-1])throw new qr(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new qr(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new qr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Vi(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Wi(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return a.tidy((()=>{const i=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Xr("Verbose mode is not implemented yet.");if(null!=s)throw new Xr("steps mode in testLoop() is not implemented yet");{const r=Qi(i,n),s=(0,a.tensor1d)(Ua(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],l=r[n][1],u=ja(s,i,l-i),c=Ki(t,u),d=e(c);if(0===n)for(let e=0;e<d.length;++e)o.push((0,a.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];o[e]=a.add(o[e],a.mul(l-i,t))}}for(let e=0;e<o.length;++e)o[e]=a.div(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Zr(e,r)>1&&(a+=`_${Zr(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Fi(e),l=Mi(this.outputs,o,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],l[e]);null!=s[e]&&(n=Ui(n,s[e]));const i=a.mean(n);t.push(i),u=0===e?n:a.add(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=a.mean(t(r[s],l[s]))}a.keep(n),i.push(n)}return u=a.mean(u),this.calculateLosses().forEach((e=>{u=a.add(u,e)})),u}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>a.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const o=new Fi(i),l=Mi(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=a.mean(r(s[e],l[e]));n=0===e?i:a.add(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=a.mean(n(s[r],l[r]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,l,u,c,d;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;qi(p);const h=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,p);s=f[0],i=f[1],d=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Xr("validationData including sample weights is not supported yet."):new qr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(o,l,null,null,t,p);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];u=Xi(s,e,t),s=Xi(s,0,e),c=Xi(i,e,t),i=Xi(i,0,e),m=u.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(i).concat(d);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=ni(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,i,o,l,u,c,d,p,h,f,m){null==s&&(s=32),null==i&&(i=1),null==d&&(d=!0),null==h&&(h=0);let g=!1;null!=u&&null!=c&&(g=!0);const y=e.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=Ua(0,y)),null==o&&(o=1);const{callbackList:x,history:v}=ai(l,o,i,h,y,f,s,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let o=h;o<i;++o){await x.onEpochBegin(o);const i={};{if("batch"===d)throw new Xr("batch shuffling is not implemneted yet");d&&a.util.shuffle(b);const o=(0,a.tensor1d)(b),l=Qi(y,s);for(let d=0;d<l.length;++d){const p={};if(await x.onBatchBegin(d,p),a.tidy((()=>{const h=l[d][0],f=l[d][1],m=ja(o,h,f-h);p.batch=d,p.size=f-h;const y=Ki(n,m),b=t(y);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];p[t]=n,a.keep(n)}if(d===l.length-1&&g){const t=e.testLoop(u,c,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];a.keep(s),i["val_"+n]=s}}})),await x.onBatchEnd(d,p),Ks(p),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,p,r.epochs,r.verbose,k,v,m,r.shuffle,w,r.initialEpoch,null)}finally{e.isTraining=!1,Zi(s,t),Zi(i,n),Zi(u,o),Zi(c,l),null!=d&&a.dispose(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(a.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),a.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),a.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),a.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),a.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(ji(n.validationData))a.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Xr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const d=ni(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:h,history:f}=ai(d,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,c);h.setModel(e),e.history=f,await h.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const c={};await h.onEpochBegin(m);let d=0,p=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Gi(e,t.value),i={};i.batch=p,i.size=r[0].shape[0],await h.onBatchBegin(p,i);const o=[];if(null!=n.classWeight){const t=Vi(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Wi(s[e],null,t[e]))}const c=r.concat(s).concat(o),f=l(c);a.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];i[t]=n,a.keep(n)}await h.onBatchEnd(p,i),Ks(i),p++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(s){let t;t=ji(n.validationData)?ea(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ea(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,c),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const e of i){const t=await e.data();o.push(t[0])}return a.dispose(i),Jr(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=a.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-a.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ta(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ta(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ta(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ta(Ni(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ta(Ni(e))));{const e={};for(const t in this.metrics)e[t]=ta(Ni(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=si(Ai(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=na(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>na(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=na(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>na(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=na(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=a.io.getSaveHandlers(e);if(0===t.length)throw new qr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new qr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new qr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.8.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await a.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=a.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ii(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ii(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ro.className="Model",a.serialization.registerClass(ro);class ao extends ro{}ao.className="Functional",a.serialization.registerClass(ao);class so extends ro{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:As("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new qr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof so||e instanceof ro;let n;if(t){if(n=e,1!==n.outputs.length)throw new qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new qr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new qr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new qs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new qr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=js(this.outputs[0])}this.inboundNodes=[],new Us({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Os(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ro({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new jr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new qr("Legacy serialization format not supported yet.");s=t}else a.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof so))throw new Xr(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of s){const t=si(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new qr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new qr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}so.className="Sequential",a.serialization.registerClass(so);class io extends a.serialization.Serializable{getConfig(){return{}}}class oo extends io{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Xr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return a.elu(e)}(e,t)}}oo.className="elu",a.serialization.registerClass(oo);class lo extends io{apply(e){return a.selu(e)}}lo.className="selu",a.serialization.registerClass(lo);class uo extends io{apply(e){return a.relu(e)}}uo.className="relu",a.serialization.registerClass(uo);class co extends io{apply(e){return(0,a.tidy)((()=>a.minimum(6,a.relu(e))))}}co.className="relu6",a.serialization.registerClass(co);class po extends io{apply(e){return e}}po.className="linear",a.serialization.registerClass(po);class ho extends io{apply(e){return a.sigmoid(e)}}ho.className="sigmoid",a.serialization.registerClass(ho);class fo extends io{apply(e){return function(e){return(0,a.tidy)((()=>{const t=a.add(.5,a.mul(.2,e));return a.clipByValue(t,0,1)}))}(e)}}fo.className="hardSigmoid",a.serialization.registerClass(fo);class mo extends io{apply(e){return a.softplus(e)}}mo.className="softplus",a.serialization.registerClass(mo);class go extends io{apply(e){return function(e){return(0,a.tidy)((()=>a.div(e,a.add(a.abs(e),1))))}(e)}}go.className="softsign",a.serialization.registerClass(go);class yo extends io{apply(e){return a.tanh(e)}}yo.className="tanh",a.serialization.registerClass(yo);class bo extends io{apply(e,t=-1){return a.softmax(e,t)}}bo.className="softmax",a.serialization.registerClass(bo);class xo extends io{apply(e,t=-1){return a.logSoftmax(e,t)}}xo.className="logSoftmax",a.serialization.registerClass(xo);class vo extends io{apply(e,t=1){return(0,a.tidy)((()=>a.mul(a.sigmoid(a.mul(e,t)),e)))}}vo.className="swish",a.serialization.registerClass(vo);class wo extends io{apply(e){return(0,a.tidy)((()=>a.mul(e,a.tanh(a.softplus(e)))))}}function ko(e){return e.getClassName()}function So(e,t={}){return ia(e,a.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function No(e){if(null==e){return So({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},So(t)}return e instanceof io?e:So(e)}wo.className="mish",a.serialization.registerClass(wo);class Io extends a.serialization.Serializable{}class To extends Io{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,a.tidy)((()=>{let t=(0,a.zeros)([1]);return this.hasL1&&(t=(0,a.add)(t,(0,a.sum)(a.mul(this.l1,(0,a.abs)(e))))),this.hasL2&&(t=(0,a.add)(t,(0,a.sum)(a.mul(this.l2,ts(e))))),a.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}To.className="L1L2",a.serialization.registerClass(To);const Co={l1l2:"L1L2"};function Eo(e){return aa(e)}function $o(e,t={}){return ia(e,a.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function _o(e){return null==e?null:"string"==typeof e?$o({className:e in Co?Co[e]:e,config:{}}):e instanceof Io?e:$o(e)}class Ao extends Hs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ds(e);let n=(0,a.relu)(e);return null!=this.maxValue&&(n=(0,a.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ao.className="ReLU",a.serialization.registerClass(Ao);class Ro extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ds(e);return(0,a.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ro.className="LeakyReLU",a.serialization.registerClass(Ro);class Fo extends Hs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_o(e.alphaRegularizer),this.alphaConstraint=Na(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new qr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Os(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ps({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ds(e),(0,a.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ts(this.alphaInitializer),alphaRegularizer:Eo(this.alphaRegularizer),alphaConstraint:ka(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Fo.className="PReLU",a.serialization.registerClass(Fo);class Do extends Hs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Xr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ds(e);return(0,a.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Do.className="ELU",a.serialization.registerClass(Do);class Oo extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ds(e);return(0,a.mul)(n,(0,a.cast)((0,a.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Oo.className="ThresholdedReLU",a.serialization.registerClass(Oo);class Mo extends Hs{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new bo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ds(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function zo(e,t,n){if("number"==typeof e)return Qr(e,t);if(e.length!==t)throw new qr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new qr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Lo(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Bo(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Wa([n-t,0]);else{if("same"!==r)throw new qr(`Unsupport padding mode: ${r}.`);e*=t}return e}function Po(e,t){return(0,a.tidy)((()=>(Aa(t),"channelsFirst"===t?a.transpose(e,[0,2,3,1]):e)))}function Vo(e,t){return(0,a.tidy)((()=>(Aa(t),"channelsFirst"===t?a.transpose(e,[0,2,3,4,1]):e)))}function Wo(e,t,n,r=[1,1],s="valid",i,o,l=null){return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Aa(i),3!==e.rank&&4!==e.rank)throw new qr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new qr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Po(e,i);if("causal"===s)throw new Xr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=a.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(u=a.transpose(u,[0,3,1,2])),u}))}Mo.className="Softmax",a.serialization.registerClass(Mo);class Uo extends Hs{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Uo.verifyArgs(t),this.rank=e,pa(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Xr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zo(t.kernelSize,e,"kernelSize"),this.strides=zo(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ra(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Aa(this.dataFormat),this.activation=No(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Na(t.biasConstraint),this.biasRegularizer=_o(t.biasRegularizer),this.activityRegularizer=_o(t.activityRegularizer),this.dilationRate=zo(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Yr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!da(e.kernelSize,"number",1,3))throw new qr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ko(this.activation),useBias:this.useBias,biasInitializer:Ts(this.biasInitializer),biasRegularizer:Eo(this.biasRegularizer),activityRegularizer:Eo(this.activityRegularizer),biasConstraint:ka(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Go extends Uo{constructor(e,t){super(e,t),this.kernel=null,Go.verifyArgs(t),this.filters=t.filters,pa(this.filters,"filters"),this.kernelInitializer=Cs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Na(t.kernelConstraint),this.kernelRegularizer=_o(t.kernelRegularizer)}build(e){e=Os(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t;e=Ds(e);const n=null==this.bias?null:this.bias.read(),r=fa(this.activation.getClassName());if(null!=r&&2===this.rank)t=Wo(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",i,o=1){return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Aa(i),3!==e.shape.length)throw new qr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new qr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new qr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=a.transpose(e,[0,2,1])),"causal"===s)throw new Xr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=a.conv1d(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(l=rs(l,n)),l}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Wo(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Xr("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",i,o){return(0,a.tidy)((()=>{if(null==i&&(i="channelsLast"),Aa(i),4!==e.rank&&5!==e.rank)throw new qr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new qr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let l=Vo(e,i);if("causal"===s)throw new Xr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=a.conv3d(l,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(l=rs(l,n)),"channelsFirst"===i&&(l=a.transpose(l,[0,4,1,2,3])),l}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Os(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Lo(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ts(this.kernelInitializer),kernelRegularizer:Eo(this.kernelRegularizer),kernelConstraint:ka(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new qr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ho extends Go{constructor(e){super(2,e),Ho.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!da(e.kernelSize,"number",1,2))throw new qr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ho.className="Conv2D",a.serialization.registerClass(Ho);class jo extends Go{constructor(e){super(3,e),jo.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new qr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jo.className="Conv3D",a.serialization.registerClass(jo);class qo extends Ho{constructor(e){if(super(e),this.inputSpec=[new Ps({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Os(e)).length)throw new qr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ps({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return a.tidy((()=>{let t=Ds(e);if(4!==t.shape.length)throw new qr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],l=n[i],u=this.kernelSize[0],c=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=[r,Bo(o,d,u,this.padding),Bo(l,p,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.transpose(t,[0,2,3,1]));let f=a.conv2dTranspose(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.transpose(f,[0,3,1,2])),null!=this.bias&&(f=rs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Os(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Bo(t[r],o,s,this.padding),t[a]=Bo(t[a],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qo.className="Conv2DTranspose",a.serialization.registerClass(qo);class Xo extends jo{constructor(e){if(super(e),this.inputSpec=[new Ps({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new qr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Os(e)).length)throw new qr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new qr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ps({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return a.tidy((()=>{let t=Ds(e);if(5!==t.shape.length)throw new qr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,o;"channelsFirst"===this.dataFormat?(o=2,s=3,i=4):(o=1,s=2,i=3);const l=n[o],u=n[s],c=n[i],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[r,Bo(l,f,d,this.padding),Bo(u,m,p,this.padding),Bo(c,g,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=a.transpose(t,[0,2,3,4,1]));let b=a.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=a.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=rs(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Os(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Bo(t[r],u,i,this.padding),t[a]=Bo(t[a],c,o,this.padding),t[s]=Bo(t[s],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Xo.className="Conv3DTranspose",a.serialization.registerClass(Xo);class Ko extends Go{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new qr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new qr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new qr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_o(t.depthwiseRegularizer),this.depthwiseConstraint=Na(t.depthwiseConstraint),this.pointwiseInitializer=Cs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_o(t.pointwiseRegularizer),this.pointwiseConstraint=Na(t.pointwiseConstraint)}build(e){if((e=Os(e)).length<this.rank+2)throw new qr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new qr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ps({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t;if(e=Ds(e),1===this.rank)throw new Xr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=a.transpose(e,[0,2,3,1])),t=a.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=a.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ts(this.depthwiseInitializer),e.pointwiseInitializer=Ts(this.pointwiseInitializer),e.depthwiseRegularizer=Eo(this.depthwiseRegularizer),e.pointwiseRegularizer=Eo(this.pointwiseRegularizer),e.depthwiseConstraint=ka(this.depthwiseConstraint),e.pointwiseConstraint=ka(this.pointwiseConstraint),e}}Ko.className="SeparableConv";class Qo extends Ko{constructor(e){super(2,e)}}Qo.className="SeparableConv2D",a.serialization.registerClass(Qo);class Yo extends Go{constructor(e){super(1,e),Yo.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!da(e.kernelSize,"number",1,1))throw new qr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Yo.className="Conv1D",a.serialization.registerClass(Yo);class Zo extends Hs{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,a.tidy)((()=>{if(e=Ds(e),"channelsLast"===this.dataFormat){const t=Xa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Xa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Zo.className="Cropping2D",a.serialization.registerClass(Zo);class Jo extends Hs{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Aa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ca(Ta,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return a.tidy((()=>{let t=Ds(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=a.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?a.image.resizeNearestNeighbor(t,[e,r]):a.image.resizeBilinear(t,[e,r]);return a.transpose(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?a.image.resizeNearestNeighbor(t,[e,r]):a.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Jo.className="UpSampling2D",a.serialization.registerClass(Jo);class el extends Uo{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Na(e.depthwiseConstraint),this.depthwiseRegularizer=_o(e.depthwiseRegularizer)}build(e){if((e=Os(e)).length<4)throw new qr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new qr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{let t=function(e,t,n=[1,1],r="valid",s,i){return(0,a.tidy)((()=>{null==s&&(s="channelsLast"),Aa(s);let o=Po(e,s);if(4!==e.rank)throw new qr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new qr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=a.depthwiseConv2d(o,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o}))}(e=Ds(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Os(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Lo(t,this.kernelSize[0],this.padding,this.strides[0]),s=Lo(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ts(this.depthwiseInitializer),e.depthwiseRegularizer=Eo(this.depthwiseRegularizer),e.depthwiseConstraint=ka(this.depthwiseRegularizer),e}}function tl(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new qr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function nl(e,t,n,r=!1,s,i,o=!1,l=!1){return a.tidy((()=>{const u=t.shape.length;if(u<3)throw new qr(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Ua(2,u));if(t=a.transpose(t,c),null!=i)throw new Xr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=a.cast(a.cast(s,"bool"),"float32")).rank===u-1&&(s=a.expandDims(s,-1)),s=a.transpose(s,c)),r&&(t=a.reverse(t,0),null!=s&&(s=a.reverse(s,0)));const d=[];let p,h=n;const f=t.shape[0],m=a.unstack(t);let g,y;null!=s&&(g=a.unstack(s));for(let t=0;t<f;++t){const n=m[t],r=a.tidy((()=>e(n,h)));if(null==s)p=r[0],h=r[1];else{const e=a.tidy((()=>{const e=g[t],n=a.sub(a.onesLike(e),e);return{output:a.add(a.mul(r[0],e),a.mul(h[0],n)),newStates:h.map(((t,s)=>a.add(a.mul(r[1][s],e),a.mul(t,n))))}}));p=e.output,h=e.newStates}l&&d.push(p)}if(l){const e=1;y=a.stack(d,e)}return[p,y,h]}))}el.className="DepthwiseConv2D",a.serialization.registerClass(el);class rl extends Hs{constructor(e){let t;if(super(e),null==e.cell)throw new qr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new dl({cells:e.cell}):e.cell,null==t.stateSize)throw new qr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ps({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Ua(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Rs(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return a.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Xr("Constants support is not implemented in RNN yet.");Rs(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ps({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new qr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Ps({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,a.tidy)((()=>{if(!this.stateful)throw new Hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.zeros([n,e]))):this.states_=[a.zeros([n,this.cell.stateSize])];else if(null==e)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>a.zeros([n,e]))):this.states_[0]=a.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!a.util.arraysEqual(r.shape,i))throw new qr(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>a.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=tl(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ps({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Vs){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Ds(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new qr(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nl(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return(0,a.tidy)((()=>{let t=a.zeros(e.shape);return t=a.sum(t,[1,2]),t=Ha(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ya(t,[1,e]):t)):this.cell.stateSize>1?[Ya(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rl.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=si(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rl.className="RNN",a.serialization.registerClass(rl);class al extends Hs{}class sl extends al{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,pa(this.units,"units"),this.activation=No(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_o(e.kernelRegularizer),this.recurrentRegularizer=_o(e.recurrentRegularizer),this.biasRegularizer=_o(e.biasRegularizer),this.kernelConstraint=Na(e.kernelConstraint),this.recurrentConstraint=Na(e.recurrentConstraint),this.biasConstraint=Na(e.biasConstraint),this.dropout=Va([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Va([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Os(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{if(2!==(e=e).length)throw new qr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pl({ones:()=>a.onesLike(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pl({ones:()=>a.onesLike(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=Ja(null!=i?a.mul(e,i):e,this.kernel.read()),null!=this.bias&&(s=rs(s,this.bias.read())),null!=o&&(n=a.mul(n,o));let l=a.add(s,Ja(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ko(this.activation),useBias:this.useBias,kernelInitializer:Ts(this.kernelInitializer),recurrentInitializer:Ts(this.recurrentInitializer),biasInitializer:Ts(this.biasInitializer),kernelRegularizer:Eo(this.kernelRegularizer),recurrentRegularizer:Eo(this.recurrentRegularizer),biasRegularizer:Eo(this.biasRegularizer),activityRegularizer:Eo(this.activityRegularizer),kernelConstraint:ka(this.kernelConstraint),recurrentConstraint:ka(this.recurrentConstraint),biasConstraint:ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}sl.className="SimpleRNNCell",a.serialization.registerClass(sl);class il extends rl{constructor(e){e.cell=new sl(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}il.className="SimpleRNN",a.serialization.registerClass(il);class ol extends al{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new qr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,pa(this.units,"units"),this.activation=No(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=No(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_o(e.kernelRegularizer),this.recurrentRegularizer=_o(e.recurrentRegularizer),this.biasRegularizer=_o(e.biasRegularizer),this.kernelConstraint=Na(e.kernelConstraint),this.recurrentConstraint=Na(e.recurrentConstraint),this.biasConstraint=Na(e.biasConstraint),this.dropout=Va([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Va([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Os(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,a.tidy)((()=>{if(2!==(e=e).length)throw new qr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pl({ones:()=>a.onesLike(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pl({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=a.mul(e,s[0]));let c=Ja(e,this.kernel.read());this.useBias&&(c=rs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,i[0]));const d=this.recurrentKernel.read(),[p,h]=a.split(d,[2*this.units,this.units],d.rank-1),f=Ja(r,p),[m,g,y]=a.split(c,3,c.rank-1),[b,x]=a.split(f,2,f.rank-1);o=this.recurrentActivation.apply(a.add(m,b)),l=this.recurrentActivation.apply(a.add(g,x));const v=Ja(a.mul(l,r),h);u=this.activation.apply(a.add(y,v));const w=a.add(a.mul(o,r),a.mul(a.add(1,a.neg(o)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ko(this.activation),recurrentActivation:ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ts(this.kernelInitializer),recurrentInitializer:Ts(this.recurrentInitializer),biasInitializer:Ts(this.biasInitializer),kernelRegularizer:Eo(this.kernelRegularizer),recurrentRegularizer:Eo(this.recurrentRegularizer),biasRegularizer:Eo(this.biasRegularizer),activityRegularizer:Eo(this.activityRegularizer),kernelConstraint:ka(this.kernelConstraint),recurrentConstraint:ka(this.recurrentConstraint),biasConstraint:ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}ol.className="GRUCell",a.serialization.registerClass(ol);class ll extends rl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ol(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ll.className="GRU",a.serialization.registerClass(ll);class ul extends al{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,pa(this.units,"units"),this.activation=No(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=No(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_o(e.kernelRegularizer),this.recurrentRegularizer=_o(e.recurrentRegularizer),this.biasRegularizer=_o(e.biasRegularizer),this.kernelConstraint=Na(e.kernelConstraint),this.recurrentConstraint=Na(e.recurrentConstraint),this.biasConstraint=Na(e.biasConstraint),this.dropout=Va([1,Wa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Va([1,Wa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Os(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ls{apply(t,r){const a=e.apply([n]),s=(new cs).apply([n]),i=e.apply([2*n]);return Qa(Qa(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,a.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new qr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pl({ones:()=>a.onesLike(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pl({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,d;0<this.dropout&&this.dropout<1&&(e=a.mul(e,i[0]));let p=Ja(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,o[0])),p=a.add(p,Ja(r,this.recurrentKernel.read())),this.useBias&&(p=rs(p,this.bias.read()));const[h,f,m,g]=a.split(p,4,p.rank-1);l=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(f),c=a.add(a.mul(u,s),a.mul(l,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=a.mul(d,this.activation.apply(c));return[y,y,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ko(this.activation),recurrentActivation:ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ts(this.kernelInitializer),recurrentInitializer:Ts(this.recurrentInitializer),biasInitializer:Ts(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Eo(this.kernelRegularizer),recurrentRegularizer:Eo(this.recurrentRegularizer),biasRegularizer:Eo(this.biasRegularizer),activityRegularizer:Eo(this.activityRegularizer),kernelConstraint:ka(this.kernelConstraint),recurrentConstraint:ka(this.recurrentConstraint),biasConstraint:ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}ul.className="LSTMCell",a.serialization.registerClass(ul);class cl extends rl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ul(e),super(e)}call(e,t){return(0,a.tidy)((()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cl.className="LSTM",a.serialization.registerClass(cl);class dl extends al{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,a.tidy)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Rs(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Oa(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(si(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ls(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Bs(t)}}function pl(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,i=()=>as(t(),n),o=()=>ss(i,t,r);return!s||s<=1?a.keep(o().clone()):Array(s).fill(void 0).map(o).map((e=>a.keep(e.clone())))}dl.className="StackedRNNCells",a.serialization.registerClass(dl);class hl extends rl{constructor(e){if(e.unroll)throw new Xr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Xr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ps({ndim:5})]}call(e,t){return a.tidy((()=>{if(null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new qr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return a.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=a.zeros(s);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){a.tidy((()=>{if(!this.stateful)throw new Hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.zeros(s))):this.states_=[a.zeros(s)];else if(null==e)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>a.zeros(s))):this.states_[0]=a.zeros(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!a.util.arraysEqual(n.shape,r))throw new qr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>a.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Lo(l,r[0],a,s[0],i[0]),d=Lo(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}hl.className="ConvRNN2D";class fl extends ul{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,pa(this.filters,"filters"),this.kernelSize=zo(n,2,"kernelSize"),this.kernelSize.forEach((e=>pa(e,"kernelSize"))),this.strides=zo(r||1,2,"strides"),this.strides.forEach((e=>pa(e,"strides"))),this.padding=a||"valid",Ra(this.padding),this.dataFormat=s||"channelsLast",Aa(this.dataFormat),this.dilationRate=zo(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>pa(e,"dilationRate")))}build(e){var t;e=Os(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new qr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ls{apply(e,t){return Ka([n.apply([r]),a.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return a.tidy((()=>{if(3!==e.length)throw new qr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pl({ones:()=>a.onesLike(r),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?a.mul(t[n],e):e;let u=l(r,o,0),c=l(r,o,1),d=l(r,o,2),p=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pl({ones:()=>a.onesLike(s),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let f=l(s,h,0),m=l(s,h,1),g=l(s,h,2),y=l(s,h,3);const[b,x,v,w]=a.split(this.kernel.read(),4,3),[k,S,N,I]=this.useBias?a.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,S,this.padding),d=this.inputConv(d,v,N,this.padding),p=this.inputConv(p,w,I,this.padding);const[T,C,E,$]=a.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,$);const _=this.recurrentActivation.apply(a.add(u,f)),A=this.recurrentActivation.apply(a.add(c,m)),R=a.add(a.mul(A,i),a.mul(_,this.activation.apply(a.add(d,g)))),F=a.mul(this.recurrentActivation.apply(a.add(p,y)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=a.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rs(s,n,this.dataFormat):s}recurrentConv(e,t){return a.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fl.className="ConvLSTM2DCell",a.serialization.registerClass(fl);class ml extends hl{constructor(e){const t=new fl(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ml.className="ConvLSTM2D",a.serialization.registerClass(ml);class gl extends Hs{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ss((()=>as(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}gl.className="Dropout",a.serialization.registerClass(gl);class yl extends gl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yl.className="SpatialDropout1D",a.serialization.registerClass(yl);class bl extends Hs{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,pa(this.units,"units"),this.activation=No(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Na(e.kernelConstraint),this.biasConstraint=Na(e.biasConstraint),this.kernelRegularizer=_o(e.kernelRegularizer),this.biasRegularizer=_o(e.biasRegularizer),this.activityRegularizer=_o(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Os(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Os(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e),r=fa(this.activation.getClassName());let a;return null!=r?a=Ja(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Ja(n,this.kernel.read()),null!=this.bias&&(a=rs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:ko(this.activation),useBias:this.useBias,kernelInitializer:Ts(this.kernelInitializer),biasInitializer:Ts(this.biasInitializer),kernelRegularizer:Eo(this.kernelRegularizer),biasRegularizer:Eo(this.biasRegularizer),activityRegularizer:Eo(this.activityRegularizer),kernelConstraint:ka(this.kernelConstraint),biasConstraint:ka(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bl.className="Dense",a.serialization.registerClass(bl);class xl extends Hs{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Os(e);for(const t of e.slice(1))if(null==t)throw new qr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Pa(e,1)]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);let n=Ds(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,a.transpose)(n,e)}return function(e){if(e.rank<=1)throw new qr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Pa(e.shape,1)];return a.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xl.className="Flatten",a.serialization.registerClass(xl);class vl extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.activation=No(e.activation)}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ko(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}vl.className="Activation",a.serialization.registerClass(vl);class wl extends Hs{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,a.tidy)((()=>{return e=Ds(e),t=e,n=this.n,(0,a.tidy)((()=>{if(2!==t.shape.length)throw new qr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ya(Ha(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}wl.className="RepeatVector",a.serialization.registerClass(wl);class kl extends Hs{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new qr("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Pa(e);if(null!==s){if(0===a||i%a!=0)throw new qr(n);r[s]=i/a}else if(i!==a)throw new qr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,a.reshape)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}kl.className="Reshape",a.serialization.registerClass(kl);class Sl extends Hs{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ua(1,e.dims.length+1);if(!a.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ps({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Os(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,a.transpose)(Ds(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Sl.className="Permute",a.serialization.registerClass(Sl);class Nl extends Hs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ds(e);return(0,a.any)((0,a.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e),r=(0,a.any)((0,a.notEqual)(n,this.maskValue),-1,!0);return(0,a.mul)(n,(0,a.cast)(r,n.dtype))}))}}Nl.className="Masking",a.serialization.registerClass(Nl);class Il extends Hs{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ea(e.inputLength))}this.inputDim=e.inputDim,pa(this.inputDim,"inputDim"),this.outputDim=e.outputDim,pa(this.outputDim,"outputDim"),this.embeddingsInitializer=Cs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_o(e.embeddingsRegularizer),this.activityRegularizer=_o(e.activityRegularizer),this.embeddingsConstraint=Na(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,a.tidy)((()=>this.maskZero?(e=Ds(e),(0,a.notEqual)(e,(0,a.zerosLike)(e))):null))}computeOutputShape(e){if(e=Os(e),null==this.inputLength)return[...e,this.outputDim];const t=ea(this.inputLength);if(t.length!==e.length-1)throw new qr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new qr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);let n=Ds(e);"int32"!==n.dtype&&(n=Ga(n,"int32"));const r=es(this.embeddings.read(),(0,a.reshape)(n,[n.size]));return(0,a.reshape)(r,Os(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ts(this.embeddingsInitializer),embeddingsRegularizer:Eo(this.embeddingsRegularizer),activityRegularizer:Eo(this.activityRegularizer),embeddingsConstraint:ka(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Il.className="Embedding",a.serialization.registerClass(Il);class Tl extends Hs{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Xr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new qr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Os(e)]),(e=e).length<2)throw new qr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=la(t),t.length>1)throw new qr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===la(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,a.tidy)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Wa(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Ha(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],i=e.slice(1).concat([s]);let o=a.reshape(r,[s].concat(Pa(e.slice(1))));o=a.transpose(o,[1,0]),o=a.reshape(o,i),t.push(o),n=!0}else if(e>1){const s=Ua(1,e).concat([0]);t.push(a.transpose(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=a.reshape(a.transpose(a.reshape(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Ua(0,s-1));r=a.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=la(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return a.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new qr("`mask` should be an Array");if(!Array.isArray(e))throw new qr("`inputs` should be an Array");if(t.length!==e.length)throw new qr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:a.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=a.logicalAnd(n,t[e]);return n}))}}class Cl extends Tl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.add(t,e[n]);return t}))}}Cl.className="Add",a.serialization.registerClass(Cl);class El extends Tl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.mul(t,e[n]);return t}))}}El.className="Multiply",a.serialization.registerClass(El);class $l extends Tl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=a.add(t,e[n]);return a.mul(1/e.length,t)}))}}$l.className="Average",a.serialization.registerClass($l);class _l extends Tl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.maximum(t,e[n]);return t}))}}_l.className="Maximum",a.serialization.registerClass(_l);class Al extends Tl{constructor(e){super(e)}mergeFunction(e){return(0,a.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=a.minimum(t,e[n]);return t}))}}Al.className="Minimum",a.serialization.registerClass(Al);class Rl extends Tl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new qr("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(a.util.arraysEqual(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new qr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,a.tidy)((()=>Ka(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new qr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new qr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new qr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new qr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return a.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(a.cast(a.onesLike(e[n]),"bool")):t[n].rank<e[n].rank?r.push(a.expandDims(t[n],-1)):r.push(t[n]);const s=a.concat(r,this.axis);return a.all(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Fl(e,t){for(;e<0;)e+=t;return e}Rl.className="Concatenate",a.serialization.registerClass(Rl);class Dl extends Tl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){a.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Xr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new qr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new qr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Fl(t,e[n].shape.length))):[Fl(this.axes,n.shape.length),Fl(this.axes,r.shape.length)],this.normalize&&(n=ii(n,t[0]),r=ii(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Xr("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),a.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Xr("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return a.tidy((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=a.reshape(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=a.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=i[0]===i[1]?a.sum(a.mul(e,t),i[0]):a.sum(a.mul(a.transpose(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;o=a.matMul(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=a.squeeze(o,t)}return 1===o.shape.length&&(o=a.expandDims(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Fl(this.axes,e.length),Fl(this.axes,t.length)],n}computeOutputShape(e){a.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Xr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dl.className="Dot",a.serialization.registerClass(Dl);class Ol extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e);return ss((()=>(0,a.add)(Za(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Ol.className="GaussianNoise",a.serialization.registerClass(Ol);class Ml extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t);const n=Ds(e);return this.rate>0&&this.rate<1?ss((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,a.mul)(n,Za(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Ml.className="GaussianDropout",a.serialization.registerClass(Ml);class zl extends Hs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ds(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,a.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ss((()=>{const t=Ds(e),r=-1.7580993408473766;let s=(0,a.greaterEqual)((0,a.randomUniform)(n),this.rate);s=Ga(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate,l=(0,a.add)((0,a.mul)(t,s),(0,a.mul)((0,a.add)(s,-1),r));return(0,a.add)((0,a.mul)(l,i),o)}),(()=>Ds(e)),t.training||!1)}return e}))}}function Ll(e,t,n,r,s,i=.001){let o;if(2===e.rank)o=a.batchNorm2d(e,t,n,r,s,i);else if(3===e.rank)o=a.batchNorm3d(e,t,n,r,s,i);else{if(4!==e.rank)throw new Xr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=a.batchNorm4d(e,t,n,r,s,i)}return o}zl.className="AlphaDropout",a.serialization.registerClass(zl);class Bl extends Hs{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cs(e.movingVarianceInitializer||"ones"),this.betaConstraint=Na(e.betaConstraint),this.gammaConstraint=Na(e.gammaConstraint),this.betaRegularizer=_o(e.betaRegularizer),this.gammaRegularizer=_o(e.gammaRegularizer)}build(e){e=Os(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new qr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ps({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,a.tidy)((()=>{const n=null!=t.training&&t.training,r=Ds(e),s=r.shape,i=s.length,o=Ua(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Qr(1,i);u[l]=s[l];const c=o.slice();c.sort();const d=!a.util.arraysEqual(c,Ua(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=(0,a.reshape)(this.movingMean.read(),u),t=(0,a.reshape)(this.movingVariance.read(),u),n=this.center?(0,a.reshape)(this.beta.read(),u):null,s=this.scale?(0,a.reshape)(this.gamma.read(),u):null;return Ll(r,e,t,n,s,this.epsilon)}return Ll(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,f]=function(e,t,n,r,s=.001){return a.util.arraysEqual(r.slice().sort(),Ua(0,e.rank-1))?function(e,t,n,r,s=.001){return(0,a.tidy)((()=>{const i=a.moments(e,r),o=i.mean,l=i.variance;return[Ll(e,o,l,n,t,s),o,l]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return(0,a.tidy)((()=>{const i=a.moments(e,r),o=i.mean,l=i.variance,u=[];for(const t of Ua(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=(0,a.reshape)(o,u),d=(0,a.reshape)(l,u),p=null==t?null:(0,a.reshape)(t,u),h=null==n?null:(0,a.reshape)(n,u);return[Ll(e,c,d,h,p,s),o,l]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{a.tidy((()=>{const r=1-n,s=e.read(),i=a.mul(a.sub(s,t),r);e.write(a.sub(s,i))}))};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ts(this.betaInitializer),gammaInitializer:Ts(this.gammaInitializer),movingMeanInitializer:Ts(this.movingMeanInitializer),movingVarianceInitializer:Ts(this.movingVarianceInitializer),betaRegularizer:Eo(this.betaRegularizer),gammaRegularizer:Eo(this.gammaRegularizer),betaConstraint:ka(this.betaConstraint),gammaConstraint:ka(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Bl.className="BatchNormalization",a.serialization.registerClass(Bl);class Pl extends Hs{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cs(e.betaInitializer||"zeros"),this.gammaInitializer=Cs(e.gammaInitializer||"ones"),this.betaRegularizer=_o(e.betaRegularizer),this.gammaRegularizer=_o(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Os(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==la(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Ds(e),r=n.shape,s=r.length;return(0,a.tidy)((()=>{let{mean:e,variance:t}=(0,a.moments)(n,this.axis,!0);const i=Qr(1,s);for(const e of this.axis)i[e]=r[e];const o=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?a.reshape(e,i):e;let l=o(this.gamma.read()),u=o(this.beta.read());const c=[],d=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(c.push(r[e]),d.push(1)):(c.push(1),d.push(r[e]));return e=a.tile(e,c),t=a.tile(t,c),l=a.tile(l,d),u=a.tile(u,d),Ll(n,e,t,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ts(this.betaInitializer),gammaInitializer:Ts(this.gammaInitializer),betaRegularizer:Eo(this.betaRegularizer),gammaRegularizer:Eo(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Pl.className="LayerNormalization",a.serialization.registerClass(Pl);class Vl extends Hs{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new qr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new qr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new qr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ps({ndim:4})]}computeOutputShape(e){let t,n;return e=Os(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,a.tidy)((()=>{return t=Ds(e),n=this.padding,r=this.dataFormat,(0,a.tidy)((()=>{if(4!==t.rank)throw new qr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new qr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Wl(e,t,n,r,s,i){return(0,a.tidy)((()=>{let o;Aa(s),Fa(i),Ra(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Po(e,s);const l="same"===r?"same":"valid";return o="max"===i?a.maxPool(e,t,n,l):a.avgPool(e,t,n,l),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o}))}function Ul(e,t,n,r,s,i){return(0,a.tidy)((()=>{let o;Aa(s),Fa(i),Ra(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=Vo(e,s);const l="same"===r?"same":"valid";return o="max"===i?a.maxPool3d(e,t,n,l):a.avgPool3d(e,t,n,l),"channelsFirst"===s&&(o=a.transpose(o,[0,4,1,2,3])),o}))}Vl.className="ZeroPadding2D",a.serialization.registerClass(Vl);class Gl extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new qr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(pa(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new qr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}pa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ra(this.padding),this.inputSpec=[new Ps({ndim:3})]}computeOutputShape(e){const t=Lo((e=Os(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,a.tidy)((()=>{this.invokeCallHook(e,t),e=Ha(Ds(e),2);const n=this.poolingFunction(Ds(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Hl extends Gl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Wl(e,t,n,r,a,"max")}}Hl.className="MaxPooling1D",a.serialization.registerClass(Hl);class jl extends Gl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Wl(e,t,n,r,a,"avg")}}jl.className="AveragePooling1D",a.serialization.registerClass(jl);class ql extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new qr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];pa(this.poolSize,"poolSize"),pa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Aa(this.dataFormat),Ra(this.padding),this.inputSpec=[new Ps({ndim:4})]}computeOutputShape(e){e=Os(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Lo(t,this.poolSize[0],this.padding,this.strides[0]),n=Lo(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,a.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ds(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Xl extends ql{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Wl(e,t,n,r,a,"max")}}Xl.className="MaxPooling2D",a.serialization.registerClass(Xl);class Kl extends ql{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Wl(e,t,n,r,a,"avg")}}Kl.className="AveragePooling2D",a.serialization.registerClass(Kl);class Ql extends Hs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new qr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];pa(this.poolSize,"poolSize"),pa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Aa(this.dataFormat),Ra(this.padding),this.inputSpec=[new Ps({ndim:5})]}computeOutputShape(e){e=Os(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Lo(t,this.poolSize[0],this.padding,this.strides[0]),n=Lo(n,this.poolSize[1],this.padding,this.strides[1]),r=Lo(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,a.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ds(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Yl extends Ql{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Ul(e,t,n,r,a,"max")}}Yl.className="MaxPooling3D",a.serialization.registerClass(Yl);class Zl extends Ql{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Aa(a),Ra(r),Ul(e,t,n,r,a,"avg")}}Zl.className="AveragePooling3D",a.serialization.registerClass(Zl);class Jl extends Hs{constructor(e){super(e),this.inputSpec=[new Ps({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Xr}}class eu extends Jl{constructor(e){super(e||{})}call(e,t){return(0,a.tidy)((()=>{const t=Ds(e);return a.mean(t,1)}))}}eu.className="GlobalAveragePooling1D",a.serialization.registerClass(eu);class tu extends Jl{constructor(e){super(e||{})}call(e,t){return(0,a.tidy)((()=>{const t=Ds(e);return a.max(t,1)}))}}tu.className="GlobalMaxPooling1D",a.serialization.registerClass(tu);class nu extends Hs{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Aa(this.dataFormat),this.inputSpec=[new Ps({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Xr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ru extends nu{call(e,t){return(0,a.tidy)((()=>{const t=Ds(e);return"channelsLast"===this.dataFormat?a.mean(t,[1,2]):a.mean(t,[2,3])}))}}ru.className="GlobalAveragePooling2D",a.serialization.registerClass(ru);class au extends nu{call(e,t){return(0,a.tidy)((()=>{const t=Ds(e);return"channelsLast"===this.dataFormat?a.max(t,[1,2]):a.max(t,[2,3])}))}}au.className="GlobalMaxPooling2D",a.serialization.registerClass(au);class su extends Hs{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=si(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class iu extends su{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Os(e)).length<3)throw new qr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Os(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,a.tidy)((()=>nl(((e,n)=>[Ds(this.layer.call(e,t)),[]]),e=Ds(e),[],!1,null,null,!1,!0)[1]))}}iu.className="TimeDistributed",a.serialization.registerClass(iu);class ou extends su{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=si(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=si(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,ca($a,"BidirectionalMergeMode",a),e.weights)throw new Xr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Jr(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=tl(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new qr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Ps({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Xr("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Vs;for(const e of s)if(e instanceof Vs!==o)throw new qr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,a.tidy)((()=>{const n=t.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a.reverse(s,1)),"concat"===this.mergeMode?o=Ka([r,s]):"sum"===this.mergeMode?o=a.add(r,s):"ave"===this.mergeMode?o=a.mul(.5,a.add(r,s)):"mul"===this.mergeMode?o=a.mul(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Oa(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Oa(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=si(t.layer);if(delete t.layer,null!=t.numConstants)throw new Xr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ou.className="Bidirectional",a.serialization.registerClass(ou);var lu,uu,cu=n(1445),du=n(600);function pu(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(gu(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=pu(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function hu(e,t=mu){return fu(e,t)}function fu(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(gu(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=fu(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function mu(e){return null===e?null:gu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function gu(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof a.Tensor))}function yu(e){return pu(e,bu)}function bu(e){return e instanceof a.Tensor?{value:e.clone(),recurse:!1}:gu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class xu{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class vu extends xu{constructor(){super(vu.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}vu.INITIAL_CAPACITY=32;class wu{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new _u(this,e)}filter(e){return new Eu(this,e)}map(e){return new $u(this,e)}mapAsync(e){return new Au(this,e)}serialMapAsync(e){return new Au(this,e).serial()}flatmap(e){return new Fu(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Cu(this,e,t)}columnMajorBatch(e,t=!0,n=mu){return this.rowMajorBatch(e,t).map((e=>hu(e,n)))}concatenate(e,t){return new Du(new ku([this,e]),t)}take(e){return e<0||null==e?this:new Tu(this,e)}skip(e){return e<0||null==e?this:new Iu(this,e)}prefetch(e){return new Ou(this,e)}shuffle(e,t){return new Mu(this,e,t)}serial(){return new Nu(this)}}class ku extends wu{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:yu(e),done:!1}}}class Su extends wu{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Nu extends wu{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Iu extends wu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.dispose(e.value)}return this.upstream.next()}}class Tu extends wu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Cu extends wu{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Eu extends wu{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.dispose(e.value)}}}class $u extends wu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class _u extends wu{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Au extends wu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Ru extends wu{constructor(){super(),this.outputQueue=new vu,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Fu extends Ru{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return!0}}class Du extends wu{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(uu=lu||(lu={}))[uu.FAIL=0]="FAIL",uu[uu.SHORTEST=1]="SHORTEST",uu[uu.LONGEST=2]="LONGEST";class Ou extends wu{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new xu(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Mu extends Ou{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=du.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class zu{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return a.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Lu((async()=>(await n.iterator()).columnMajorBatch(e,t,Bu)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Lu((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Lu((async()=>(await t.iterator()).filter((t=>a.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Lu((async()=>(await t.iterator()).map((t=>a.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Lu((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Lu((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Lu((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Su(a)).take(e),new Du(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Lu((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=du.alea(t||a.util.now().toString());return Lu((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Lu((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Lu(e,t=null){return new class extends zu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Bu(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof a.Tensor||a.util.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof a.Tensor?a.stack(e):a.tensor(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Pu(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}zu.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Vu=a.kernel_impls.whereImpl;class Wu extends a.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.DataStorage(this,(0,a.engine)())}nextDataId(){return Wu.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,a.env)().get("IS_NODE")&&a.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map((e=>a.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return a.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>a.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return(0,a.engine)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=a.util.now();return e(),{kernelMs:a.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Pu([e],"where");const t=this.readSync(e.dataId);return Vu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Uu(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(Pu(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=a.util.sizeFromShape(o.shape),d=n||o.dtype,p=a.util.getArrayFromDType(d,c);for(let e=0;e<c;++e)p[e]=t(u[e],s);return l.makeTensorInfo(o.shape,d,p)}}function Gu(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Pu(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,a);return o.makeTensorInfo(i.shape,u,c)}}Wu.nextDataId=0,(0,a.registerBackend)("cpu",(()=>new Wu),1);const Hu=Uu(a.Elu,(e=>e>=0?e:Math.exp(e)-1)),ju={kernelName:a.Elu,backendName:"cpu",kernelFunc:Hu};function qu(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Xu={kernelName:a.Identity,backendName:"cpu",kernelFunc:qu};function Ku(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;Pu([s],"leakyRelu");const o=a.util.sizeFromShape(s.shape),l=n.data.get(s.dataId).values,u=a.util.getTypedArrayFromDType("float32",o);for(let e=0;e<l.length;e++)u[e]=l[e]<0?i*l[e]:l[e];return n.makeTensorInfo(s.shape,"float32",u)}const Qu={kernelName:a.LeakyRelu,backendName:"cpu",kernelFunc:Ku};function Yu(e){return(t,n,r,s,i)=>{const o=a.backend_util.assertAndGetBroadcastShape(t,n),l=o.length,u=a.util.computeStrides(o),c=a.util.sizeFromShape(o),d=a.util.getTypedArrayFromDType(i,c),p=t.length,h=n.length,f=a.util.computeStrides(t),m=a.util.computeStrides(n),g=a.backend_util.getBroadcastDims(t,o),y=a.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=a.util.indexToLoc(t,l,u),i=n.slice(-p);g.forEach((e=>i[e]=0));const o=a.util.locToIndex(i,p,f),c=n.slice(-h);y.forEach((e=>c[e]=0));const b=a.util.locToIndex(c,h,m);d[t]=e(r[o],s[b])}return[d,o]}}const Zu=Yu(((e,t)=>e<0?t*e:e));function Ju(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Pu([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=Zu(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const ec={kernelName:a.Prelu,backendName:"cpu",kernelFunc:Ju},tc=Uu(a.Relu,(e=>Math.max(0,e))),nc={kernelName:a.Relu,backendName:"cpu",kernelFunc:tc},rc=Uu(a.Relu6,(e=>Math.min(Math.max(0,e),6))),ac={kernelName:a.Relu6,backendName:"cpu",kernelFunc:rc},sc=Uu(a.Sigmoid,(e=>1/(1+Math.exp(-e)))),ic={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:sc};function oc(e,t,n,r,a){if("linear"===n)return qu({inputs:{x:t},backend:e});if("relu"===n)return tc({inputs:{x:t},backend:e});if("elu"===n)return Hu({inputs:{x:t},backend:e});if("relu6"===n)return rc({inputs:{x:t},backend:e});if("prelu"===n)return Ju({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Ku({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return sc({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lc(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const uc={kernelName:a.Complex,backendName:"cpu",kernelFunc:lc};function cc(e,t,n="float32"){if("complex64"===n)return lc({inputs:{real:cc(e,t,"float32"),imag:cc(e,t,"float32")},backend:e});const r=a.util.makeZerosTypedArray(a.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function dc(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const pc={kernelName:a.Real,backendName:"cpu",kernelFunc:dc};function hc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return qu({inputs:{x:s},backend:n});const e=cc(n,s.shape,s.dtype),t=hc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=lc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=dc({inputs:{input:s},backend:n}),t=hc({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!a.util.hasEncodingLoss(s.dtype,i)){const e=qu({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===i){const e=n.data.get(s.dataId).values,t=a.util.toTypedArray([0],s.dtype),[r,i]=Yu(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const fc={kernelName:a.Cast,backendName:"cpu",kernelFunc:hc};function mc(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:o}=n,l=s;Pu([i,o],e);const u=l.data.get(i.dataId).values,c=l.data.get(o.dataId).values,d="string"===i.dtype?a.backend_util.fromUint8ToStringArray(u):u,p="string"===i.dtype?a.backend_util.fromUint8ToStringArray(c):c,h=r||i.dtype,[f,m]=t(i.shape,o.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=hc({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,c=hc({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(h.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=lc({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function gc(e){return(t,n,r,s,i,o)=>{const l=a.backend_util.assertAndGetBroadcastShape(t,n),u=a.util.sizeFromShape(l),c=l.length,d=a.util.computeStrides(l),p=a.util.getTypedArrayFromDType("float32",u),h=a.util.getTypedArrayFromDType("float32",u),f=a.backend_util.getBroadcastDims(t,l),m=a.backend_util.getBroadcastDims(n,l),g=a.backend_util.mergeRealAndImagArrays(r,s),y=a.backend_util.mergeRealAndImagArrays(i,o),b=t.length,x=a.util.computeStrides(t),v=n.length,w=a.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[t]=a.real,h[t]=a.imag}else for(let t=0;t<p.length;t++){const n=a.util.indexToLoc(t,c,d),r=n.slice(-b);f.forEach((e=>r[e]=0));const s=a.util.locToIndex(r,b,x),i=n.slice(-v);m.forEach((e=>i[e]=0));const o=a.util.locToIndex(i,v,w),l=e(g[2*s],g[2*s+1],y[2*o],y[2*o+1]);p[t]=l.real,h[t]=l.imag}return[p,h,l]}}const yc=Yu(((e,t)=>e+t)),bc=gc(((e,t,n,r)=>({real:e+n,imag:t+r}))),xc=mc(a.Add,yc,bc),vc={kernelName:a.Add,backendName:"cpu",kernelFunc:xc};function wc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=a.util.sizeFromShape(s.shape),l=a.util.inferFromImplicitShape(i,o),u=a.util.sizeFromShape(l);a.util.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:s.dataId,shape:l,dtype:s.dtype}}const kc={kernelName:a.Reshape,backendName:"cpu",kernelFunc:wc};function Sc(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:l}=r;Pu([s,i],"matMul");const u=s.shape.length,c=i.shape.length,d=o?s.shape[u-2]:s.shape[u-1],p=l?i.shape[c-1]:i.shape[c-2],h=o?s.shape[u-1]:s.shape[u-2],f=l?i.shape[c-2]:i.shape[c-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),y=a.util.sizeFromShape(m),b=a.util.sizeFromShape(g),x=y===b||1===y||1===b;a.util.assert(u>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([h,f]);a.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`));const w=l?[b,f,p]:[b,p,f],k=wc({inputs:{x:s},backend:n,attrs:{shape:o?[y,d,h]:[y,h,d]}}),S=wc({inputs:{x:i},backend:n,attrs:{shape:w}}),N=o?k.shape[1]:k.shape[2],I=o?k.shape[2]:k.shape[1],T=l?S.shape[1]:S.shape[2],C=Math.max(y,b),E=n.data.get(k.dataId).values,$=n.data.get(S.dataId).values,_=a.util.computeStrides(k.shape),A=a.util.computeStrides(S.shape),[R,F,D]=o?[_[0],1,_[1]]:[_[0],_[1],1],[O,M,z]=l?[1,A[1],A[0]]:[A[1],1,A[0]],L=I*T,B=(0,a.buffer)([C,I,T],k.dtype),P=B.values,V=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<I;t+=V)for(let n=0;n<T;n+=V)for(let r=0;r<N;r+=V){const a=Math.min(t+V,I),s=Math.min(n+V,T),i=Math.min(r+V,N);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,y-1)*R,s=Math.min(e,b-1)*z;n+=E[r+o*F+a*D]*$[a*O+t*M+s]}P[e*L+(o*T+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(v,B.dtype,B.values)}const Nc={kernelName:a.BatchMatMul,backendName:"cpu",kernelFunc:Sc},Ic={kernelName:a._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=Sc({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(h=xc({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),c&&(f=oc(n,p,c,o,d),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function Tc(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Cc={kernelName:a.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Pu(t,"abs");let r=new Float32Array(a.util.sizeFromShape(t.shape));return r=Tc(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Ec=Uu(a.Acos,(e=>Math.acos(e))),$c={kernelName:a.Acos,backendName:"cpu",kernelFunc:Ec},_c=Uu(a.Acosh,(e=>Math.acosh(e))),Ac={kernelName:a.Acosh,backendName:"cpu",kernelFunc:_c},Rc={kernelName:a.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Pu(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=(0,a.buffer)(r[0].shape,r[0].dtype),o=i.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Fc(e,t,n,r,s){const i=t.length,o=a.util.sizeFromShape(t),l=a.util.computeStrides(t),u=a.util.computeStrides(s),c=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(s));for(let t=0;t<o;++t){const n=a.util.indexToLoc(t,i,l),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];c[a.util.locToIndex(s,i,u)]=e[t]}return c}function Dc(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Pu(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const l=Fc(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}const Oc={kernelName:a.Transpose,backendName:"cpu",kernelFunc:Dc},Mc={kernelName:a.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;Pu(s,"all");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=Dc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[p,h]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(h),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n&&r}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(o){const e=wc({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}},zc={kernelName:a.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;Pu(s,"any");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=Dc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[p,h]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(h),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n||r}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(o){const e=wc({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Lc={kernelName:a.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Pu(s,"argMax");let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=Dc({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[d,p]=a.backend_util.computeOutAndReduceShapes(u.shape,o),h=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(h,"int32"),m=a.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a>n&&(n=a,r=e)}f[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},Bc={kernelName:a.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Pu(s,"argMin");let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=Dc({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[d,p]=a.backend_util.computeOutAndReduceShapes(u.shape,o),h=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(h,"int32"),m=a.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a<n&&(n=a,r=e)}f[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},Pc=Uu(a.Asin,(e=>Math.asin(e))),Vc={kernelName:a.Asin,backendName:"cpu",kernelFunc:Pc},Wc=Uu(a.Asinh,(e=>Math.asinh(e))),Uc={kernelName:a.Asinh,backendName:"cpu",kernelFunc:Wc},Gc=Uu(a.Atan,(e=>Math.atan(e))),Hc={kernelName:a.Atan,backendName:"cpu",kernelFunc:Gc},jc=Yu(((e,t)=>Math.atan2(e,t))),qc=mc(a.Atan2,jc),Xc={kernelName:a.Atan2,backendName:"cpu",kernelFunc:qc},Kc=Uu(a.Atanh,(e=>Math.atanh(e))),Qc={kernelName:a.Atanh,backendName:"cpu",kernelFunc:Kc};function Yc(e,t,n,r,s,i){const o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,a.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,a=t*r[0];for(let t=0;t<s.inChannels;++t)for(let g=0;g<s.outHeight;++g){const b=g*o-h,w=Math.max(0,b),k=Math.min(s.inHeight,d+b),S=n+g*x;for(let n=0;n<s.outWidth;++n){const o=n*l-f,d=Math.max(0,o),h=Math.min(s.inWidth,p+o);let g=m,b=0,x=0;for(let n=w;n<k;n+=u){const s=a+n*r[1];for(let n=d;n<h;n+=c){const a=e[s+n*r[2]+t];"max"===i&&a>g?g=a:"avg"===i&&(b+=a,x++)}if(isNaN(g))break}y[S+n*v+t]="avg"===i?b/x:g}}}return g}function Zc(e,t,n,r,s=!1,i=!1){const o=(0,a.buffer)(r.outShape,"int32"),l=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=(0,a.buffer)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const a=n*l-f;let y=a;for(;y<0;)y+=c;const b=Math.min(r.inHeight,p+a);for(let l=0;l<r.outWidth;++l){const p=l*u-m;let f=p;for(;f<0;)f+=d;const x=Math.min(r.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=c){const o=n-a;for(let a=f;a<x;a+=d){const l=a-p,u=g.get(e,n,a,t);u>v&&(v=u,w=s?i?((e*r.inHeight+n)*r.inWidth+a)*r.inChannels+t:(n*r.inWidth+a)*r.inChannels+t:o*h+l)}}o.set(w,e,n,l,t)}}return o}function Jc(e,t,n,r,s,i){const o=s.strideDepth,l=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,a.buffer)(s.outShape,n),w=v.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*k,a=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const k=v*o-g;let T=k;for(;T<0;)T+=c;const C=Math.min(s.inDepth,h+k),E=n+v*S;for(let n=0;n<s.outHeight;++n){const o=n*l-y;let h=o;for(;h<0;)h+=d;const g=Math.min(s.inHeight,f+o),v=E+n*N;for(let n=0;n<s.outWidth;++n){const o=n*u-b;let l=o;for(;l<0;)l+=p;const f=Math.min(s.inWidth,m+o),y=v+n*I;let k=x,S=0,N=0;for(let n=T;n<C;n+=c){const s=a+n*r[1];for(let n=h;n<g;n+=d){const a=s+n*r[2];for(let n=l;n<f;n+=p){const s=e[a+n*r[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(S+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+t]="avg"===i?S/N:k}}}}return v}const ed={kernelName:a.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Pu(s,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))d=qu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.util.computeStrides(s.shape),r=Yc(e,s.shape,s.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}},td={kernelName:a.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;Pu(s,"avgPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,l,u,c),p=Jc(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},nd={kernelName:a.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;Pu([s,i],"avgPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,x=d.dilationHeight,v=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,N=w-1-d.padInfo.front,I=S-1-d.padInfo.left,T=k-1-d.padInfo.top,C=(0,a.buffer)(i.shape,"float32"),E=1/(m*g*y),$=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-N,i=r-T,o=a-I;let l=0;for(let n=0;n<w;n+=b){const r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(i+n)/h;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<S;n+=v){const s=(o+n)/f;s<0||s>=d.outWidth||Math.floor(s)!==s||(l+=$.get(e,r,a,s,t))}}}C.set(l*E,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},rd={kernelName:a.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;Pu([s,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=a.backend_util.computePool2DInfo(o.shape,l,u,1,c),p=d.strideHeight,h=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,a.buffer)(o.shape,"float32"),S=1/(f*m),N=n.data.get(s.dataId).values,I=(0,a.buffer)(s.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-w,s=r-v;let i=0;for(let n=0;n<b;n+=g){const r=(a+n)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=y){const a=(s+n)/h;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}k.set(i*S,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},ad={kernelName:a.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:o,mean:l,variance:u}=t;a.util.assert(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.util.assert(null==o||l.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.util.assert(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Pu([s,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=n.data.get(s.dataId).values,p=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,x=h.length,v=p.length;let w=0,k=0,S=0,N=0;for(let e=0;e<d.length;++e)g[e]=m[w++]+(d[e]-p[k++])*f[S++]/Math.sqrt(h[N++]+c),w>=y&&(w=0),k>=v&&(k=0),S>=b&&(S=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function sd(e,t,n,r,s){const i=a.slice_util.isSliceContinous(r,t,n),o=a.util.sizeFromShape(n),l=a.util.computeStrides(r);if(i){const n=a.slice_util.computeFlatOffset(t,l);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===s?a.backend_util.fromUint8ToStringArray(e):e,c=(0,a.buffer)(r,s,u),d=(0,a.buffer)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(c.get(...r),...n)}return"string"===s?a.backend_util.fromStringArrayToUint8(d.values):d.values}function id(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:o}=r;Pu(s,"slice");const[l,u]=a.slice_util.parseSliceParams(s,i,o);a.slice_util.assertParamsValid(s,l,u);const c=sd(n.data.get(s.dataId).values,l,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const od={kernelName:a.Slice,backendName:"cpu",kernelFunc:id},ld={kernelName:a.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;Pu([s],"batchToSpaceND");const l=i.reduce(((e,t)=>e*t)),u=a.backend_util.getReshaped(s.shape,i,l),c=a.backend_util.getPermuted(u.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,l),p=a.backend_util.getSliceBeginCoords(o,i.length),h=a.backend_util.getSliceSize(d,o,i.length),f=wc({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Dc({inputs:{x:f},backend:n,attrs:{perm:c}}),g=wc({inputs:{x:m},backend:n,attrs:{shape:d}}),y=id({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function ud(e,t,n,r,s){const i=a.util.sizeFromShape(r),o=a.util.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?t[n]:1)}return o}function cd(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],o=(0,a.buffer)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<i;s++){const i=e.get(a,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,a,i):t.size>0?o.set(o.get(a,i)+t.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}const dd={kernelName:a.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=ud(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};function pd(e){return(t,n,r)=>{const s=a.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const hd=pd((e=>Math.ceil(e))),fd=Gu(a.Ceil,hd),md={kernelName:a.Ceil,backendName:"cpu",kernelFunc:fd},gd=Uu(a.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),yd={kernelName:a.ClipByValue,backendName:"cpu",kernelFunc:gd},bd={kernelName:a.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(a.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,l=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let e=0;e<l.length;e++){const t=l[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function xd(e,t,n,r){const s=a.util.getArrayFromDType(n,a.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=a.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=i[o++]}r+=e.shape[1]}))}return s}function vd(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const wd={kernelName:a.Imag,backendName:"cpu",kernelFunc:vd};function kd(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.util.parseAxisParam(s,t[0].shape)[0];let o=a.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===a.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>a.util.sizeFromShape(e.shape)>0));if(1===l.length)return qu({inputs:{x:l[0]},backend:n});const u=l.map((e=>e.shape));if(a.backend_util.assertParamsConsistent(u,i),"complex64"===l[0].dtype){const e=l.map((e=>dc({inputs:{input:e},backend:n}))),t=l.map((e=>vd({inputs:{input:e},backend:n}))),r=kd({inputs:e,backend:n,attrs:{axis:i}}),a=kd({inputs:t,backend:n,attrs:{axis:i}}),s=lc({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=l.map((e=>{const t=a.util.sizeFromShape(e.shape.slice(i));return wc({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=a.backend_util.computeOutShape(c.map((e=>e.shape)),1);const p=1===c[0].shape[0],h=xd(d,o,t[0].dtype,p),f=a.backend_util.computeOutShape(l.map((e=>e.shape)),i),m=n.makeTensorInfo(f,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const Sd={kernelName:a.Concat,backendName:"cpu",kernelFunc:kd};function Nd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r;Pu([s,i],"conv2d");const p=a.backend_util.convertConv2DDataFormat(u),h=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,c,l,d,!1,p),f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,v="channelsLast"===h.dataFormat,w=new a.TensorBuffer(h.outShape,s.dtype),k=a.util.computeStrides(s.shape),S=a.util.computeStrides(i.shape),N=k[0],I=v?k[1]:k[2],T=v?k[2]:1,C=v?1:k[1],E=w.strides[0],$=v?w.strides[1]:w.strides[2],_=v?w.strides[2]:1,A=v?1:w.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,D=w.values;for(let e=0;e<h.batchSize;++e){const t=e*N,n=e*E;for(let e=0;e<h.outHeight;++e){const r=n+e*$,a=e*h.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=h.inHeight)continue;const s=e*S[0],i=t+n*I;for(let e=0;e<h.outWidth;++e){const t=r+e*_,n=e*h.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const a=i+r*T;let o=s+e*S[1];for(let e=0;e<h.inChannels;++e){const n=R[a+e*C];for(let e=0;e<h.outChannels;++e)D[t+e*A]+=n*F[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Id={kernelName:a.Conv2D,backendName:"cpu",kernelFunc:Nd},Td={kernelName:a.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r;Pu([s,i],"conv2dBackpropFilter");const p=a.backend_util.convertConv2DDataFormat(u),h=a.backend_util.computeConv2DInfo(s.shape,d,o,1,l,c,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=h,b="channelsLast"===h.dataFormat,x=new a.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,w=h.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,N=new a.TensorBuffer(s.shape,s.dtype,k),I=new a.TensorBuffer(i.shape,i.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/f)),n=Math.min(h.outHeight,(h.inHeight+w-e)/f);for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((v-r)/m)),s=Math.min(h.outWidth,(h.inWidth+v-r)/m);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*f-w;for(let e=a;e<s;++e){const n=r+e*m-v;l+=b?N.get(u,t,n,i)*I.get(u,c,e,o):N.get(u,i,t,n)*I.get(u,o,c,e)}}x.set(l,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Cd={kernelName:a.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r;Pu([s,i],"conv2dBackpropInput");const p=a.util.computeStrides(i.shape),h=a.util.computeStrides(s.shape);let f=a.backend_util.convertConv2DDataFormat(c);const m=a.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,f),g=new a.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[v,w,k]=p,{batchSize:S,filterHeight:N,filterWidth:I,inChannels:T,inHeight:C,inWidth:E,outChannels:$,outHeight:_,outWidth:A,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const D=N-1-m.padInfo.top,O=I-1-m.padInfo.left,M="channelsLast"===f,z=g.strides[0],L=M?g.strides[1]:g.strides[2],B=M?g.strides[2]:1,P=M?1:g.strides[1],V=h[0],W=M?h[1]:h[2],U=M?h[2]:1,G=M?1:h[1];for(let e=0;e<S;++e)for(let t=0;t<T;++t)for(let n=0;n<C;++n){const r=n-D,a=Math.max(0,Math.ceil(r/R)),s=Math.min(_,(N+r)/R);for(let i=0;i<E;++i){const o=i-O,l=Math.max(0,Math.ceil(o/F)),u=Math.min(A,(I+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=l;r<u;++r){const s=V*e+W*n+U*r,i=v*(N-1-a)+w*(I-1-(r*F-o))+k*t;for(let e=0;e<$;++e)c+=b[s+G*e]*x[i+e]}}y[z*e+L*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ed={kernelName:a.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r;Pu([s,i],"conv3d");const c=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,u,l),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=c,b=y.front,x=y.left,v=y.top,w=new a.TensorBuffer(c.outShape,s.dtype),k=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,N=w.values,I=a.util.computeStrides(s.shape),T=a.util.computeStrides(i.shape);for(let e=0;e<c.batchSize;++e){const t=e*I[0],n=e*w.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*w.strides[1],a=e*c.strideDepth-b;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=c.inDepth)continue;const s=e*T[0],i=t+n*I[1];for(let e=0;e<c.outHeight;++e){const t=r+e*w.strides[2],n=e*c.strideHeight-v;for(let e=0;e<p;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const a=s+e*T[1],o=i+r*I[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-x;for(let e=0;e<h;++e){const t=r+e*g;if(t<0||t>=c.inWidth)continue;const s=a+e*T[2],i=o+t*c.inChannels;let l=s;for(let e=0;e<c.inChannels;++e){const t=k[i+e];for(let e=0;e<c.outChannels;++e)N[n+e]+=t*S[l+e];l+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},$d={kernelName:a.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,filterShape:u}=r;Pu([s,i],"conv3dBackpropFilterV2");const c=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),p=a.backend_util.computeConv3DInfo(s.shape,u,o,1,l),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=new a.TensorBuffer(p.filterShape,"float32"),v=x.values,[w,k,S,N]=x.strides,I=n.data.get(i.dataId).values,[T,C,E,$]=d,_=n.data.get(s.dataId).values,[A,R,F,D]=c,O=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((O-e)/h)),n=Math.min(p.outDepth,(p.inDepth+O-e)/h),r=e*w;for(let a=0;a<y;++a){const s=Math.max(0,Math.ceil((z-a)/f)),i=Math.min(p.outHeight,(p.inHeight+z-a)/f),o=a*k+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/m)),u=Math.min(p.outWidth,(p.inWidth+M-r)/m),c=r*S+o;for(let o=0;o<p.inChannels;++o){const d=o*N+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let d=0;d<p.batchSize;++d){const p=d*A,y=d*T;for(let d=t;d<n;++d){const t=(e+d*h-O)*R+p,n=d*C+y;for(let e=s;e<i;++e){const s=(a+e*f-z)*F+t,i=e*E+n;for(let e=l;e<u;++e){const t=e*$+i;g+=_[(r+e*m-M)*D+s+o]*I[t+c]}}}}v[d+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},_d={kernelName:a.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:l,inputShape:u}=r;Pu([s],"conv3dBackpropInputV2");const c=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),p=a.backend_util.computeConv3DInfo(u,i.shape,l,1,o),h=new a.TensorBuffer(p.inShape,"float32"),f=h.values,[m,g,y,b]=h.strides,x=n.data.get(s.dataId).values,[v,w,k,S]=c,N=n.data.get(i.dataId).values,[I,T,C,E]=d,{batchSize:$,filterDepth:_,filterHeight:A,filterWidth:R,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:z,outDepth:L,outHeight:B,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:U}=p,G=_-1-p.padInfo.front,H=A-1-p.padInfo.top,j=R-1-p.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-G,a=Math.max(0,Math.ceil(r/V)),s=Math.min(L,(_+r)/V);for(let i=0;i<O;++i){const o=i-H,l=Math.max(0,Math.ceil(o/W)),u=Math.min(B,(A+o)/W);for(let c=0;c<M;++c){const d=c-j,p=Math.max(0,Math.ceil(d/U)),h=Math.min(P,(R+d)/U);let $=0;for(let n=a;n<s;++n){const a=n*V-r;for(let r=l;r<u;++r){const s=r*W-o;for(let i=p;i<h;++i){const o=v*e+w*n+k*r+S*i,l=I*(_-1-a)+T*(A-1-s)+C*(R-1-(i*U-d))+E*t;for(let e=0;e<z;++e)$+=x[o+e]*N[l+e]}}}f[m*e+g*n+y*i+b*c+t]=$}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Ad=Uu(a.Cos,(e=>Math.cos(e))),Rd={kernelName:a.Cos,backendName:"cpu",kernelFunc:Ad},Fd=Uu(a.Cosh,(e=>Math.cosh(e))),Dd={kernelName:a.Cosh,backendName:"cpu",kernelFunc:Fd},Od={kernelName:a.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=r,[d,p,h,f]=s.shape,m=i.shape[0],[g,y]=l,b=(0,a.buffer)([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,k=a.util.computeStrides(s.shape),S=a.util.computeStrides(b.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],r=x[t+1],a=x[t+2],s=x[t+3],i=v[e];if(i>=d)continue;const o=g>1?(a-n)*(p-1)/(g-1):0,l=y>1?(s-r)*(h-1)/(y-1):0;for(let t=0;t<g;t++){const d=g>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(d<0||d>p-1)for(let n=0;n<y;n++)for(let r=0;r<f;r++){const a=r+n*S[2]+t*S[1]+e*S[0];b.values[a]=c}else if("bilinear"===u){const n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let u=0;u<y;u++){const d=y>1?r*(h-1)+u*l:.5*(r+s)*(h-1);if(d<0||d>h-1){for(let n=0;n<f;n++){const r=n+u*S[2]+t*S[1]+e*S[0];b.values[r]=c}continue}const p=Math.floor(d),m=Math.ceil(d),g=d-p;for(let r=0;r<f;r++){let s=r+p*k[2]+n*k[1]+i*k[0];const l=w[s];s=r+m*k[2]+n*k[1]+i*k[0];const c=w[s];s=r+p*k[2]+a*k[1]+i*k[0];const d=w[s];s=r+m*k[2]+a*k[1]+i*k[0];const h=l+(c-l)*g,f=d+(w[s]-d)*g;s=r+u*S[2]+t*S[1]+e*S[0],b.values[s]=h+(f-h)*o}}}else for(let n=0;n<y;++n){const a=y>1?r*(h-1)+n*l:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<f;r++){const a=r+n*S[2]+t*S[1]+e*S[0];b.values[a]=c}continue}const o=Math.round(a),u=Math.round(d);for(let r=0;r<f;r++){const a=r+o*k[2]+u*k[1]+i*k[0],s=r+n*S[2]+t*S[1]+e*S[0];b.values[s]=w[a]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Md={kernelName:a.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r;Pu(s,"cumsum");const u=a.backend_util.getAxesPermutation([i],s.shape.length);let c=s;null!=u&&(c=Dc({inputs:{x:s},backend:n,attrs:{perm:u}}));const d=a.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const p=(0,a.upcastType)(c.dtype,"int32"),h=a.util.makeZerosTypedArray(a.util.sizeFromShape(c.shape),p),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=l?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)h[n]=o?0:f[n];else{const r=g(e,t-1);h[n]=o?f[r]+h[r]:f[n]+h[r]}}const y=n.makeTensorInfo(c.shape,p,h);if(null!=u){const e=Dc({inputs:{x:y},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(c),e}return y}},zd={kernelName:a.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=ud(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=cd(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},Ld={kernelName:a.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:o}=r;a.util.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`)),a.util.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const l=s.shape[0],u=s.shape[1],c=s.shape[2],d=s.shape[3],p=u*i,h=c*i,f=d/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(l*p*h*f);let y=0;for(let e=0;e<l;++e)for(let t=0;t<p;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<h;++t){const a=Math.floor(t/i),s=(r*i+t%i)*f;for(let t=0;t<f;++t){const r=t+s+d*(a+c*(n+u*e));g[y++]=m[r]}}}return n.makeTensorInfo([l,p,h,f],s.dtype,g)}};function Bd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;Pu([s,i],"depthwiseConv2DNative");const d=a.util.computeStrides(s.shape),p=a.util.computeStrides(i.shape);let h=u;null==h&&(h=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const f=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,h,l,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,S=new a.TensorBuffer(f.outShape,s.dtype),N=n.data.get(s.dataId).values,I=n.data.get(i.dataId).values,T=S.values;for(let e=0;e<f.batchSize;++e){const t=e*d[0],n=e*S.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*S.strides[1],a=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=a+e*y;if(n<0||n>=f.inHeight)continue;const s=e*p[0],i=t+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*S.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const a=s+e*p[1],o=i+r*f.inChannels;let l=t,u=a;for(let e=0;e<f.inChannels;++e){const t=N[o+e];for(let e=0;e<k;++e)T[l+e]+=t*I[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Pd={kernelName:a.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Bd},Vd={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r;Pu([s,i],"depthwiseConv2dNativeBackpropFilter");const p=a.backend_util.computeConv2DInfo(s.shape,d,o,l,u,c,!0),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=new a.TensorBuffer(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,w=n.data.get(s.dataId).values,k=new a.TensorBuffer(s.shape,s.dtype,w),S=n.data.get(i.dataId).values,N=new a.TensorBuffer(i.shape,i.dtype,S);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(p.outHeight,(p.inHeight+x-e)/h);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/v),l=i%v;let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*h-x;for(let e=a;e<s;++e){const n=r+e*f-b;u+=k.get(l,t,n,o)*N.get(l,c,e,i)}}y.set(u,e,r,o,l)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Wd={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r;Pu([s,i],"depthwiseConv2DNativeBackpropInput");const p=a.util.computeStrides(s.shape),h=a.util.computeStrides(i.shape),f=a.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),m=new a.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(s.dataId).values,[w,k,S]=p,N=n.data.get(i.dataId).values,[I,T,C]=h,{batchSize:E,filterHeight:$,filterWidth:_,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:z,strideWidth:L}=f,B=$-1-f.padInfo.top,P=_-1-f.padInfo.left,V=D/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-B,a=Math.max(0,Math.ceil(r/z)),s=Math.min(O,($+r)/z);for(let i=0;i<F;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(_+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*z-r;for(let r=l;r<u;++r){const s=w*e+k*n+S*r,i=I*($-1-a)+T*(_-1-(r*L-o))+C*t;for(let e=0;e<V;++e)c+=v[s+(t*V+e)]*N[i+e]}}g[y*e+b*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Ud={kernelName:a.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=a.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,o=(0,a.buffer)([s,s],r.dtype),l=o.values;for(let e=0;e<i.length;e++)l[e*s+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},Gd={kernelName:a.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=u.data.get(r.dataId).values,d=r.shape.length,p=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:C}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),E=a.util.sizeFromShape(C),$=C.length,_=a.util.getArrayFromDType(r.dtype,E);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let i=0;i<x;++i){const o=i*k-v.left;for(let l=0;l<y;++l){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const i=n+t*I;if(i>=0&&i<m)for(let n=0;n<N;++n){const f=o+n*T;if(f>=0&&f<g){const o=a.util.locToIndex([e,i,f,l],d,a.util.computeStrides(r.shape)),m=a.util.locToIndex([t,n,l],h,a.util.computeStrides(s.shape)),g=c[o]+p[m];g>u&&(u=g)}}}_[a.util.locToIndex([e,t,i,l],$,a.util.computeStrides(C))]=u}}}return{dataId:u.write(a.util.toTypedArray(_,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Hd={kernelName:a.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,d=a.util.toNestedArray(r.shape,c.data.get(r.dataId).values),p=a.util.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u);a.util.assert(i.rank===T.length,(()=>`Error in ${a.Dilation2DBackpropFilter}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=a.util.toNestedArray(T,c.data.get(i.dataId).values),E=a.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const r=n+t*N;if(r>=0&&r<f)for(let n=0;n<S;++n){const u=a+n*I;if(u>=0&&u<m){const a=d[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}E[o][l][s]+=C[e][t][r][s]}}}return{dataId:c.write(a.util.toTypedArray(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},jd={kernelName:a.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,d=a.util.toNestedArray(r.shape,c.data.get(r.dataId).values),p=a.util.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:I,outShape:T}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,o,l,"NHWC",u);a.util.assert(i.rank===T.length,(()=>`Error in ${a.Dilation2DBackpropInput}, dy must have the same rank as output ${T.length}, but got ${i.rank}`));const C=a.util.toNestedArray(T,c.data.get(i.dataId).values),E=a.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*N;if(r>=0&&r<f)for(let n=0;n<S;++n){const u=a+n*I;if(u>=0&&u<m){const a=d[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}E[e][o][l][s]+=C[e][t][r][s]}}}return{dataId:c.write(a.util.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},qd=Yu(((e,t)=>e*t)),Xd=gc(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Kd=mc(a.Multiply,qd,Xd),Qd={kernelName:a.Multiply,backendName:"cpu",kernelFunc:Kd};function Yd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;let l;Pu(s,"sum"),l="bool"===s.dtype?hc({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):qu({inputs:{x:s},backend:n});const u=l.shape.length,c=a.util.parseAxisParam(i,l.shape),d=a.backend_util.getAxesPermutation(c,u);let p=c,h=l;null!=d&&(h=Dc({inputs:{x:l},backend:n,attrs:{perm:d}}),p=a.backend_util.getInnerMostAxes(p.length,u)),a.backend_util.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[f,m]=a.backend_util.computeOutAndReduceShapes(h.shape,p);let g=cc(n,f,a.backend_util.upcastType(h.dtype,"int32"));const y=a.util.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=x[t+e];b[e]=n}if(o){const e=g;g=wc({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(g.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=d&&n.disposeIntermediateTensorInfo(h),g}const Zd={kernelName:a.Sum,backendName:"cpu",kernelFunc:Yd},Jd={kernelName:a.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:l,idDims:u}=a.backend_util.decodeEinsumEquation(s,i.length);a.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=a.backend_util.getEinsumComputePath(l,u),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=a.backend_util.getEinsumPermutation(f,u[t]);let s;a.backend_util.isIdentityPermutation(e)?s=i[t]:(s=Dc({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.util.arraysEqual(s.shape,o)||(s=wc({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===h?h=s:(h=Kd({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(c[e]>=0&&(h=Yd({inputs:{x:h},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},ep={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Pu([r,s],"eluGrad");const i=new Float32Array(a.util.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values;for(let e=0;e<o.length;++e){const t=o[e];i[e]=t>=1?l[e]:l[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},tp=Yu(((e,t)=>e===t?1:0)),np=mc(a.Equal,tp,null,"bool"),rp={kernelName:a.Equal,backendName:"cpu",kernelFunc:np},ap=a.backend_util.ERF_P,sp=a.backend_util.ERF_A1,ip=a.backend_util.ERF_A2,op=a.backend_util.ERF_A3,lp=a.backend_util.ERF_A4,up=a.backend_util.ERF_A5,cp=Uu(a.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+ap*n);return t*(1-((((up*r+lp)*r+op)*r+ip)*r+sp)*r*Math.exp(-n*n))})),dp={kernelName:a.Erf,backendName:"cpu",kernelFunc:cp},pp=pd((e=>Math.exp(e))),hp=Gu(a.Exp,pp),fp={kernelName:a.Exp,backendName:"cpu",kernelFunc:hp};function mp(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,o=s.shape.length,l=s.shape.slice();let u=i;return i<0&&(a.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+i+1),l.splice(u,0,1),wc({inputs:{x:s},backend:n,attrs:{shape:l}})}const gp={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:mp},yp=pd((e=>Math.expm1(e))),bp=Gu(a.Expm1,yp),xp={kernelName:a.Expm1,backendName:"cpu",kernelFunc:bp},vp=Yu(((e,t)=>e/t)),wp=mc(a.RealDiv,vp),kp={kernelName:a.RealDiv,backendName:"cpu",kernelFunc:wp},Sp=Yu(((e,t)=>e-t)),Np=gc(((e,t,n,r)=>({real:e-n,imag:t-r}))),Ip=mc(a.Sub,Sp,Np),Tp={kernelName:a.Sub,backendName:"cpu",kernelFunc:Ip};function Cp(e,t,n){const r=e.shape,s=r[0],i=r[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[s,i],d=a.util.sizeFromShape(c),p=a.util.getTypedArrayFromDType("float32",d),h=a.util.getTypedArrayFromDType("float32",d);for(let e=0;e<s;e++){const r=id({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=id({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),o=lc({inputs:{real:r,imag:s},backend:n}),{real:c,imag:d}=Ep(o,t,n),f=a.backend_util.mergeRealAndImagArrays(c,d);for(let t=0;t<i;t++){const n=a.backend_util.getComplexWithIndex(f,t);p[e*i+t]=n.real,h[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(c,"float32",p),m=n.makeTensorInfo(c,"float32",h),g=lc({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Ep(e,t,n){const r=a.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((l=r)&l-1)){const s=$p(i,o,r,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",s.real),t=n.makeTensorInfo(l,"float32",s.imag),i=n.makeTensorInfo([],"float32",a.util.createScalarValue(r,"float32")),o=qu({inputs:{x:i},backend:n}),u=kp.kernelFunc({inputs:{a:e,b:i},backend:n}),c=kp.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(u.dataId).values,p=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:d,imag:p}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,o=0;for(let r=0;r<t;r++){const l=a.backend_util.exponent(s*r,t,n),u=a.backend_util.getComplexWithIndex(e,r);i+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(i/=t,o/=t),a.backend_util.assignToTypedArray(r,i,o,s)}return r}(a.backend_util.mergeRealAndImagArrays(i,o),r,t);return a.backend_util.splitRealAndImagArrays(e)}var l}function $p(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=a.backend_util.mergeRealAndImagArrays(e,t),o=n/2,l=a.backend_util.complexWithEvenIndex(i),u=l.real,c=l.imag,d=[u.length],p=s.makeTensorInfo(d,"float32",u),h=s.makeTensorInfo(d,"float32",c),f=lc({inputs:{real:p,imag:h},backend:s}),m=a.backend_util.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),v=s.makeTensorInfo(b,"float32",y),w=lc({inputs:{real:x,imag:v},backend:s}),k=$p(u,c,o,r,s),S=k.real,N=k.imag,I=[S.length],T=s.makeTensorInfo(I,"float32",S),C=s.makeTensorInfo(I,"float32",N),E=lc({inputs:{real:T,imag:C},backend:s}),$=$p(g,y,o,r,s),_=$.real,A=$.imag,R=[_.length],F=s.makeTensorInfo(R,"float32",_),D=s.makeTensorInfo(R,"float32",A),O=lc({inputs:{real:F,imag:D},backend:s}),M=a.backend_util.exponents(n,r),z=[M.real.length],L=s.makeTensorInfo(z,"float32",M.real),B=s.makeTensorInfo(z,"float32",M.imag),P=lc({inputs:{real:L,imag:B},backend:s}),V=Kd({inputs:{a:P,b:O},backend:s}),W=xc({inputs:{a:E,b:V},backend:s}),U=Ip({inputs:{a:E,b:V},backend:s}),G=dc({inputs:{input:W},backend:s}),H=dc({inputs:{input:U},backend:s}),j=vd({inputs:{input:W},backend:s}),q=vd({inputs:{input:U},backend:s}),X=kd({inputs:[G,H],backend:s,attrs:{axis:0}}),K=kd({inputs:[j,q],backend:s,attrs:{axis:0}}),Q=s.data.get(X.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(K),{real:Q,imag:Y}}const _p={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=wc({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),l=Cp(o,!1,n),u=wc({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function Ap(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,o=i||a.util.inferDtype(s),l=a.util.getArrayFromDType(o,a.util.sizeFromShape(r));return function(e,t,n){e.fill(t)}(l,s),t.makeTensorInfo(r,o,l)}const Rp={kernelName:a.Fill,backendName:"cpu",kernelFunc:Ap},Fp={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[o,l,u,c]=r.shape,d=s.data.get(r.dataId).values;for(let e=0;e<o;e++){const t=e*u*l*c;for(let e=0;e<l;e++){const n=e*(u*c);for(let e=0;e<u;e++){const r=e*c;for(let a=0;a<c;a++){const s=Math.round(u-e-1),o=t+n+r+a;let l=d[o];s>=0&&s<u&&(l=d[t+n+s*c+a]),i[o]=l}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dp=pd((e=>Math.floor(e))),Op=Gu(a.Floor,Dp),Mp={kernelName:a.Floor,backendName:"cpu",kernelFunc:Op},zp=Yu(((e,t)=>Math.floor(e/t))),Lp=mc(a.FloorDiv,zp,null,"int32"),Bp={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:Lp},Pp={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Nd({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=xc({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=oc(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Vp={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Bd({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=xc({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=oc(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function Wp(e,t,n,r,s,i,o,l,u){const c=(0,a.buffer)([r,i],n);for(let n=0;n<r;n++){const r=[];let a=0;for(let t=0;t<s;t++){const i=e[n*s+t];a+=i*o[t],r.push(i)}if(a<0||a>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${l}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(a*i+e))}return c}const Up={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=a.util.sizeFromShape(r.shape),o=s.shape,l=o[o.length-1],[u,c,d,p]=a.backend_util.prepareAndValidate(r,s);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=Wp(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,c,l,d,p,r.shape,i);return n.makeTensorInfo(u,r.dtype,h.values)}};function Gp(e,t,n){const r=(0,a.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const l=e.locToIndex(a);r.values[n]=e.values[l]}return r}const Hp={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:l}=r;Pu([s,i],"gatherV2");let u=l;null==l&&(u=0);const c=a.util.sizeFromShape(i.shape),d=a.util.parseAxisParam(o,s.shape)[0],p=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,d,u),h=wc({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=wc({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,c/p.batchSize]}}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=n.bufferSync(f),y=Gp(n.bufferSync(h),g,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}},jp=Yu(((e,t)=>e>t?1:0)),qp=mc(a.Greater,jp,null,"bool"),Xp={kernelName:a.Greater,backendName:"cpu",kernelFunc:qp},Kp=Yu(((e,t)=>e>=t?1:0)),Qp=mc(a.GreaterEqual,Kp,null,"bool"),Yp={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:Qp},Zp={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=wc({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),l=Cp(o,!0,n),u=wc({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},Jp=Uu(a.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),eh={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:Jp},th=Uu(a.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),nh={kernelName:a.IsInf,backendName:"cpu",kernelFunc:th},rh=Uu(a.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),ah={kernelName:a.IsNan,backendName:"cpu",kernelFunc:rh},sh=Yu(((e,t)=>e<t?1:0)),ih=mc(a.Less,sh,null,"bool"),oh={kernelName:a.Less,backendName:"cpu",kernelFunc:ih},lh=Yu(((e,t)=>e<=t?1:0)),uh=mc(a.LessEqual,lh,null,"bool"),ch={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:uh};function dh(e,t,n){const r=(t-e)/(n-1),s=a.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const ph={kernelName:a.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=dh(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},hh=pd((e=>Math.log(e))),fh=Gu(a.Log,hh),mh={kernelName:a.Log,backendName:"cpu",kernelFunc:fh},gh=Uu(a.Log1p,(e=>Math.log1p(e))),yh={kernelName:a.Log1p,backendName:"cpu",kernelFunc:gh},bh=Yu(((e,t)=>e&&t)),xh=mc(a.LogicalAnd,bh,null,"bool"),vh={kernelName:a.LogicalAnd,backendName:"cpu",kernelFunc:xh},wh=Uu(a.LogicalNot,(e=>e?0:1),"bool"),kh={kernelName:a.LogicalNot,backendName:"cpu",kernelFunc:wh},Sh=Yu(((e,t)=>e||t)),Nh=mc(a.LogicalOr,Sh,null,"bool"),Ih={kernelName:a.LogicalOr,backendName:"cpu",kernelFunc:Nh},Th={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r;Pu(s,"LRN");const c=s.shape[3],d=c-1,p=n.data.get(s.dataId).values,h=a.util.sizeFromShape(s.shape),f=new Float32Array(h);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=m(e),n=p[e]*Math.pow(o+l*t,-u);f[e]=n}return n.makeTensorInfo(s.shape,s.dtype,f)}},Ch={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:d}=r;Pu(o,"LRNGrad");const p=a.util.sizeFromShape(o.shape),h=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(p),b=p;for(let e=0;e<b;e++){const t=e%h,n=e-t+Math.max(0,t-l),r=e-t+Math.min(h,t+l+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(m[e],2);a=c*a+u;for(let t=n;t<r;t++){let n=-2*c*d*m[t]*g[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(o.shape,s.dtype,y)}};function Eh(e,t,n,r){const s=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function $h(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,l=n;let u=s.shape;const c=u.length,d=a.util.parseAxisParam(i,u);let p=d;const h=a.backend_util.getAxesPermutation(p,c);let f=l.data.get(s.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[h[t]];f=Fc(f,u,s.dtype,h,e),p=a.backend_util.getInnerMostAxes(p.length,c),u=e}Pu(s,"max"),a.backend_util.assertAxesAreInnerMostDims("max",p,c);const[m,g]=a.backend_util.computeOutAndReduceShapes(u,p),y=Eh(f,a.util.sizeFromShape(g),m,s.dtype),b=l.write(y,m,s.dtype);let x=m;return o&&(x=a.backend_util.expandShapeToKeepDim(m,d)),{dataId:b,shape:x,dtype:s.dtype}}const _h={kernelName:a.Max,backendName:"cpu",kernelFunc:$h},Ah=Yu(((e,t)=>Math.max(e,t))),Rh=mc(a.Maximum,Ah),Fh={kernelName:a.Maximum,backendName:"cpu",kernelFunc:Rh},Dh={kernelName:a.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Pu(s,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);let d;if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))d=qu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=a.util.computeStrides(s.shape),r=Yc(e,s.shape,s.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return d}},Oh={kernelName:a.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r;Pu(s,"maxPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,l,u,c),p=Jc(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Mh={kernelName:a.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r;Pu([s,i],"maxPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,l,1,u,c),p=function(e,t){const n=(0,a.buffer)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let a=0;a<t.batchSize;++a)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=o;const v=Math.min(t.inDepth,c+b);for(let r=0;r<t.outHeight;++r){const c=r*s-f;let h=c;for(;h<0;)h+=l;const w=Math.min(t.inHeight,d+c);for(let s=0;s<t.outWidth;++s){const f=s*i-m;let k=f;for(;k<0;)k+=u;const S=Math.min(t.inWidth,p+f);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let r=h;r<w;r+=l){const s=r-c;for(let i=k;i<S;i+=u){const o=i-f,l=e.get(a,t,r,i,g);l>=N&&(N=l,I=n*d*p+s*d+o)}}}n.set(I,a,y,r,s,g)}}}return n}(n.bufferSync(i),d),h=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=x-1-d.padInfo.front,S=w-1-d.padInfo.left,N=v-1-d.padInfo.top,I=(0,a.buffer)(i.shape,"float32"),T=n.bufferSync(s);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-k,i=r-N,o=a-S;let l=0;for(let n=0;n<x;n+=g){const r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<v;a+=y){const s=(i+a)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=b){const u=(o+i)/m;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;const c=x*v*w-1-p.get(e,r,s,u,t)===n*v*w+a*w+i?1:0;0!==c&&(l+=T.get(e,r,s,u,t)*c)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},zh={kernelName:a.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,l=i;Pu([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:p}=r,h=a.backend_util.computePool2DInfo(l.shape,u,c,1,d,p),f=n.data.get(l.dataId).values,m=(0,a.buffer)(h.outShape,l.dtype,Zc(f,l.shape,l.dtype,h).values),g=h.strideHeight,y=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=w-1-h.padInfo.left,S=v-1-h.padInfo.top,N=(0,a.buffer)(l.shape,"float32"),I=n.data.get(s.dataId).values,T=(0,a.buffer)(s.shape,"float32",I);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-S,s=r-k;let i=0;for(let n=0;n<v;n+=b){const r=(a+n)/g;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=x){const o=(s+a)/y;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const l=v*w-1-m.get(e,r,o,t)===n*w+a?1:0;0!==l&&(i+=T.get(e,r,o,t)*l)}}N.set(i,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Lh={kernelName:a.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;Pu(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,d=a.backend_util.computePool2DInfo(r.shape,s,i,[1,1],o),[p,h]=function(e,t,n,r,s){const i=Yc(e,0,n,a.util.computeStrides(t),s,"max"),o=Zc(e,t,n,s,!0,r);return[i.values,o.values]}(c,r.shape,r.dtype,l,d),f=u.write(p,d.outShape,r.dtype),m=u.write(h,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},Bh={kernelName:a.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=a.util.parseAxisParam(i,s.shape),u=a.backend_util.computeOutAndReduceShapes(s.shape,l)[1],c=a.util.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(p);const h=hc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=wp({inputs:{a:h,b:p},backend:n});d.push(f);const m=Yd({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},Ph={kernelName:a.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;Pu(s,"min");const l=a.util.parseAxisParam(i,s.shape);let u=l;const c=a.backend_util.getAxesPermutation(u,s.shape.length);let d=s;null!=c&&(d=Dc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=a.backend_util.getInnerMostAxes(u.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[p,h]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(h),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=c&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(o){const e=wc({inputs:{x:y},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,l)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Vh=Yu(((e,t)=>Math.min(e,t))),Wh=mc(a.Minimum,Vh),Uh={kernelName:a.Minimum,backendName:"cpu",kernelFunc:Wh},Gh={kernelName:a.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:o}=r;Pu(s,"mirrorPad");const l=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),c=i.map(((e,t)=>e[0]+s.shape[t])),d="reflect"===o?0:1,p=n.data.get(s.dataId).values,h=s.shape.length,f=a.util.computeStrides(s.shape),m=a.util.sizeFromShape(l),g=l.length,y=a.util.computeStrides(l),b=a.util.getTypedArrayFromDType(s.dtype,m);for(let e=0;e<m;e++){let t=a.util.indexToLoc(e,g,y);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-d:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+d);t=t.map(((e,t)=>e-u[t]));const n=a.util.locToIndex(t,h,f);b[e]=p[n]}return{dataId:n.write(b,l,s.dtype),shape:l,dtype:s.dtype}}},Hh=Yu(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),jh=mc(a.Mod,Hh),qh={kernelName:a.Mod,backendName:"cpu",kernelFunc:jh};function Xh(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=s.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=a.util.parseAxisParam([l],s.shape),c=$h({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=a.backend_util.expandShapeToKeepDim(c.shape,u),p=wc({inputs:{x:c},backend:n,attrs:{shape:d}}),h=Ip({inputs:{a:s,b:p},backend:n}),f=hp({inputs:{x:h},backend:n}),m=Yd({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=wc({inputs:{x:m},backend:n,attrs:{shape:d}}),y=wp({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Kh={kernelName:a.Softmax,backendName:"cpu",kernelFunc:Xh},Qh={kernelName:a.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:o,normalized:l}=r;Pu(s,"multinomial");const u=l?s:Xh({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=u.shape[0],d=u.shape[1],p=n.data.get(u.dataId).values,h=[c,i],f=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),"int32");for(let e=0;e<c;++e){const t=e*d,n=new Float32Array(d-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=du.alea(o.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();f[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){f[a+e]=r;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",f)}};function Yh(e,t,n){const r=a.util.createScalarValue(-1,n);return qd([],t,r,e,n)}const Zh={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Pu(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Yh(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Jh=a.kernel_impls.nonMaxSuppressionV3Impl,ef={kernelName:a.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Pu(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=Jh(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},tf=a.kernel_impls.nonMaxSuppressionV4Impl,nf={kernelName:a.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Pu(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=tf(c,d,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},rf=a.kernel_impls.nonMaxSuppressionV5Impl,af={kernelName:a.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Pu(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=rf(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},sf=Yu(((e,t)=>e!==t?1:0)),of=mc(a.NotEqual,sf,null,"bool"),lf={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:of},uf={kernelName:a.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:i,onValue:o,offValue:l}=r;Pu(s,"oneHot");const u=a.util.sizeFromShape(s.shape),c=new Float32Array(u*i);c.fill(l);const d=n.data.get(s.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(c[e*i+d[e]]=o);return n.makeTensorInfo([...s.shape,i],"int32",c)}};function cf(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=dc({inputs:{input:r},backend:n}),t=cf({inputs:{x:e},backend:n}),a=vd({inputs:{input:r},backend:n}),s=cf({inputs:{x:a},backend:n}),i=lc({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Ap({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const df={kernelName:a.ZerosLike,backendName:"cpu",kernelFunc:cf},pf={kernelName:a.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=dc({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=vd({inputs:{input:a},backend:r}),i=cf({inputs:{x:s},backend:r}),o=lc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Ap({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function hf(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return mp({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=kd({inputs:t.map((e=>{const t=mp({inputs:{input:e},backend:n,attrs:{dim:s}});return l.push(t),t})),backend:n,attrs:{axis:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const ff={kernelName:a.Pack,backendName:"cpu",kernelFunc:hf},mf={kernelName:a.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r;Pu(s,"pad");const l=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),c=n.data.get(s.dataId).values,d=a.util.sizeFromShape(s.shape),p=s.shape.length,h=a.util.computeStrides(s.shape),f=a.util.sizeFromShape(l),m=l.length,g=a.util.computeStrides(l),y=a.util.getTypedArrayFromDType(s.dtype,f);0!==o&&y.fill(o);for(let e=0;e<d;e++){const t=a.util.indexToLoc(e,p,h).map(((e,t)=>e+u[t]));y[a.util.locToIndex(t,m,g)]=c[e]}return{dataId:n.write(y,l,s.dtype),shape:l,dtype:s.dtype}}},gf=Yu(((e,t)=>Math.pow(e,t))),yf=mc(a.Pow,gf),bf={kernelName:a.Pow,backendName:"cpu",kernelFunc:yf};function xf(e,t,n,r){const[s,i]=a.backend_util.computeOutAndReduceShapes(e,r),o=(0,a.upcastType)(t,"int32"),l=a.util.makeZerosTypedArray(a.util.sizeFromShape(s),o),u=a.util.sizeFromShape(i);for(let e=0;e<l.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];l[e]=r}return{outVals:l,outShape:s,outDtype:o}}const vf={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;Pu(s,"prod");const l=s.shape.length,u=a.util.parseAxisParam(i,s.shape),c=a.backend_util.getAxesPermutation(u,l);let d=u,p=s;const h=[];null!=c&&(p=Dc({inputs:{x:s},backend:n,attrs:{perm:c}}),h.push(p),d=a.backend_util.getInnerMostAxes(d.length,l));const f=n.data.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=xf(p.shape,p.dtype,f,d);let b=g;return o&&(b=a.backend_util.expandShapeToKeepDim(g,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,y,m)}};function wf(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.util.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),i=a.util.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}const kf={kernelName:a.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=wf(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Sf=Uu(a.Reciprocal,(e=>1/e)),Nf={kernelName:a.Reciprocal,backendName:"cpu",kernelFunc:Sf},If={kernelName:a.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;Pu(s,"resizeBilinear");const u=a.util.computeStrides(s.shape),[c,d]=l,[p,h,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(a.util.sizeFromShape([p,c,d,m])),b=[i&&c>1?h-1:h,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<c;t++){let n;n=o?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),i=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<d;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),c=i+n*u[2],d=l+n*u[2],p=i+s*u[2],h=l+s*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[d+e],s=t+(g[p+e]-t)*r,i=s+(n+(g[h+e]-n)*r-s)*a;y[v++]=i}}}return n.makeTensorInfo([p,c,d,m],"float32",y)}},Tf={kernelName:a.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;Pu([i,s],"resizeBilinearGrad");const l=a.util.computeStrides(s.shape),[u,c,d,p]=s.shape,[,h,f]=i.shape,m=new Float32Array(u*c*d*p),g=[o&&h>1?c-1:c,o&&f>1?d-1:d],y=[o&&h>1?h-1:h,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(i.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*l[0];for(let e=0;e<h;e++){const n=e*b,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*l[1],i=t+a*l[1],o=n-r,u=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,c=1-a,h=s+n*l[2],f=s+r*l[2],g=i+n*l[2],y=i+r*l[2],b=u*c,k=u*a,S=o*c,N=o*a;for(let e=0;e<p;e++){const t=v[w++];m[h+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*N}}}}return n.makeTensorInfo([u,d,c,p],"float32",m)}},Cf={kernelName:a.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r;Pu(s,"resizeNearestNeighbor");const u=a.util.computeStrides(s.shape),[c,d]=l,[p,h,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(p*c*d*m),b=[i&&c>1?h-1:h,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=o?v*(e+.5):v*e;let r=Math.min(h-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<d;e++){const t=o?w*(e+.5):w*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<m;e++){const t=g[r+e];y[k++]=t}}}}return n.makeTensorInfo([p,c,d,m],s.dtype,y)}},Ef={kernelName:a.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:o}=r;Pu([i,s],"resizeNearestNeighborGrad");const l=a.util.computeStrides(s.shape),u=a.util.computeStrides(i.shape),[c,d,p,h]=s.shape,[,f,m]=i.shape,g=new Float32Array(c*d*p*h),y=n.data.get(i.dataId).values,b=[o&&f>1?d-1:d,o&&m>1?p-1:p],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,S=1/w,N=2*Math.ceil(k)+2,I=2*Math.ceil(S)+2;for(let e=0;e<c;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=t+e*l[1],r=Math.floor(e*k),a=Math.floor(r-N/2);for(let r=0;r<p;r++){const s=n+r*l[2],i=Math.floor(r*S),c=Math.floor(i-I/2);for(let n=0;n<h;n++){let i=0;for(let s=0;s<N;s++){const l=s+a;if(l<0||l>=f)continue;const h=t+l*u[1],g=l*v;if(e===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<I;e++){const t=e+c;if(t<0||t>=m)continue;const a=h+t*u[2],s=t*w;r===Math.min(p-1,o?Math.round(s):Math.floor(s))&&(i+=y[a+n])}}g[s+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},$f={kernelName:a.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;Pu(s,"reverse");const o=s.shape.length,l=a.util.parseAxisParam(i,s.shape);if(0===o)return qu({inputs:{x:s},backend:n});const u=new a.TensorBuffer(s.shape,s.dtype),c=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();l.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},_f={kernelName:a.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:o}=t,l=n,u=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[c,d,p,h]=r.shape,[f,m]=a.backend_util.getImageCenter(o,d,p),g=Math.sin(s),y=Math.cos(s),b=l.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*p*d*h;for(let e=0;e<d;e++){const n=e*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let s=0;s<h;s++){const o=[c,e,r,s],l=o[2],x=o[1];let v=(l-f)*y-(x-m)*g,w=(l-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),v>=0&&v<p&&w>=0&&w<d&&(k=b[t+w*(p*h)+v*h+s]),u[t+n+a+s]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Af=Uu(a.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Rf={kernelName:a.Round,backendName:"cpu",kernelFunc:Af},Ff=pd((e=>1/Math.sqrt(e))),Df=Gu(a.Rsqrt,Ff),Of={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:Df};function Mf(e,t,n,r,s,i,o,l,u,c){const d=[r/s,s],p=e.values,h=t.values;if(0===r)return(0,a.buffer)(n,t.dtype);const f=(0,a.buffer)(d,t.dtype);f.values.fill(u);for(let e=0;e<i;e++){const a=[];let i=0;for(let t=0;t<o;t++){const n=p[e*o+t];a.push(n),i+=n*l[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[i*s+n]+=h[e*s+n]:f.values[i*s+n]=0===t.rank?h[0]:h[e*s+n]}return f}const zf={kernelName:a.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=a.backend_util.calculateShapes(i,s,o),h=Mf(n.bufferSync(s),n.bufferSync(i),o,p,c,u,l,d,0,!0);return n.makeTensorInfo(o,h.dtype,h.values)}},Lf={kernelName:a.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;Pu([r,s,i],"select");const o=r.shape.length,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,d=(0,a.upcastType)(s.dtype,i.dtype),p=a.util.makeZerosTypedArray(a.util.sizeFromShape(s.shape),d);let h=0;const f=0===o||o>1||1===s.shape.length?1:a.util.sizeFromShape(s.shape.slice(1));for(let e=0;e<l.length;e++)for(let t=0;t<f;t++)1===l[e]?p[h++]=u[e]:p[h++]=c[e];return n.makeTensorInfo(s.shape,d,p)}},Bf=a.backend_util.SELU_SCALEALPHA,Pf=a.backend_util.SELU_SCALE,Vf=Uu(a.Selu,(e=>e>=0?Pf*e:Bf*(Math.exp(e)-1))),Wf={kernelName:a.Selu,backendName:"cpu",kernelFunc:Vf},Uf=Uu(a.Sign,(e=>e<0?-1:e>0?1:0)),Gf={kernelName:a.Sign,backendName:"cpu",kernelFunc:Uf},Hf=Uu(a.Sin,(e=>Math.sin(e))),jf={kernelName:a.Sin,backendName:"cpu",kernelFunc:Hf},qf=Uu(a.Sinh,(e=>Math.sinh(e))),Xf={kernelName:a.Sinh,backendName:"cpu",kernelFunc:qf},Kf=Math.log(1.1920928955078125e-7)+2,Qf=Uu(a.Softplus,(e=>{const t=e>-Kf,n=e<Kf,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Yf={kernelName:a.Softplus,backendName:"cpu",kernelFunc:Qf},Zf={kernelName:a.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;Pu([s],"spaceToBatchND");const l=a.util.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let e=1+i.length;e<s.shape.length;++e)u.push([0,0]);const c=mf.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=a.backend_util.getReshaped(c.shape,i,l,!1),p=a.backend_util.getPermuted(d.length,i.length,!1),h=a.backend_util.getReshapedPermuted(c.shape,i,l,!1),f=wc({inputs:{x:c},backend:n,attrs:{shape:d}}),m=Dc({inputs:{x:f},backend:n,attrs:{perm:p}}),g=wc({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Jf(e,t,n,r,s,i,o){const l=t[0],u=i[0],c=new Array(u),d=new Array(l),p=t[1];if(0===u){if(0!==l)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${l}`);return[a.util.getArrayFromDType(n,0),[0,p],a.util.getArrayFromDType(s,0),c,d]}let h=!0,f=0;const m=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++m[n],h=h&&n>=f,f=n}let g=!0;for(let e=0;e<u;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&h){const t=e,n=r;for(let e=0;e<l;++e)d[e]=e;return[t,[l,p],n,c,d]}{const t=m[u-1],i=a.util.getArrayFromDType(n,t*p),h=a.util.getArrayFromDType(s,t),f=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*p],a=f[n],s=(0===n?0:m[n-1])+a;f[n]++;for(let n=0;n<p;++n)i[s*p+n]=e[t*p+n];h[s]=r[t],d[t]=s}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;h[t]=o}return[i,[t,p],h,c,d]}}const em={kernelName:a.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,p,h,f,m]=Jf(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function tm(e,t,n,r,s){const i=a.util.sizeFromShape(r),o=t[0],l=s.length,u=[];let c=1,d=-1;for(let e=0;e<l;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${e}`);d=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,u.push(t)}}if(-1!==d){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${u}`);u[d]=e}const p=a.util.sizeFromShape(u);if(p!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${p}. inputShape=${r} outputShape=${u}`);const h=r.length,f=[];if(h>0){f[h-1]=1;for(let e=h-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const m=[];if(l>0){m[l-1]=1;for(let e=l-2;e>=0;--e)m[e]=m[e+1]*u[e+1]}const g=a.util.getArrayFromDType(n,o*l);for(let t=0;t<o;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*f[r];for(let e=0;e<l;++e)g[t*l+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,l],u]}const nm={kernelName:a.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,d]=tm(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function rm(e,t,n,r,s,i=!1,o=0){const l=r.length;if(l!==s.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],c=u[1],d=l>0?s[l-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=a.util.getArrayFromDType(n,h);if(0===l)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<l){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=d)throw new Error(`Segment id ${b} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<c;t++)f[b*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>l)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}const am={kernelName:a.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=rm(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},sm={kernelName:a.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=rm(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},im={kernelName:a.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:p,outputSize:h}=a.backend_util.calculateShapes(i,s,l),f=Mf(n.bufferSync(s),n.bufferSync(i),l,h,d,c,u,p,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(l,f.dtype,f.values)}},om={kernelName:a.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,l=a.util.parseAxisParam(o,s.shape)[0],u=a.backend_util.prepareSplitSize(s,i,l),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map((e=>{const t=[...d];t[l]=e;const r=id({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r}))}},lm=Uu(a.Sqrt,(e=>Math.sqrt(e))),um={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:lm},cm={kernelName:a.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Pu(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},dm=Yu(((e,t)=>{const n=e-t;return n*n})),pm=mc(a.SquaredDifference,dm),hm={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:pm},fm=Uu(a.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),mm={kernelName:a.Step,backendName:"cpu",kernelFunc:fm};function gm(e,t,n,r){const s=(0,a.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const ym={kernelName:a.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;Pu(s,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=a.slice_util.sliceInfo(s.shape,i,o,l,u,c,d,p,h),v=wc({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=id({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=wc({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,s.dtype,[]);else{const e=gm(x,n.bufferSync(v),g,m);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=wc({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}};class bm{constructor(e,t,n,r,s,i){this.separator=a.util.encodeString(e),this.nGramWidths=t,this.leftPad=a.util.encodeString(n),this.rightPad=a.util.encodeString(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),c=s-(l+u),d=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const h=n[r+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=a.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const o=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],l=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,l,s),a+=l})),this.preserveShort&&a===i[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,l=1;this.createNGrams(e,r,o,a,l,i)}}return[o,i]}}function xm(e,t,n,r,a,s,i,o){return new bm(n,r,a,s,i,o).compute(e,t)}const vm={kernelName:a.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=xm(p,h,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function wm(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function km(e,t,n){const r=e.length,s=[];let i=0,o=0;const l=new Array(r);for(let a=0;a<r;++a){const r=wm(e[a],t,n),u=r.length;l[a]=u,i+=u,o=Math.max(o,u),s.push(...r)}const u=a.util.getArrayFromDType("int32",2*i),c=new Array(i),d=[r,o];let p=0;for(let e=0;e<r;++e)for(let t=0;t<l[e];++t)u[2*p]=e,u[2*p+1]=t,c[p]=s[p],++p;return[u,c,d]}const Sm={kernelName:a.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=km(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Nm(e,t){const n=a.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Im={kernelName:a.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=Nm(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},Tm=Uu(a.Tan,(e=>Math.tan(e))),Cm={kernelName:a.Tan,backendName:"cpu",kernelFunc:Tm},Em=Uu(a.Tanh,(e=>Math.tanh(e))),$m={kernelName:a.Tanh,backendName:"cpu",kernelFunc:Em};function _m(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,a.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const Am={kernelName:a.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Pu(a,"tile");const i=_m(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},Rm=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Fm(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);Fm(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}const s=e[t];let i=n,o=r;for(a.util.swap(e,n,t),Rm(e[r],s)>0&&a.util.swap(e,n,r);i<o;){for(a.util.swap(e,i,o),i++,o--;Rm(e[i],s)<0;)i+=1;for(;Rm(e[o],s)>0;)o-=1}0===Rm(e[n],s)?a.util.swap(e,n,o):(o+=1,a.util.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function Dm(e,t,n,r,s){const i=t[t.length-1],[o,l]=[e.length/i,i],u=a.util.getTypedArrayFromDType(n,o*r),c=a.util.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*l,a=e.subarray(n,n+l);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(Fm(i,r),i=i.slice(0,r)),s&&i.sort(Rm);const o=t*r,d=u.subarray(o,o+r),p=c.subarray(o,o+r);for(let e=0;e<r;e++)d[e]=i[e].value,p[e]=i[e].index}const d=t.slice();return d[d.length-1]=r,[(0,a.buffer)(d,n,u),(0,a.buffer)(d,"int32",c)]}const Om={kernelName:a.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Pu(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=Dm(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},Mm={kernelName:a.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:c}=n,[d,p,h,f]=s.shape,[m,g]=null!=c?c:[p,h],y=[d,m,g,f],b=a.util.computeStrides(s.shape),x=b[0],v=b[1],w=b[2],k=a.util.getTypedArrayFromDType(s.dtype,a.util.sizeFromShape(y));k.fill(u);const S=r.data.get(s.dataId).values,N=r.data.get(i.dataId).values;for(let e=0;e<d;++e){const t=1===i.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<g;++r)for(let a=0;a<f;++a){let s;const i=t[6]*r+t[7]*n+1;if(0===i)continue;const c=(t[0]*r+t[1]*n+t[2])/i,d=(t[3]*r+t[4]*n+t[5])/i,f=zm(c,h,l),m=zm(d,p,l);switch(o){case"nearest":s=Bm(S,p,h,x,v,w,e,m,f,a,u);break;case"bilinear":s=Pm(S,p,h,x,v,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}k[e*x+n*v+r*w+a]=s}return r.makeTensorInfo(y,s.dtype,k)}return{dataId:r.write(k,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function zm(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return a.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return a.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return a.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Lm(e,t,n,r,a,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:c}function Bm(e,t,n,r,a,s,i,o,l,u,c){return Lm(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,c)}function Pm(e,t,n,r,a,s,i,o,l,u,c){const d=Math.floor(o),p=Math.floor(l),h=d+1,f=p+1;return(h-o)*((f-l)*Lm(e,t,n,r,a,s,i,d,p,u,c)+(l-p)*Lm(e,t,n,r,a,s,i,d,f,u,c))+(o-d)*((f-l)*Lm(e,t,n,r,a,s,i,h,p,u,c)+(l-p)*Lm(e,t,n,r,a,s,i,h,f,u,c))}function Vm(e,t,n,r){const s=a.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o={},l=new Int32Array(n[s]),u=new a.TensorBuffer(i,r,e),c=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])l[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,l[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const h=new a.TensorBuffer(p,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)h.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:l}}const Wm={kernelName:a.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Pu(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=Vm(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},Um={kernelName:a.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=id({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});p[e]=wc({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},Gm={kernelName:a.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r;Pu(s,"unsortedSegmentSum");const l=[],u=[],c=s.shape.length-i.shape.length;let d=i;for(let e=0;e<c;++e){const t=mp({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,u.push(t)}for(let e=0;e<o;++e){const t=a.util.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=np({inputs:{a:r,b:d},backend:n}),o=hc({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),c=Kd({inputs:{a:o,b:s},backend:n}),p=Yd({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});l.push(p),u.push(r),u.push(i),u.push(o),u.push(c),u.push(p)}const p=hf({inputs:l,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Hm=[Ic,Cc,$c,Ac,vc,Rc,Mc,zc,Lc,Bc,Vc,Uc,Hc,Xc,Qc,ed,td,nd,rd,Nc,ad,ld,dd,fc,md,yd,uc,bd,Sd,Td,Cd,Id,$d,_d,Ed,Rd,Dd,Od,Md,zd,Ld,Pd,Vd,Wd,Ud,Gd,jd,Hd,kp,Jd,ju,ep,rp,dp,fp,gp,xp,_p,Rp,Fp,Mp,Bp,Pp,Vp,Up,Hp,Xp,Yp,Xu,Zp,wd,eh,nh,ah,Qu,oh,ch,ph,mh,yh,vh,kh,Ih,Th,Ch,Fh,Dh,Oh,Mh,zh,Lh,_h,Bh,Ph,Uh,Gh,qh,Qh,Qd,Zh,ef,nf,af,lf,uf,pf,ff,mf,bf,ec,vf,kf,pc,Nf,nc,ac,kc,If,Tf,Cf,Ef,$f,_f,Rf,Of,zf,Lf,Wf,ic,Gf,jf,Xf,od,Kh,Yf,Zf,em,nm,am,sm,im,om,um,cm,hm,mm,ym,vm,Sm,Im,Tp,Zd,Cm,$m,Am,Om,Oc,Mm,Wm,Um,Gm,df];for(const e of Hm)(0,a.registerKernel)(e);const jm={},qm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Xm(e){if(!(e in jm)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete jm[e]}),!1),1===e?t.getContext("webgl",qm)||t.getContext("experimental-webgl",qm):t.getContext("webgl2",qm)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;jm[e]=t}const t=jm[e];return t.isContextLost()?(delete jm[e],Xm(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),jm[e])}var Km,Qm,Ym;function Zm(e,t){return[t,e]}function Jm(e){const t=a.util.sizeFromShape(e),n=Math.ceil(t/4);return a.util.sizeToSquarishShape(n)}function eg(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function tg(e,t){const n=e;let r,s,i,o,l,u,c,d,p,h;return 2===(0,a.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,s=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function ng(e,t){const n=t();return(0,a.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function rg(e){return!!((0,a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function ag(e,t){return pg(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Km||(Km={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Qm||(Qm={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ym||(Ym={}));const sg=/ERROR: [0-9]+:([0-9]+):/g;function ig(e,t){if(ng(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function og(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(ng(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),ng(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),ng(e,(()=>e.enableVertexAttribArray(o))),!0)}function lg(e,t,n,r){ng(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),ng(e,(()=>e.activeTexture(e.TEXTURE0+n))),ng(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),ng(e,(()=>e.uniform1i(n,r)))}function ug(e,t,n){ng(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ng(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function cg(e,t){ng(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ng(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function dg(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function pg(e,t,n){const r=ng(e,(()=>t()));if(null==r)throw new Error(n);return r}function hg(e,t=2){return a.util.sizeFromShape(e.slice(0,e.length-t))}function fg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function mg(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[hg(e),...fg(e)]),t}function gg(e){return e%2==0}function yg(e,t){if(e=e.slice(-2),t=t.slice(-2),a.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(gg(n)&&gg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&gg(e[0])&&gg(t[0])}let bg,xg;function vg(e,t){return null!=e.getExtension(t)}function wg(e){try{if(null!=Xm(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function kg(e){const t=tg(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Sg(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Ng=(0,a.env)();function Ig(){let e,t,n,r,s,i,o,l,u,c;return 2===(0,a.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",l="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function Tg(e,t,n="index"){const r=a.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function Cg(e,t,n="index"){const r=a.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function Eg(e){const t=a.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Ng.registerFlag("HAS_WEBGL",(()=>Ng.getNumber("WEBGL_VERSION")>0)),Ng.registerFlag("WEBGL_VERSION",(()=>wg(2)?2:wg(1)?1:0)),Ng.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Ng.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Ng.get("WEBGL_VERSION"))),Ng.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Ng.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Ng.registerFlag("WEBGL_PACK",(()=>Ng.getBool("HAS_WEBGL"))),Ng.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_CLIP",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_PACK_REDUCE",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_CONV_IM2COL",(()=>Ng.getBool("WEBGL_PACK"))),Ng.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==bg){const t=Xm(e);bg=t.getParameter(t.MAX_TEXTURE_SIZE)}return bg}(Ng.getNumber("WEBGL_VERSION")))),Ng.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==xg){const t=Xm(e);xg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,xg)}(Ng.getNumber("WEBGL_VERSION")))),Ng.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Ng.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Xm(e);return t=vg(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:vg(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Ng.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Ng.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.device_util.isMobile())),Ng.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Xm(e);if(1===e){if(!vg(t,"OES_texture_float"))return!1}else if(!vg(t,"EXT_color_buffer_float"))return!1;return kg(t)}(Ng.getNumber("WEBGL_VERSION")))),Ng.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Ng.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ng.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Ng.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=Xm(e);if(1!==e){if(vg(t,"EXT_color_buffer_float"))return kg(t);const e="EXT_color_buffer_half_float";if(vg(t,e)){const n=t.getExtension(e);return function(e,t){const n=tg(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!vg(t,"OES_texture_float")&&!!vg(t,"WEBGL_color_buffer_float")&&kg(t)}(Ng.getNumber("WEBGL_VERSION")))),Ng.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Ng.getNumber("WEBGL_VERSION"))&&null!=Xm(e).fenceSync;var e})),Ng.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Ng.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Ng.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Ng.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>a.device_util.isMobile()&&Ng.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Ng.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Ng.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Ng.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Ng.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const $g="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class _g{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Km.DENSE;const t=Jm(e),n=Ig();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Tg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Ag{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Km.DENSE;const t=Jm(e),n=Ig();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Tg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Rg{constructor(e){this.variableNames=["A"],this.outTexUsage=Qm.DOWNLOAD;const t=Ig();this.outputShape=e,this.userCode=`\n      ${$g}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Fg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Qm.DOWNLOAD;const t=Ig();this.outputShape=e,this.userCode=`\n      ${$g}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Dg{constructor(e,t,n=!1){this.variableNames=["A"];const r=Ig(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Eg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Og{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Ig(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Eg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function Mg(e,t,n,r,s,i){!function(e,t){const n=(0,a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return pg(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),l=e.TEXTURE_2D;return ng(e,(()=>e.bindTexture(l,o))),ng(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ng(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ng(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),ng(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),ng(e,(()=>e.texImage2D(l,0,r,t,n,0,s,i,null))),ng(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function zg(e){return e.internalFormatFloat}function Lg(e){return e.internalFormatHalfFloat}function Bg(e){return e.downloadTextureFormat}function Pg(e){return e.internalFormatPackedFloat}function Vg(e){return e.internalFormatPackedHalfFloat}class Wg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,a.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){jm[e]=t}(t,e)):this.gl=Xm(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,a.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=ag(this.gl,e),vg(this.gl,t))this.textureHalfFloatExtension=ag(this.gl,t);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),vg(this.gl,r))this.colorBufferHalfFloatExtension=ag(this.gl,r);else if((0,a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",vg(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!vg(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=pg(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ng(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ng(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=pg(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ng(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ng(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return pg(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=tg(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ng(e,(()=>e.finish())),ng(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ng(e,(()=>e.deleteFramebuffer(this.framebuffer))),ng(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ng(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ng(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Zm(t,n);return Mg(e,a,s,zg(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Zm(t,n);return Mg(e,a,s,Lg(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Zm(t,n);return Mg(e,a,s,Bg(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){ng(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?ng(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):ng(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ng(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,l;ng(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),ng(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),ng(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=eg(t,n);return Mg(e,a,s,Vg(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=eg(t,n);return Mg(e,a,s,Pg(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(cg(this.gl,this.framebuffer),this.outputTexture=null),ng(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=Zm(t,n),i=new Uint8Array(t*n*4);return ng(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=eg(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();ng(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return ng(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),ng(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ng(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,a.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return ng(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=pg(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ng(e,(()=>e.shaderSource(n,t))),ng(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=sg.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map(((e,t)=>a.util.rightPad((t+1).toString(),i)+e));let l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);const u=o.slice(0,r-1),c=o.slice(r-1,r),d=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${a.util.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=Ig();return function(e,t){const n=pg(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ng(e,(()=>e.shaderSource(n,t))),ng(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return pg(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return ng(t,(()=>t.attachShader(r,this.vertexShader))),ng(t,(()=>t.attachShader(r,n))),function(e,t){if(ng(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&ig(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return ng(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),og(e,t,"clipSpacePos",n,3,20,0)&&og(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&ng(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ig(this.gl,this.program),ng(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return pg(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ng(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),lg(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=eg(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ig(this.gl,this.program),dg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),ng(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ng(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=ag(this.gl,2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||a.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ug(this.gl,e,this.framebuffer),this.debug&&dg(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ug(this.gl,this.outputTexture,this.framebuffer),this.debug&&dg(this.gl)):cg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;ug(r,e,this.framebuffer),this.debug&&dg(r),this.outputTexture=e,ng(r,(()=>r.viewport(0,0,t,n))),ng(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),ng(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Ug}=a.backend_util;function Gg(e,t,n){const r=[];if(e.forEach((e=>{const t=a.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ey(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?jg(e,r):Hg(e,r);const i=e.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=Ug(e.shapeInfo.logicalShape,t.logicalShape),u=Jg(o),c=o-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let h="";h=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===a.util.sizeFromShape(e.shapeInfo.logicalShape),g=1===a.util.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&a.util.arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Jg(u),d=Ug(e.shapeInfo.logicalShape,t.logicalShape),p=u-l;let h;const f=["x","y","z","w","u","v"];h=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,l=Ig(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qg}\n    ${Xg}\n    ${Kg}\n  `}(l);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return a.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Cg(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=Tg(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Cg(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=Tg(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Tg(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Tg(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),n.packedInputs&&(p+=Qg),[p,u,d,s,c,i,n.userCode].join("\n")}function Hg(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Yg(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Zg(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Yg(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&a.util.arraysEqual(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:l}=a.util.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${Hg(ty(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${ny(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Zg(e)}\n      }\n    `;const c=i[0],d=i[1],p=Yg(r);return 1===d?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],o=n[2],{newShape:l,keptDims:u}=a.util.squeezeShape(n),c=l;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Hg(ty(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${ny(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${Zg(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Yg(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${i} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:c}=a.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Hg(ty(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${ny(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${l}, ${o}, ${i}, 1)));\n        ${Zg(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=Yg(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=a.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Hg(ty(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ny(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${Zg(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${Yg(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=a.util.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Hg(ty(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ny(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Zg(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${Yg(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jg(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Ig().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=Ig();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,o=i[0],l=i[1],u=Ig();if(null!=i&&a.util.arraysEqual(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${jg(ty(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ny(s,r)});\n        }\n      `}const o=Ig();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Ig();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(s[i-1]/2);let p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const qg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Yg(e){return`offset${e}`}function Zg(e){const t=e.name,n=a.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Jg(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ey(e,t,n){const{newShape:r}=a.util.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!a.util.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t}}function ty(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ny(e,t){return t.map((t=>e[t])).join(", ")}function ry(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!a.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!a.util.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function ay(e){return(0,a.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}const{addImpl:sy,bincountImpl:iy,bincountReduceImpl:oy,ceilImpl:ly,concatImpl:uy,equalImpl:cy,expImpl:dy,expm1Impl:py,floorImpl:hy,gatherNdImpl:fy,gatherV2Impl:my,greaterImpl:gy,greaterEqualImpl:yy,lessImpl:by,lessEqualImpl:xy,linSpaceImpl:vy,logImpl:wy,maxImpl:ky,maximumImpl:Sy,minimumImpl:Ny,multiplyImpl:Iy,negImpl:Ty,notEqualImpl:Cy,prodImpl:Ey,rangeImpl:$y,rsqrtImpl:_y,simpleAbsImpl:Ay,sliceImpl:Ry,sparseFillEmptyRowsImpl:Fy,sparseReshapeImpl:Dy,sparseSegmentReductionImpl:Oy,stridedSliceImpl:My,stringNGramsImpl:zy,stringSplitImpl:Ly,stringToHashBucketFastImpl:By,subImpl:Py,tileImpl:Vy,topKImpl:Wy,transposeImpl:Uy,uniqueImpl:Gy}=e;function Hy(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function jy(e,t){return 1===t?[e]:Hy(e,t)}class qy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=jy("rc",t),r=Jg(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Xy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Tg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Eg(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Ky{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Yy(t,n),a=Zy(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Qy(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===Ym.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Ym.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Ym.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Ym.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Ym.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Yy(n,r),i=Zy(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Qy(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,a.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Qy(e,t,n,r,a){const s=function(e,t){switch(e){case Ym.PACKED_2X2_FLOAT32:return Pg(t);case Ym.PACKED_2X2_FLOAT16:return Vg(t);case Ym.UNPACKED_FLOAT32:return zg(t);case Ym.UNPACKED_FLOAT16:return Lg(t);case Ym.PACKED_4X1_UNSIGNED_BYTE:return Bg(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=eg(e[0],e[1]);i=t*n}else{const[t,n]=Zm(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function Yy(e,t){if(e===Qm.UPLOAD)return Ym.PACKED_2X2_FLOAT32;if(e===Qm.RENDER||null==e)return function(e){return(0,a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ym.PACKED_2X2_FLOAT32:Ym.UNPACKED_FLOAT32:e?Ym.PACKED_2X2_FLOAT16:Ym.UNPACKED_FLOAT16}(t);if(e===Qm.DOWNLOAD||e===Qm.PIXELS)return Ym.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Zy(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Jy{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ay(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const eb="return abs(x);",tb="return x;";class nb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ay(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class rb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=jy("rc",t),r=Jg(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const ab=a.kernel_impls.whereImpl,sb={},ib=(0,a.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class ob extends a.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,a.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=Xm((0,a.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,a.env)().getNumber("WEBGL_VERSION"))in sb||(sb[t]={}),sb[t]),this.gpgpu=new Wg(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Ky(this.gpgpu),this.numMBBeforeWarning=null==(0,a.env)().global.screen?1024:(0,a.env)().global.screen.height*(0,a.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.DataStorage(this,(0,a.engine)())}nextDataId(){return ob.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,a.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,a.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Qm.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if((0,a.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Qm.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new nb(o,tb):new Jy(o,tb);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,d;if(u&&(c=a.util.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=a.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=a.util.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=s){let t;t=l?new nb(r,tb):new Jy(r,tb);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,a.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,d=null;if("complex64"!==i&&(0,a.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...Jm(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=a.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=a.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=d){const e=this.gpgpu.gl;ng(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,a.engine)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>a.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!rg(n)){if((0,a.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.util.sizeFromShape(t);if((0,a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Jm(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=(0,a.env)().getBool("WEBGL_PACK")&&!0===r,o=i?mg(t):t,l=i?new Fg(o):new Rg(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=a.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=a.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.util.now(),endMs:null}}endTimer(e){return(0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.util.now(),e)}async getQueryTime(e){if((0,a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ib){return(0,a.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&a.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){a.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ab(e.shape,t)}packedUnaryOp(e,t,n){const r=new nb(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,a.engine)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ay(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,eb,e.dtype);const t=new Jy(e.shape,eb),n=this.compileAndRun(t,[e]);return(0,a.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map((e=>a.util.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,a.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new rb(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new qy(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[hg(e.shape),...fg(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[hg(t),...fg(t)],s=new Xy(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=mg(r);let i;return i=n?new Ag(s):new _g(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Km.DENSE){const t=Jm(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===a.util.sizeFromShape(i.shape))return o.values=a.util.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.util.sizeFromShape(t.shape)<=(0,a.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!yg(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:l}=ey(e.packedInputs,t.shape,i);let u="",c="",d="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=a.util.computeStrides(l);d=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${l[0]>1}_${l[1]>1}`;const p=t.shape.length,h=2===p&&a.util.arraysEqual(t.shape,i),f=1===a.util.sizeFromShape(t.shape),m=a.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&a.util.arraysEqual(i,n.texData.texShape),y=e.packedInputs||p>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${p}_${g}_${o}_${l.length}_${f}_${m}_${h}_${u}_${c}_${d}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${(0,a.env)().getNumber("WEBGL_VERSION")}`,i}(e,u,c),p=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Gg(s,o,t),u=e.createProgram(l);let c=null;const d=e.getUniformLocation(u,"NAN",!1);1===(0,a.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const p=!1,h={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];h[r]=e.getUniformLocation(u,r,p),h[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,p),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(u,`${r}Shape`,p),m[`${r}TexShape`]=e.getUniformLocation(u,`${r}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(u,"outShape",p),b=e.getUniformLocation(u,"outShapeStrides",p),y=e.getUniformLocation(u,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(u,t.name,p)})),{program:t,source:l,webGLProgram:u,uniformLocations:h,customUniformLocations:x,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,u,c))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),function(e,t,n,r,s){t.program.enableShapeUniforms||(ry(t.inShapeInfos,n),ry([t.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,a.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],i=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],l=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(l){const{uniformShape:r}=ey(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(l,new Int32Array(r));break;case 2:e.gl.uniform2iv(l,new Int32Array(r));break;case 3:e.gl.uniform3iv(l,new Int32Array(r));break;case 4:e.gl.uniform4iv(l,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(a.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)}));const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,a.env)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=a.util.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,a.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,a.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,a.tidy)((()=>{if(!(0,a.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,a.env)().getBool("DEBUG");(0,a.env)().set("DEBUG",!1);const t=this.abs((0,a.scalar)(1e-8)).dataSync()[0];if((0,a.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=a.util.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=(0,a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=a.util.squeezeShape(e);e=t.newShape}let r=a.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=hg(e);let n=2,s=2;return e.length&&([n,s]=fg(e)),r=t*(n/2)*(s/2),a.util.sizeToSquarishShape(r).map((e=>2*e))}return a.util.sizeToSquarishShape(r)}(n,l),t.texShape=d),null!=s){const e=mg(n);let i,o=d[1],p=d[0];const h=s instanceof Uint8Array;l?([o,p]=eg(d[0],d[1]),i=new Og(e,[p,o],h)):i=new Dg(e,[p,o],h);const f=this.makeTensorInfo([p,o],r);this.texData.get(f.dataId).usage=h?Qm.PIXELS:Qm.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,p,s);const m=!0,g=this.runWebGLProgram(i,[f],r,null,m),y=this.texData.get(g.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=a.util.now()-c)}else{const e=this.acquireTexture(d,o,r,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.util.bytesPerElement(t)}}ob.nextDataId=0,a.device_util.isBrowser()&&(0,a.registerBackend)("webgl",(()=>new ob),2);class lb{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ay(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class ub{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ay(s);let i="";if(r)if(0===s||1===a.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${Jg(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=jy("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function cb(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const db={kernelName:a.Identity,backendName:"webgl",kernelFunc:cb};function pb(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=cb({inputs:{x:r},backend:n}),l=cb({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}const hb={kernelName:a.Complex,backendName:"webgl",kernelFunc:pb},fb="return (a < 0.) ? b * a : a;",mb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",gb={kernelName:a.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,o=n.makeTensorInfo([],"float32",a.util.createScalarValue(i,"float32")),l=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ub(mb,s.shape,o.shape):new lb(fb,s.shape,o.shape),u=n.runWebGLProgram(l,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),u}},yb="return (a < 0.) ? b * a : a;",bb="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",xb={kernelName:a.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ub(bb,r.shape,s.shape):new lb(yb,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}};function vb({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,l=i,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){const e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new nb(o.shape,t):new Jy(o.shape,e),l.runWebGLProgram(c,[o],u)}}function wb({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:l})=>{const{a:u,b:c}=o,d=l;if(r&&"complex64"===u.dtype){const t=d.texData.get(u.dataId),n=d.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new lb(e,u.shape,c.shape);return d.runWebGLProgram(o,[s,i],(0,a.upcastType)(n.dtype,r.dtype))})),i=pb({inputs:{real:r,imag:s},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(s),i}const p=i||(0,a.upcastType)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([u,c]))&&null!=s){const e=d.texData.get(u.dataId).values,t=d.texData.get(c.dataId).values,n="string"===u.dtype?a.backend_util.fromUint8ToStringArray(e):e,r="string"===u.dtype?a.backend_util.fromUint8ToStringArray(t):t,[i,o]=s(u.shape,c.shape,n,r,p),l=d.makeTensorInfo(o,p);return d.texData.get(l.dataId).values=i,l}let h;return h=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new ub(t,u.shape,c.shape,n):new lb(e,u.shape,c.shape),d.runWebGLProgram(h,[u,c],p)}}function kb(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?bb:yb;if("leakyrelu"===e)return t?mb:fb;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Sb{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Nb{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Ib="return a * b;";function Tb(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=a.backend_util.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Nb("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new Nb("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=pb({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=Iy(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let o;return o=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ub(Ib,r.shape,s.shape):new lb(Ib,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}const Cb={kernelName:a.Multiply,backendName:"webgl",kernelFunc:Tb};function Eb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,o=n,l=a.util.sizeFromShape(s.shape),u=a.util.inferFromImplicitShape(i,l),c=a.util.sizeFromShape(u);a.util.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(s.dataId);return!d.isPacked||yg(s.shape,u)||null!==d.texture&&yg(d.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[hg(e.shape),...fg(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[hg(t),...fg(t)],i=new Xy(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,u,o)}const $b={kernelName:a.Reshape,backendName:"webgl",kernelFunc:Eb};class _b{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${a.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Ab{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function Rb(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,d;c="mean"===n?0===a?new _b({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new _b({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Ab({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=i,i=r.runWebGLProgram(c,[i],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return i}class Fb{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Jg(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Db{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Jg(this.rank),a=Hy("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Ob(e,t,n){const r=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Db(e.shape,t):new Fb(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Mb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r;return function(e,t,n,r){const s=t,i=e.shape.length,o=a.util.parseAxisParam(s,e.shape);let l=o;const u=a.backend_util.getAxesPermutation(l,i),c=null!=u;let d=e;c&&(d=Ob(e,u,r),l=a.backend_util.getInnerMostAxes(l.length,i)),a.backend_util.assertAxesAreInnerMostDims("sum",l,i);const[p,h]=a.backend_util.computeOutAndReduceShapes(d.shape,l);let f=p;n&&(f=a.backend_util.expandShapeToKeepDim(p,o));const m=a.util.sizeFromShape(h),g=Eb({inputs:{x:d},attrs:{shape:[a.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Rb(g,(0,a.sumOutType)(e.dtype),"sum",r),b=Eb({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(d),b}(s,i,o,n)}const zb={kernelName:a.Sum,backendName:"webgl",kernelFunc:Mb};function Lb(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=Uy(e,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype),i.texData.get(u.dataId).values=t}else u=Ob(a,s,i);return u}const Bb={kernelName:a.Transpose,backendName:"webgl",kernelFunc:Lb};function Pb({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,d=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=a.util.sizeFromShape(g),x=a.util.sizeFromShape(y),v=b===x||1===b||1===x;a.util.assert(c>=2&&d>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);a.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,p,f]:[b,f,p],S=r?[x,m,h]:[x,h,m],N=Eb({inputs:{x:e},backend:s,attrs:{shape:k}}),I=Eb({inputs:{x:t},backend:s,attrs:{shape:S}}),T=[N,I],C=Math.max(b,x),E=n?N.shape[1]:N.shape[2],$=null!=i,_=null!=o,A="leakyrelu"===u,R=null!=u?kb(u,!0):null;let F;if((1===f||1===m)&&E>1e3&&!1===($||_||A||null!=R)){let e=N,t=I;n&&(e=Lb({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=Lb({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),T.push(t));const a=1===m;let i=e;1!==m&&(i=Eb({inputs:{x:e},backend:s,attrs:{shape:[C,E,1]}}),T.push(i));const o=1===m?2:1;let l=t;a&&(l=Eb({inputs:{x:t},backend:s,attrs:{shape:[C,1,E]}}),T.push(l));const u=Tb({inputs:{a:i,b:l},backend:s});F=Mb({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{const u=(0,a.upcastType)(e.dtype,t.dtype),c=new Sb(k,S,[C,f,m],n,r,$,R,_,A),d=[N,I];if(null!=i&&d.push(i),_&&d.push(o),A){const e=s.makeTensorInfo([],"float32",a.util.createScalarValue(l,"float32"));d.push(e),T.push(e)}F=s.runWebGLProgram(c,d,u)}const D=Eb({inputs:{x:F},backend:s,attrs:{shape:w}});T.push(F);for(const e of T)s.disposeIntermediateTensorInfo(e);return D}const Vb={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return Pb({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},Wb="return abs(x);",Ub={kernelName:a.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Ay(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nb(r.shape,Wb):new Jy(r.shape,Wb),n.runWebGLProgram(s,[r],r.dtype)}},Gb=vb({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Hb={kernelName:a.Acos,backendName:"webgl",kernelFunc:Gb},jb=vb({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),qb={kernelName:a.Acosh,backendName:"webgl",kernelFunc:jb},Xb="return a + b;",Kb=wb({opSnippet:Xb,packedOpSnippet:Xb,supportsComplex:!0,cpuKernelImpl:sy}),Qb={kernelName:a.Add,backendName:"webgl",kernelFunc:Kb};class Yb{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Zb{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Jb={kernelName:a.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return cb({inputs:{x:s[0]},backend:r});if(s.length>(0,a.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>(0,a.upcastType)(e,t))),o=s.map((e=>e.shape)),l=(0,a.env)().getBool("WEBGL_PACK")?new Zb(s[0].shape,o):new Yb(s[0].shape,o);return r.runWebGLProgram(l,s,i)}},ex={kernelName:a.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let p=s;null!=d&&(p=Lb({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,l)),a.backend_util.assertAxesAreInnerMostDims("all",c,l);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Eb({inputs:{x:p},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Rb(m,m.dtype,"all",n);let y;return y=Eb(o?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},tx={kernelName:a.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let p=s;null!=d&&(p=Lb({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,l)),a.backend_util.assertAxesAreInnerMostDims("any",c,l);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Eb({inputs:{x:p},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Rb(m,m.dtype,"any",n);let y;return y=Eb(o?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class nx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class rx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=Jg(l),c=jy("coords",l);let d,p;if(1===i){p=l+1;const e=Jg(p);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else p=l,d=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=jy("sourceLocR",p-1).concat("inIdx.r"),y=jy("sourceLocG",p-1).concat("inIdx.g"),b=jy("sourceLocB",p-1).concat("inIdx.b"),x=jy("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ax(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const o=a.backend_util.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new nx(l,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(u,c,"int32");if(1===d.shape[1])return d;const p=ax(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function sx(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=s[s.length-1],o=a.backend_util.computeOptimalWindowSize(i),l=new rx(s,o,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const r=sx(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function ix(e,t,n,r){const s=[n];if(a.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,a.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=a.backend_util.computeOutAndReduceShapes(t.shape,s),l=a.util.sizeFromShape(o),u=Eb({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});n.push(u);const c=ax(e,u,r);n.push(c);const d=Eb({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return sx(e,t,r)}const ox={kernelName:a.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=Lb({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const d=ix(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},lx={kernelName:a.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const l=a.backend_util.getAxesPermutation(o,s.shape.length);let u=s;const c=[];null!=l&&(u=Lb({inputs:{x:s},backend:n,attrs:{perm:l}}),c.push(u),o=a.backend_util.getInnerMostAxes(o.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const d=ix(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ux=vb({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),cx={kernelName:a.Asin,backendName:"webgl",kernelFunc:ux},dx=vb({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),px={kernelName:a.Asinh,backendName:"webgl",kernelFunc:dx},hx=vb({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),fx={kernelName:a.Atan,backendName:"webgl",kernelFunc:hx},mx=wb({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),gx={kernelName:a.Atan2,backendName:"webgl",kernelFunc:mx},yx=vb({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),bx={kernelName:a.Atanh,backendName:"webgl",kernelFunc:yx};class xx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class vx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const wx={kernelName:a.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Sg(s,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))return cb({inputs:{x:s},backend:n});const d=new xx(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},kx={kernelName:a.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],l,u,c),p=new vx(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class Sx{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nx{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ix={kernelName:a.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,p=a.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),h=new Nx(p);return n.runWebGLProgram(h,[s],o.dtype)}},Tx={kernelName:a.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i;Sg([s,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=a.backend_util.computePool2DInfo(o.shape,l,u,1,c),p=new Sx(d);return n.runWebGLProgram(p,[s],o.dtype)}},Cx={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Pb({a,b:s,transposeA:i,transposeB:o,backend:n})}};class Ex{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class $x{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(e,t),a.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(a.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=s&&(a.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const _x={kernelName:a.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:o,scale:l}=e;a.util.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.util.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.util.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,s,i];let d=null;null!=o&&(d=o.shape,c.push(o));let p=null;null!=l&&(p=l.shape,c.push(l));const h=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new $x(r.shape,s.shape,i.shape,d,p,u):new Ex(r.shape,s.shape,i.shape,d,p,u);return t.runWebGLProgram(h,c,c[0].dtype)}};class Ax{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Jg(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Rx.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Rx[t]} = start[${t}] + coords.${Rx[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Rx=["x","y","z","w","u","v"];class Fx{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Jg(this.rank),n=jy("coords",this.rank),r=jy("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Dx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:o}=r,[l,u]=a.slice_util.parseSliceParams(s,i,o);if(a.slice_util.assertParamsValid(s,l,u),0===a.util.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=Ry(e.values,l,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),d=a.slice_util.isSliceContinous(s.shape,l,u);if(c||!d){const e=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fx(u):new Ax(u),t=[l];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=a.slice_util.computeFlatOffset(t,a.util.computeStrides(e.shape));s.slice&&(l+=s.slice.flatOffset),o.slice={flatOffset:l,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i}(s,l,u,n)}const Ox={kernelName:a.Slice,backendName:"webgl",kernelFunc:Dx},Mx={kernelName:a.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:o}=r;a.util.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=a.backend_util.getReshaped(s.shape,i,l),c=a.backend_util.getPermuted(u.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,l),p=a.backend_util.getSliceBeginCoords(o,i.length),h=a.backend_util.getSliceSize(d,o,i.length),f=[],m=Eb({inputs:{x:s},backend:n,attrs:{shape:u}}),g=Lb({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Eb({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Dx({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},zx={kernelName:a.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=iy(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},Lx=wb({opSnippet:"return float(a != b);",cpuKernelImpl:Cy,dtype:"bool"}),Bx={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:Lx};function Px(e){const{inputs:t,backend:n}=e,{input:r}=t;return cb({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Vx={kernelName:a.Real,backendName:"webgl",kernelFunc:Px},Wx={kernelName:a.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return cb({inputs:{x:i},backend:r});const t=a.zeros(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=pb({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=Px({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!a.util.hasEncodingLoss(i.dtype,o)){const e=cb({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Jy(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",a.util.getTypedArrayFromDType("bool",1)),t=Lx({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Ux="return ceil(x);",Gx=vb({opSnippet:Ux,packedOpSnippet:Ux,cpuKernelImpl:ly}),Hx={kernelName:a.Ceil,backendName:"webgl",kernelFunc:Gx};class jx{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class qx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Xx={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:o}=r;let l;l=(0,a.env)().getBool("WEBGL_PACK_CLIP")?new qx(s.shape):new jx(s.shape);const u=[[i],[o]];return n.runWebGLProgram(l,[s],s.dtype,u)}};class Kx{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Qx(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Yx={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Kx(r.shape),i=[Qx(r,a.complexTensorInfos.real),Qx(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class Zx{constructor(e){this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Jx{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=Jg(r),i=jy("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let n=1;n<l.length;n++)l[n]=l[n-1]+e[n][t];const u=o[t],c=o.slice(-2),d=o.join();let p=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let e=1;e<l.length;e++){const t=l[e-1];p+=`\n        if (${u} < ${l[e]}  && ${u} >= ${l[e-1]}) {\n          return getChannel(\n            getT${e}(${ev(o,u,t)}),\n            vec2(${ev(c,u,t)}));\n        }`}const h=l.length,f=l[l.length-1];p+=`\n        return getChannel(\n          getT${h}(${ev(o,u,f)}),\n          vec2(${ev(c,u,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function ev(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function tv(e){const{inputs:t,backend:n}=e,{input:r}=t;return cb({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const nv={kernelName:a.Imag,backendName:"webgl",kernelFunc:tv};function rv(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Px({inputs:{input:e},backend:n}))),a=e.map((e=>tv({inputs:{input:e},backend:n}))),s=rv(r,t,n),i=rv(a,t,n),o=pb({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=a.util.sizeFromShape(e.shape.slice(t));return Eb({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=a.backend_util.computeOutShape(s.map((e=>e.shape)),1),l=1===s[0].shape[0],u=uy(i,o,r,l),c=a.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>(0,a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=rv(e.slice(0,r),t,n),s=rv(e.slice(r),t,n),i=rv([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if((0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Jx(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:i,outShape:o}=function(e,t,n){const r=a.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Eb({inputs:{x:e},attrs:{shape:[-1,a.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new Zx(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Eb({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function av(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=a.util.parseAxisParam(s,t[0].shape)[0],o=a.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===a.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>a.util.sizeFromShape(e.shape)>0));if(1===l.length)return cb({inputs:{x:l[0]},backend:n});const u=l.map((e=>e.shape));return a.backend_util.assertParamsConsistent(u,i),rv(l,i,n)}const sv={kernelName:a.Concat,backendName:"webgl",kernelFunc:av};class iv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class ov{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lv{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:d}=n,{left:p,top:h}=o,f=a*r,m=Ig(),g="channelsLast"===d,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${h};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${s}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function uv({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=r.texData.get(e.dataId),d=n.inChannels,p=u[0]*u[1]*u[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===p||1===h)&&d>1e3,b=u[2]%2!=0&&!!c.isPacked;if(!y&&(0,a.env)().getBool("WEBGL_LAZILY_UNPACK")&&(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const d=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,a.util.assert(yg(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const y=Eb({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const b=Pb({a:p,b:y,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),x=r.texData.get(b.dataId);a.util.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,x.shape=n.outShape,m=cb({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const a=Eb({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=Eb({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Pb({a,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:o});m=Eb({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(a),g.push(c),g.push(d)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function cv({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=u*c*d,y=h*p,b=[g,y],x=[],v=Eb({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Eb({inputs:{x:t},backend:r,attrs:{shape:[1,g,a.util.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new lv(b,v.shape,n),S=r.runWebGLProgram(k,[v],"float32"),N=Eb({inputs:{x:S},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(S),x.push(N);const I=null!=s,T=null!=i,C="leakyrelu"===l,E=l?kb(l,!0):null,$=new Sb(N.shape,w.shape,[1,y,n.outChannels],!0,!1,I,E,T,C),_=[N,w];if(s&&_.push(s),T&&_.push(i),C){const e=r.makeTensorInfo([],"float32",a.util.createScalarValue(o,"float32"));_.push(e),x.push(e)}const A=r.runWebGLProgram($,_,"float32"),R=Eb({inputs:{x:A},backend:r,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push(A);for(const e of x)r.disposeIntermediateTensorInfo(e);return R}const dv={kernelName:a.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r,p=a.backend_util.convertConv2DDataFormat(u),h=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,c,l,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if((0,a.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=cv({x:s,filter:i,convInfo:h,backend:n});else{const e=new iv(h);f=n.runWebGLProgram(e,[s,i],"float32")}else f=uv({x:s,filter:i,convInfo:h,backend:n});const m=Eb({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class pv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gv={kernelName:a.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r,p=a.backend_util.convertConv2DDataFormat(u),h=a.backend_util.computeConv2DInfo(s.shape,d,o,1,l,c,!1,p),f=new pv(h);return n.runWebGLProgram(f,[s,i],"float32")}},yv={kernelName:a.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r,p=a.backend_util.convertConv2DDataFormat(c),h=a.backend_util.computeConv2DInfo(o,i.shape,l,1,u,d,!1,p),f=new hv(h);return n.runWebGLProgram(f,[s,i],"float32")}},bv={kernelName:a.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,u,l),d=new ov(c);return n.runWebGLProgram(d,[s,i],"float32")}},xv={kernelName:a.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,pad:l,filterShape:u}=r,c=a.backend_util.computeConv3DInfo(s.shape,u,o,1,l),d=new fv(c);return n.runWebGLProgram(d,[s,i],"float32")}},vv={kernelName:a.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:o,strides:l,inputShape:u}=r,c=a.backend_util.computeConv3DInfo(u,i.shape,l,1,o),d=new mv(c);return n.runWebGLProgram(d,[s,i],"float32")}},wv=vb({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),kv={kernelName:a.Cos,backendName:"webgl",kernelFunc:wv},Sv=vb({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Nv={kernelName:a.Cosh,backendName:"webgl",kernelFunc:Sv};class Iv{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const p="bilinear"===r?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Tv={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new Iv(a.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[a,s,i],"float32")}};class Cv{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Ev(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Jg(r)} coords = getOutputCoords();\n        int end = ${$v(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${$v(r,"coords")} = idx;\n          val += getX(${Ev(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Ev(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function $v(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const _v={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r,u=s.shape.length,c=a.backend_util.getAxesPermutation([i],u);let d=s;null!=c&&(d=Lb({inputs:{x:s},backend:n,attrs:{perm:c}}));const p=a.backend_util.getInnerMostAxes(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${i}`);const h=d.shape[p];let f=cb({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new Cv(d.shape,!1,l),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new Cv(d.shape,o,l),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Lb({inputs:{x:f},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}},Av={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=iy(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=oy(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Rv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Fv={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:o}=r;a.util.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const l=s.shape[0],u="NHWC"===o?s.shape[1]:s.shape[2],c="NHWC"===o?s.shape[2]:s.shape[3],d="NHWC"===o?s.shape[3]:s.shape[1],p=u*i,h=c*i,f=d/(i*i),m=new Rv("NHWC"===o?[l,p,h,f]:[l,f,p,h],i,o);return n.runWebGLProgram(m,[s],s.dtype)}};class Dv{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Ov{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.outChannels/e.inChannels,o=e.inHeight,l=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,d=e.strideHeight,p=e.strideWidth,h=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,y=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<m;e++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*h};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let t=0;t<(y+1)/2;t++){const n=2*t,r=n*f;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===p){if(n<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,b+=1===f&&r>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${l}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${l} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,r+1<g)){const e=c%2==0?a.util.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(b+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,f>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${l}) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else r<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1 - ${p};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${l} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${l}) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,r+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${p};\n                  if(xCOffset >= 0 && xCOffset < ${l}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${l} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${p};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,r+1<g&&(b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<g&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<g&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let x="",v="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${d}, ${p});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}const Mv={kernelName:a.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;let d=u;null==d&&(d=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const p=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,d,l,c,!0);let h;return h=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Ov(p):new Dv(p),n.runWebGLProgram(h,[s,i],"float32")}};class zv{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lv{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Bv={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r,p=a.backend_util.computeConv2DInfo(s.shape,d,o,l,u,c,!0),h=new zv(p);return n.runWebGLProgram(h,[s,i],"float32")}},Pv={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r,p=a.backend_util.computeConv2DInfo(d,i.shape,o,l,u,c,!0),h=new Lv(p);return n.runWebGLProgram(h,[s,i],"float32")}};class Vv{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Wv={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=a.util.sizeFromShape(r.shape),o=Eb({inputs:{x:r},backend:n,attrs:{shape:[i]}}),l=new Vv(i),u=n.runWebGLProgram(l,[o],o.dtype),c=Eb({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class Uv{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Gv={kernelName:a.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=a.backend_util.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u);let d;const p=new Uv(c);d=n.runWebGLProgram(p,[s,i],"float32");const h=Eb({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),h}},Hv={kernelName:a.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:o,summedDims:l,idDims:u}=a.backend_util.decodeEinsumEquation(s,i.length);a.backend_util.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:d}=a.backend_util.getEinsumComputePath(l,u),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=a.backend_util.getEinsumPermutation(f,u[t]);let s;a.backend_util.isIdentityPermutation(e)?s=i[t]:(s=Lb({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);a.util.arraysEqual(s.shape,o)||(s=Eb({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===h?h=s:(h=Tb({inputs:{a:s,b:h},backend:n}),m.push(h))}e<p-1&&(c[e]>=0&&(h=Mb({inputs:{x:h},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},jv=vb({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),qv={kernelName:a.Elu,backendName:"webgl",kernelFunc:jv},Xv={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=(0,a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ub("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new lb("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},Kv=wb({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:cy}),Qv={kernelName:a.Equal,backendName:"webgl",kernelFunc:Kv},Yv=vb({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.backend_util.ERF_P};\n  float a1 = ${a.backend_util.ERF_A1};\n  float a2 = ${a.backend_util.ERF_A2};\n  float a3 = ${a.backend_util.ERF_A3};\n  float a4 = ${a.backend_util.ERF_A4};\n  float a5 = ${a.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Zv={kernelName:a.Erf,backendName:"webgl",kernelFunc:Yv},Jv="return exp(x);",ew=vb({opSnippet:Jv,packedOpSnippet:Jv,cpuKernelImpl:dy}),tw={kernelName:a.Exp,backendName:"webgl",kernelFunc:ew};function nw(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=s;return s<0&&(a.util.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),l.splice(u,0,1),Eb({inputs:{x:i},backend:r,attrs:{shape:l}})}const rw={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:nw},aw="return exp(x) - 1.0;",sw=vb({opSnippet:aw,packedOpSnippet:aw,cpuKernelImpl:py}),iw={kernelName:a.Expm1,backendName:"webgl",kernelFunc:sw};class ow{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function lw(e,t,n){const r=n.texData.get(e.dataId),s=a.util.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=Eb({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),l=o.shape,u=new ow("real",l,t),c=new ow("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=pb({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Eb({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const uw={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return lw(r,!1,n)}};class cw{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function dw(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||a.util.inferDtype(s),"string"===i){const e=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new cw(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const pw={kernelName:a.Fill,backendName:"webgl",kernelFunc:dw};class hw{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const fw={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new hw(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},mw="return floor(x);",gw=vb({opSnippet:mw,packedOpSnippet:mw,cpuKernelImpl:hy}),yw={kernelName:a.Floor,backendName:"webgl",kernelFunc:gw},bw=wb({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),xw={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:bw};class vw{constructor(e){this.variableNames=["A"];const t=Ig(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ww{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ig(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const kw={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[c,u],p=[c,u,i];(l||o)&&(null==Sw&&(Sw=document.createElement("canvas").getContext("2d")),Sw.canvas.width=u,Sw.canvas.height=c,Sw.drawImage(s,0,0,u,c),s=Sw.canvas);const h=n.makeTensorInfo(d,"int32");n.texData.get(h.dataId).usage=Qm.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),s);const f=(0,a.env)().getBool("WEBGL_PACK")?new ww(p):new vw(p),m=n.runWebGLProgram(f,[h],"int32");return n.disposeData(h.dataId),m}};let Sw;const Nw={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=a.backend_util.convertConv2DDataFormat(d),y=a.backend_util.computeConv2DInfo(s.shape,i.shape,u,p,c,h,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,a.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=cv({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const e=null!=o,t=null!=l,r="leakyrelu"===f,u=f?kb(f,!1):null,c=new iv(y,e,u,t,r),d=[s,i];if(o&&d.push(o),l&&d.push(l),r){const e=n.makeTensorInfo([],"float32",a.util.createScalarValue(m,"float32"));d.push(e),x.push(e)}b=n.runWebGLProgram(c,d,"float32")}else b=uv({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});const v=Eb({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},Iw={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const y=a.backend_util.computeConv2DInfo(s.shape,i.shape,u,g,c,p,!0),b=(0,a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=h?kb(h,b):null,v=[s,i],w=null!=o,k=null!=l,S="leakyrelu"===h;if(w&&v.push(o),k&&v.push(l),S){const e=n.makeTensorInfo([],"float32",a.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let N;N=b?new Ov(y,w,x,k,S):new Dv(y,w,x,k,S);const I=n.runWebGLProgram(N,v,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class Tw{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Jg(t.length),a=Jg(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Cw={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,o=i[i.length-1],l=a.util.sizeFromShape(r.shape),[u,c,d,p]=a.backend_util.prepareAndValidate(r,s),h=Eb({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),f=Eb({inputs:{x:r},backend:n,attrs:{shape:[a.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=fy(e,t,r.dtype,c,o,d,p,r.shape,l);return n.makeTensorInfo(u,r.dtype,a.values)}const m=new Tw(o,p,[c,d]),g=n.runWebGLProgram(m,[f,h],f.dtype),y=Eb({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Ew{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Jg(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function $w(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:o,batchDims:l}=r,u=a.util.parseAxisParam(o,s.shape)[0],c=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,u,l),d=a.util.sizeFromShape(i.shape),p=[],h=Eb({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Eb({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(h),p.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=my(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Ew(h.shape,m),y=n.runWebGLProgram(g,[h,f],h.dtype);p.push(y);const b=Eb({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const _w={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:$w},Aw=wb({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gy,dtype:"bool"}),Rw={kernelName:a.Greater,backendName:"webgl",kernelFunc:Aw},Fw=wb({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:yy}),Dw={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:Fw},Ow={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return lw(r,!0,n)}},Mw=vb({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),zw={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:Mw},Lw=vb({opSnippet:"return float(isinf(x));",dtype:"bool"}),Bw={kernelName:a.IsInf,backendName:"webgl",kernelFunc:Lw},Pw=vb({opSnippet:"return float(isnan(x));",dtype:"bool"}),Vw={kernelName:a.IsNan,backendName:"webgl",kernelFunc:Pw},Ww=wb({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:by,dtype:"bool"}),Uw={kernelName:a.Less,backendName:"webgl",kernelFunc:Ww},Gw=wb({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:xy,dtype:"bool"}),Hw={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:Gw},jw={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=vy(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},qw=vb({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:wy}),Xw={kernelName:a.Log,backendName:"webgl",kernelFunc:qw},Kw=vb({opSnippet:"return log(1.0 + x);"}),Qw={kernelName:a.Log1p,backendName:"webgl",kernelFunc:Kw},Yw=wb({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Zw={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:Yw},Jw=vb({opSnippet:"return float(!(x >= 1.0));"}),ek={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:Jw},tk=wb({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),nk={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:tk};class rk{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class ak{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const sk={kernelName:a.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r,c=(0,a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new ak(s.shape,i,o,l,u):new rk(s.shape,i,o,l,u);return n.runWebGLProgram(c,[s],s.dtype)}};class ik{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const ok={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,d=new ik(a.shape,o,l,u,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function lk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l),p=null!=d,h=n.shouldExecuteOnCPU([s]);let f=s;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=s.shape[d[e]];const r=Uy(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=Ob(s,d,n);c=a.backend_util.getInnerMostAxes(c.length,l)}a.backend_util.assertAxesAreInnerMostDims("max",c,l);const[m,g]=a.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=a.backend_util.expandShapeToKeepDim(m,u)),h){const e=n.texData.get(f.dataId).values,t=ky(e,a.util.sizeFromShape(g),b,s.dtype);y=n.makeTensorInfo(b,s.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const s=a.util.sizeFromShape(t),i=Eb({inputs:{x:e},attrs:{shape:[a.util.sizeFromShape(e.shape)/s,s]},backend:r}),o=Rb(i,e.dtype,"max",r),l=Eb({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const uk={kernelName:a.Max,backendName:"webgl",kernelFunc:lk},ck=wb({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Sy}),dk={kernelName:a.Maximum,backendName:"webgl",kernelFunc:ck},pk={kernelName:a.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Sg(s,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=a.backend_util.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&a.util.arraysEqual(c.inShape,c.outShape))return cb({inputs:{x:s},backend:n});const d=new xx(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},hk={kernelName:a.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],l,c,u),p=new vx(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class fk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,p=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gk={kernelName:a.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,p=a.backend_util.computePool3DInfo(o.shape,l,u,[1,1,1],c,d),h=new vx(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new mk(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},yk={kernelName:a.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:o}=t,l=i;Sg([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:p}=r,h=a.backend_util.computePool2DInfo(l.shape,u,c,1,d,p),f=new xx(h,"max",!0),m=n.runWebGLProgram(f,[l],l.dtype),g=new fk(h),y=n.runWebGLProgram(g,[s,m],l.dtype);return n.disposeIntermediateTensorInfo(m),y}},bk={kernelName:a.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;a.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=a.backend_util.computePool2DInfo(r.shape,s,i,c,o),[p,h]=function(e,t,n,r){let a=new xx(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new xx(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,l,d,u);return[p,h]}},xk={kernelName:a.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,o=n,l=r.shape.length,u=a.util.parseAxisParam(i,r.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l),p=null!=d,h=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];const n=Uy(e,r.shape,r.dtype,d,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Ob(r,d,o);f.push(m),c=a.backend_util.getInnerMostAxes(c.length,l)}a.backend_util.assertAxesAreInnerMostDims("sum",c,l);const[g,y]=a.backend_util.computeOutAndReduceShapes(m.shape,c);let b=g;s&&(b=a.backend_util.expandShapeToKeepDim(g,u));const x=function(e,t,n,r){const s=a.util.sizeFromShape(t),i=Eb({inputs:{x:e},attrs:{shape:[a.util.sizeFromShape(e.shape)/s,s]},backend:r}),o=Rb(i,"float32","mean",r),l=Eb({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},vk={kernelName:a.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=a.util.parseAxisParam(i,s.shape);let c=u;const d=a.backend_util.getAxesPermutation(c,l);let p=s;null!=d&&(p=Lb({inputs:{x:s},backend:n,attrs:{perm:d}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",c,l);const[h,f]=a.backend_util.computeOutAndReduceShapes(p.shape,c),m=Eb({inputs:{x:p},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),g=Rb(m,m.dtype,"min",n);let y;return y=Eb(o?{inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},wk=wb({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ny}),kk={kernelName:a.Minimum,backendName:"webgl",kernelFunc:wk};class Sk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Jg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Nk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Jg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=jy("rc",r),l=jy("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Ik={kernelName:a.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,o=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nk(r.shape,s,i):new Sk(r.shape,s,i);return t.runWebGLProgram(o,[r],r.dtype)}},Tk=wb({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ck={kernelName:a.Mod,backendName:"webgl",kernelFunc:Tk};class Ek{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const $k=wb({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),_k={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:$k},Ak="return a - b;",Rk=wb({opSnippet:Ak,packedOpSnippet:Ak,supportsComplex:!0,cpuKernelImpl:Py}),Fk={kernelName:a.Sub,backendName:"webgl",kernelFunc:Rk};function Dk(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,o=a.util.parseAxisParam([i],s.shape),l=lk({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=a.backend_util.expandShapeToKeepDim(l.shape,o),c=Eb({inputs:{x:l},backend:n,attrs:{shape:u}}),d=Rk({inputs:{a:s,b:c},backend:n}),p=ew({inputs:{x:d},backend:n}),h=Mb({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=Eb({inputs:{x:h},backend:n,attrs:{shape:u}}),m=$k({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Ok={kernelName:a.Softmax,backendName:"webgl",kernelFunc:Dk},Mk={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:Dk({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Ek(u,c,s),p=[[i]],h=n.runWebGLProgram(d,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),h}},zk="return -x;",Lk={kernelName:a.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Ty(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=(0,a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new nb(r.shape,zk):new Jy(r.shape,zk),n.runWebGLProgram(s,[r],r.dtype)}},Bk=a.kernel_impls.nonMaxSuppressionV3Impl,Pk={kernelName:a.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r,c=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=Bk(c,d,o,l,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Vk=a.kernel_impls.nonMaxSuppressionV4Impl,Wk={kernelName:a.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r,d=n.readSync(s.dataId),p=n.readSync(i.dataId),{selectedIndices:h,validOutputs:f}=Vk(d,p,o,l,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Uk=a.kernel_impls.nonMaxSuppressionV5Impl,Gk={kernelName:a.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r,d=n.readSync(s.dataId),p=n.readSync(i.dataId),h=o,f=l,m=u,g=c,{selectedIndices:y,selectedScores:b}=Uk(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Hk{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const jk={kernelName:a.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:i,onValue:o,offValue:l}=r,u=a.util.sizeFromShape(s.shape),c=new Hk(u,i,o,l),d=Eb({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const h=Eb({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),h}};function qk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Px({inputs:{input:r},backend:n}),t=qk({inputs:{x:e},backend:n}),a=tv({inputs:{input:r},backend:n}),s=qk({inputs:{x:a},backend:n}),i=pb({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return dw({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Xk={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:qk},Kk={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Px({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=tv({inputs:{input:a},backend:r}),i=qk({inputs:{x:s},backend:r}),o=pb({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return dw({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},Qk={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return nw({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{a.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=av({inputs:t.map((e=>{const t=nw({inputs:{input:e},backend:n,attrs:{dim:s}});return l.push(t),t})),backend:n,attrs:{axis:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Yk{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Jg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Zk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Jg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=jy("rc",r),l=jy("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Jk=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:o}=r,l=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zk(s.shape,i,o):new Yk(s.shape,i,o),u=[[o]];return n.runWebGLProgram(l,[s],s.dtype,u)},eS={kernelName:a.PadV2,backendName:"webgl",kernelFunc:Jk},tS=wb({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),nS={kernelName:a.Pow,backendName:"webgl",kernelFunc:tS},rS={kernelName:a.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:o}=r,l=s.shape.length,u=[],c=a.util.parseAxisParam(i,s.shape);let d=c;const p=a.backend_util.getAxesPermutation(d,l);let h,f=s;if(null!=p&&(f=Lb({inputs:{x:s},backend:n,attrs:{perm:p}}),d=a.backend_util.getInnerMostAxes(d.length,l),u.push(f)),a.backend_util.assertAxesAreInnerMostDims("prod",d,l),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ey(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.backend_util.computeOutAndReduceShapes(f.shape,d),r=a.util.sizeFromShape(t),i=Eb({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Rb(i,(0,a.sumOutType)(s.dtype),"prod",n);h=Eb({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(h);const e=a.backend_util.expandShapeToKeepDim(h.shape,c);h=Eb({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},aS=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=$y(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},sS={kernelName:a.Range,backendName:"webgl",kernelFunc:aS},iS=vb({opSnippet:"return 1.0 / x;"}),oS={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:iS},lS=vb({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),uS={kernelName:a.Relu,backendName:"webgl",kernelFunc:lS},cS=vb({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),dS={kernelName:a.Relu6,backendName:"webgl",kernelFunc:cS};class pS{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class hS{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const fS={kernelName:a.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hS(s.shape,u,c,i,o):new pS(s.shape,u,c,i,o);return n.runWebGLProgram(d,[s],"float32")}};class mS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const gS={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new mS(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class yS{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class bS{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const xS={kernelName:a.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,d=(0,a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bS(s.shape,u,c,i,o):new yS(s.shape,u,c,i,o);return n.runWebGLProgram(d,[s],s.dtype)}};class vS{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wS={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new vS(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class kS{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Jg(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class SS{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=jy("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Jg(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const NS={kernelName:a.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,o=s.shape.length,l=a.util.parseAxisParam(i,s.shape);if(0===o)return cb({inputs:{x:s},backend:n});const u=(0,a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SS(s.shape,l):new kS(s.shape,l);return n.runWebGLProgram(u,[s],s.dtype)}};class IS{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const TS={kernelName:a.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:o}=t,l=n,u=new IS(r.shape,i),[c,d]=a.backend_util.getImageCenter(o,r.shape[1],r.shape[2]),p=[[c,d,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},CS=vb({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ES={kernelName:a.Round,backendName:"webgl",kernelFunc:CS},$S=vb({opSnippet:"return inversesqrt(x);",cpuKernelImpl:_y}),_S={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:$S};class AS{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Jg(a.length),l=Jg(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const RS={kernelName:a.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=a.backend_util.calculateShapes(i,s,o),h=[p/c,c];if(0===p)return n.makeTensorInfo(o,s.dtype);const f=Eb({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=Eb({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new AS(u,l,f.shape.length,m.shape.length,d,h),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Eb({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class FS{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=Jg(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const DS={kernelName:a.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,o=new FS(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],(0,a.upcastType)(s.dtype,i.dtype))}},OS=vb({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.backend_util.SELU_SCALEALPHA};\n  float scale = ${a.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MS={kernelName:a.Selu,backendName:"webgl",kernelFunc:OS},zS=vb({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),LS={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:zS},BS=vb({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),PS={kernelName:a.Sign,backendName:"webgl",kernelFunc:BS},VS=vb({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),WS={kernelName:a.Sin,backendName:"webgl",kernelFunc:VS},US=vb({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GS={kernelName:a.Sinh,backendName:"webgl",kernelFunc:US},HS=vb({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),jS={kernelName:a.Softplus,backendName:"webgl",kernelFunc:HS},qS={kernelName:a.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:o}=r;a.util.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+i.length;e<s.shape.length;++e)u.push([0,0]);const c=[],d=Jk({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=a.backend_util.getReshaped(d.shape,i,l,!1),h=a.backend_util.getPermuted(p.length,i.length,!1),f=a.backend_util.getReshapedPermuted(d.shape,i,l,!1),m=Eb({inputs:{x:d},backend:n,attrs:{shape:p}}),g=Lb({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Eb({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},XS={kernelName:a.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,p,h,f,m]=Fy(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},KS={kernelName:a.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,d]=Dy(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},QS={kernelName:a.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=Oy(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},YS={kernelName:a.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=Oy(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},ZS={kernelName:a.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,strides:d,outputSize:p}=a.backend_util.calculateShapes(i,s,l),h=new AS(c,u,s.shape.length,i.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[i,s,o],i.dtype),m=Eb({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(f),m}},JS={kernelName:a.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=r,l=a.util.parseAxisParam(o,s.shape)[0],u=a.backend_util.prepareSplitSize(s,i,l),c=s.shape.length,d=new Array(c).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[l]=e;const r=Dx({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[l]+=e,r}))}},eN=vb({opSnippet:"return sqrt(x);"}),tN={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:eN},nN=vb({opSnippet:"return x * x;"}),rN={kernelName:a.Square,backendName:"webgl",kernelFunc:nN},aN="return (a - b) * (a - b);",sN=wb({opSnippet:aN,packedOpSnippet:aN}),iN={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:sN},oN={kernelName:a.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Jy(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class lN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Jg(n.length),s=Jg(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const uN={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=a.slice_util.sliceInfo(s.shape,i,o,l,u,c,d,p,h),v=Eb({inputs:{x:s},backend:n,attrs:{shape:b}});let w;if(f){const e=Dx({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=Eb({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,s.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=(0,a.buffer)(v.shape,v.dtype,e),r=My(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new lN(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const k=Eb({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},cN={kernelName:a.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=zy(p,h,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},dN={kernelName:a.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=Ly(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},pN={kernelName:a.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=By(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},hN=vb({opSnippet:"return tan(x);"}),fN={kernelName:a.Tan,backendName:"webgl",kernelFunc:hN},mN=vb({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),gN={kernelName:a.Tanh,backendName:"webgl",kernelFunc:mN};class yN{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Jg(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function bN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>a.util.decodeString(e))):e,r=(0,a.buffer)(s.shape,s.dtype,t),o=Vy(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new yN(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const xN={kernelName:a.Tile,backendName:"webgl",kernelFunc:bN};class vN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class wN{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function kN(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function SN(e){let t=1;for(;t<e;)t*=2;return t}const NN={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:o}=r,l=(0,a.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,a.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([s])||d<l||i>u){const e=n.readSync(s.dataId),[t,r]=Wy(e,c,s.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[s,dw({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(s):s,m=a.util.sizeFromShape(c)/d,g=Eb({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&kN(n,f);const y=SN(i),b=SN(d);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,r)=>{const a=v(),s=new vN(r),i=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,a,"int32",i),kN(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=v(),r=new wN([m,e/2]),a=[[d],[null===x?1:0],[y]],s=x;x=n.runWebGLProgram(r,t,"int32",a),kN(n,s);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=Dx({inputs:{x},backend:n,attrs:{begin:0,size:[m,i]}}),kN(n,k);let S=$w({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});kN(n,g);const N=c.slice(0,-1);N.push(i),k=x,x=Eb({inputs:{x},attrs:{shape:N},backend:n}),kN(n,k);const I=S;return S=Eb({inputs:{x:S},attrs:{shape:N},backend:n}),kN(n,I),[S,x]}};class IN{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const TN={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,p,h]=a.shape,[f,m]=null!=u?u:[d,p],g=new IN(d,p,i,o,l,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},CN={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Sg(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=Gy(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},EN={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=i.shape[e]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;const t=Dx({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=Eb({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class $N{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const _N=[sk,ok,Vb,Ub,Hb,qb,Qb,Jb,ex,tx,ox,lx,cx,px,gx,fx,bx,kx,wx,Ix,Tx,Cx,_x,Mx,zx,Wx,Hx,Xx,Yx,hb,sv,gv,yv,dv,xv,vv,bv,kv,Nv,Tv,_v,Av,Fv,Bv,Pv,Mv,Wv,Gv,Hv,qv,Xv,Qv,Zv,tw,rw,iw,uw,pw,fw,yw,xw,kw,Nw,Iw,Cw,_w,Rw,Dw,db,Ow,nv,zw,Bw,Vw,gb,Uw,Hw,jw,Qw,Xw,Zw,ek,nk,uk,hk,pk,gk,yk,bk,dk,xk,vk,kk,Ik,Ck,Mk,Cb,Lk,Pk,Wk,Gk,Bx,jk,Kk,Qk,eS,nS,xb,rS,sS,Vx,_k,oS,dS,uS,$b,fS,gS,xS,wS,NS,TS,ES,_S,RS,DS,MS,LS,PS,WS,GS,Ox,Ok,jS,qS,XS,KS,QS,YS,ZS,JS,tN,rN,iN,oN,uN,cN,dN,pN,Fk,zb,fN,gN,xN,NN,TN,Bb,CN,EN,{kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:o}=r,l=s.shape.length,u=[];let c=0;const d=a.backend_util.getAxesPermutation([c],l);let p=s;null!=d&&(p=Lb({inputs:{x:s},backend:n,attrs:{perm:d}}),u.push(p),c=a.backend_util.getInnerMostAxes(1,l)[0]);const h=a.backend_util.segment_util.computeOutShape(p.shape,c,o),f=a.util.sizeFromShape([p.shape[c]]),m=Eb({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=(0,a.sumOutType)(s.dtype),y=(e,t,r,s,i)=>{const o=e.shape[0],l=e.shape[1],c=a.backend_util.segment_util.segOpComputeOptimalWindowSize(l,i),d=new $N({windowSize:c,inSize:l,batchSize:o,numSegments:i},t),p=n.compileAndRun(d,[e,r],s);if(u.push(p),p.shape[1]===i)return p;const h=aS({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=bN({inputs:{x:h},backend:n,attrs:{reps:[l/c]}});return u.push(h),u.push(f),y(p,t,f,s,i)},b=Eb({inputs:{x:y(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:h}});let x=b;if(null!=d){u.push(b);const e=a.backend_util.getUndoAxesPermutation(d);x=Lb({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Xk];for(const e of _N)(0,a.registerKernel)(e);a.version_core,cu.version_converter;var AN=n(8430),RN=n(8722),FN=n.n(RN),DN=n(3379),ON=n.n(DN),MN=n(7795),zN=n.n(MN),LN=n(569),BN=n.n(LN),PN=n(3565),VN=n.n(PN),WN=n(9216),UN=n.n(WN),GN=n(4589),HN=n.n(GN),jN=n(9087),qN={};function XN(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}qN.styleTagTransform=HN(),qN.setAttributes=VN(),qN.insert=BN().bind(null,"head"),qN.domAPI=zN(),qN.insertStyleElement=UN(),ON()(jN.Z,qN),jN.Z&&jN.Z.locals&&jN.Z.locals;var KN=function(e,t){e.forEach((function(e){var n,r,a=(n=e.bbox,r=4,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(s.push(r.value),!t||s.length!==t);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(o)throw a}}return s}}(n,r)||function(e,t){if(e){if("string"==typeof e)return XN(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?XN(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=a[0],i=a[1],o=a[2],l=a[3],u=e.class,c="green";t.strokeStyle=c,t.fillStyle=c,t.font="20px Arial",t.beginPath(),t.fillText(u,s,i),t.rect(s,i,l,o),t.stroke()}))};function QN(e,t,n,r,a,s,i){try{var o=e[s](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,a)}function YN(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var s=e.apply(t,n);function i(e){QN(s,r,a,i,o,"next",e)}function o(e){QN(s,r,a,i,o,"throw",e)}i(void 0)}))}}const ZN=function(){var e=(0,t.useRef)(null),n=(0,t.useRef)(null),r=function(){var e=YN(regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,AN.load();case 2:t=e.sent,setInterval((function(){a(t)}),10);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),a=function(){var t=YN(regeneratorRuntime.mark((function t(r){var a,s,i,o,l;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(void 0===e.current||null===e.current||4!==e.current.video.readyState){t.next=14;break}return a=e.current.video,s=e.current.video.videoWidth,i=e.current.video.videoHeight,e.current.video.width=s,e.current.video.height=i,n.current.width=s,n.current.height=i,t.next=10,r.detect(a);case 10:o=t.sent,console.log(o),l=n.current.getContext("2d"),KN(o,l);case 14:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();return(0,t.useEffect)((function(){r()}),[]),t.createElement("div",{className:"App"},t.createElement("header",{className:"App-header"},t.createElement(FN(),{ref:e,muted:!0,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zindex:9,width:640,height:480}}),t.createElement("canvas",{ref:n,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",left:0,right:0,textAlign:"center",zindex:8,width:640,height:480}})))};r.render(t.createElement(ZN,null),document.getElementById("main"))})()})();